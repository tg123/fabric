// Code generated by "go run github.com/tg123/fabric/mkidl"; DO NOT EDIT.
package fabric

import (
	"golang.org/x/sys/windows"
	"time"
	"unsafe"
)

const FabricInvalidSequenceNumber = -1
const FabricAutoSequenceNumber = 0
const FabricInvalidAtomicGroupId = -1
const FabricInvalidOperationIndex = 0xffffffff
const FabricIgnoreSequenceNumberCheck = 0
const FabricInvalidInstanceId = -1
const FabricInvalidNodeInstanceId = 0
const FabricInvalidReplicaId = -1
const FabricHealthReportInfiniteTtl = 0
const FabricSystemApplication = "fabric:/System"
const FabricInfiniteDuration = 0xffffffff

type FabricErrorCode int64

const (
	FabricErrorFirstReservedHresult FabricErrorCode = 0x80071bbc
	FabricErrorLastReservedHresult  FabricErrorCode = 0x80071d4b
	FabricErrorCommunicationError   FabricErrorCode = iota - 2 + FabricErrorFirstReservedHresult
	FabricErrorInvalidAddress
	FabricErrorInvalidNameUri
	FabricErrorInvalidPartitionKey
	FabricErrorNameAlreadyExists
	FabricErrorNameDoesNotExist
	FabricErrorNameNotEmpty
	FabricErrorNodeNotFound
	FabricErrorNodeIsUp
	FabricErrorNoWriteQuorum
	FabricErrorNotPrimary
	FabricErrorNotReady
	FabricErrorOperationNotComplete
	FabricErrorPropertyDoesNotExist
	FabricErrorReconfigurationPending
	FabricErrorReplicationQueueFull
	FabricErrorServiceAlreadyExists
	FabricErrorServiceDoesNotExist
	FabricErrorServiceOffline
	FabricErrorServiceMetadataMismatch
	FabricErrorServiceAffinityChainNotSupported
	FabricErrorServiceTypeAlreadyRegistered
	FabricErrorServiceTypeNotRegistered
	FabricErrorValueTooLarge
	FabricErrorValueEmpty
	FabricErrorPropertyCheckFailed
	FabricErrorWriteConflict
	FabricErrorEnumerationCompleted
	FabricErrorApplicationTypeProvisionInProgress
	FabricErrorApplicationTypeAlreadyExists
	FabricErrorApplicationTypeNotFound
	FabricErrorApplicationTypeInUse
	FabricErrorApplicationAlreadyExists
	FabricErrorApplicationNotFound
	FabricErrorApplicationUpgradeInProgress
	FabricErrorApplicationUpgradeValidationError
	FabricErrorServiceTypeNotFound
	FabricErrorServiceTypeMismatch
	FabricErrorServiceTypeTemplateNotFound
	FabricErrorConfigurationSectionNotFound
	FabricErrorConfigurationParameterNotFound
	FabricErrorInvalidConfiguration
	FabricErrorImagebuilderValidationError
	FabricErrorPartitionNotFound
	FabricErrorReplicaDoesNotExist
	FabricErrorServiceGroupAlreadyExists
	FabricErrorServiceGroupDoesNotExist
	FabricErrorProcessDeactivated
	FabricErrorProcessAborted
	FabricErrorUpgradeFailed
	FabricErrorInvalidCredentialType
	FabricErrorInvalidX509FindType
	FabricErrorInvalidX509StoreLocation
	FabricErrorInvalidX509StoreName
	FabricErrorInvalidX509Thumbprint
	FabricErrorInvalidProtectionLevel
	FabricErrorInvalidX509Store
	FabricErrorInvalidSubjectName
	FabricErrorInvalidAllowedCommonNameList
	FabricErrorInvalidCredentials
	FabricErrorDecryptionFailed
	FabricErrorConfigurationPackageNotFound
	FabricErrorDataPackageNotFound
	FabricErrorCodePackageNotFound
	FabricErrorServiceEndpointResourceNotFound
	FabricErrorInvalidOperation
	FabricErrorObjectClosed
	FabricErrorTimeout
	FabricErrorFileNotFound
	FabricErrorDirectoryNotFound
	FabricErrorInvalidDirectory
	FabricErrorPathTooLong
	FabricErrorImagestoreIoerror
	FabricErrorCorruptedImageStoreObjectFound
	FabricErrorApplicationNotUpgrading
	FabricErrorApplicationAlreadyInTargetVersion
	FabricErrorImagebuilderUnexpectedError
	FabricErrorFabricVersionNotFound
	FabricErrorFabricVersionInUse
	FabricErrorFabricVersionAlreadyExists
	FabricErrorFabricAlreadyInTargetVersion
	FabricErrorFabricNotUpgrading
	FabricErrorFabricUpgradeInProgress
	FabricErrorFabricUpgradeValidationError
	FabricErrorHealthMaxReportsReached
	FabricErrorHealthStaleReport
	FabricErrorKeyTooLarge
	FabricErrorKeyNotFound
	FabricErrorSequenceNumberCheckFailed
	FabricErrorEncryptionFailed
	FabricErrorInvalidAtomicGroup
	FabricErrorHealthEntityNotFound
	FabricErrorServiceManifestNotFound
	FabricErrorReliableSessionTransportStartupFailure
	FabricErrorReliableSessionAlreadyExists
	FabricErrorReliableSessionCannotConnect
	FabricErrorReliableSessionManagerExists
	FabricErrorReliableSessionRejected
	FabricErrorReliableSessionManagerAlreadyListening
	FabricErrorReliableSessionManagerNotFound
	FabricErrorReliableSessionManagerNotListening
	FabricErrorInvalidServiceType
	FabricErrorImagebuilderTimeout
	FabricErrorImagebuilderAccessDenied
	FabricErrorImagebuilderInvalidMsiFile
	FabricErrorServiceTooBusy
	FabricErrorTransactionNotActive
	FabricErrorRepairTaskAlreadyExists
	FabricErrorRepairTaskNotFound
	FabricErrorReliableSessionNotFound
	FabricErrorReliableSessionQueueEmpty
	FabricErrorReliableSessionQuotaExceeded
	FabricErrorReliableSessionServiceFaulted
	FabricErrorReliableSessionInvalidTargetPartition
	FabricErrorTransactionTooLarge
	FabricErrorReplicationOperationTooLarge
	FabricErrorInstanceIdMismatch
	FabricErrorUpgradeDomainAlreadyCompleted
	FabricErrorNodeHasNotStoppedYet
	FabricErrorInsufficientClusterCapacity
	FabricErrorInvalidPackageSharingPolicy
	FabricErrorPredeploymentNotAllowed
	FabricErrorInvalidBackupSetting
	FabricErrorMissingFullBackup
	FabricErrorBackupInProgress
	FabricErrorDuplicateServiceNotificationFilterName
	FabricErrorInvalidReplicaOperation
	FabricErrorInvalidReplicaState
	FabricErrorLoadbalancerNotReady
	FabricErrorInvalidPartitionOperation
	FabricErrorPrimaryAlreadyExists
	FabricErrorSecondaryAlreadyExists
	FabricErrorBackupDirectoryNotEmpty
	FabricErrorForceNotSupportedForReplicaOperation
	FabricErrorAcquireFileLockFailed
	FabricErrorConnectionDenied
	FabricErrorServerAuthenticationFailed
	FabricErrorConstraintKeyUndefined
	FabricErrorMultithreadedTransactionsNotAllowed
	FabricErrorInvalidX509NameList
	FabricErrorVerboseFmPlacementHealthReportingRequired
	FabricErrorGatewayNotReachable
	FabricErrorUserRoleClientCertificateNotConfigured
	FabricErrorTransactionAborted
	FabricErrorCannotConnect
	FabricErrorMessageTooLarge
	FabricErrorConstraintNotSatisfied
	FabricErrorEndpointNotFound
	FabricErrorApplicationUpdateInProgress
	FabricErrorDeleteBackupFileFailed
	FabricErrorConnectionClosedByRemoteEnd
	FabricErrorInvalidTestCommandState
	FabricErrorTestCommandOperationIdAlreadyExists
	FabricErrorCmOperationFailed
	FabricErrorImagebuilderReservedDirectoryError
	FabricErrorCertificateNotFound
	FabricErrorChaosAlreadyRunning
	FabricErrorFabricDataRootNotFound
	FabricErrorInvalidRestoreData
	FabricErrorDuplicateBackups
	FabricErrorInvalidBackupChain
	FabricErrorStopInProgress
	FabricErrorAlreadyStopped
	FabricErrorNodeIsDown
	FabricErrorNodeTransitionInProgress
	FabricErrorInvalidBackup
	FabricErrorInvalidInstanceId
	FabricErrorInvalidDuration
	FabricErrorRestoreSafeCheckFailed
	FabricErrorConfigUpgradeFailed
	FabricErrorUploadSessionRangeNotSatisfiable
	FabricErrorUploadSessionIdConflict
	FabricErrorInvalidPartitionSelector
	FabricErrorInvalidReplicaSelector
	FabricErrorDnsServiceNotFound
	FabricErrorInvalidDnsName
	FabricErrorDnsNameInUse
	FabricErrorComposeDeploymentAlreadyExists
	FabricErrorComposeDeploymentNotFound
	FabricErrorInvalidForStatefulServices
	FabricErrorInvalidForStatelessServices
	FabricErrorOnlyValidForStatefulPersistentServices
	FabricErrorInvalidUploadSessionId
	FabricErrorBackupNotEnabled
	FabricErrorBackupIsEnabled
	FabricErrorBackupPolicyDoesNotExist
	FabricErrorBackupPolicyAlreadyExists
	FabricErrorRestoreInProgress
	FabricErrorRestoreSourceTargetPartitionMismatch
	FabricErrorFaultAnalysisServiceNotEnabled
	FabricErrorContainerNotFound
	FabricErrorObjectDisposed
	FabricErrorNotReadable
	FabricErrorBackupcopierUnexpectedError
	FabricErrorBackupcopierTimeout
	FabricErrorBackupcopierAccessDenied
	FabricErrorInvalidServiceScalingPolicy
	FabricErrorSingleInstanceApplicationAlreadyExists
	FabricErrorSingleInstanceApplicationNotFound
	FabricErrorVolumeAlreadyExists
	FabricErrorVolumeNotFound
	FabricErrorDatabaseMigrationInProgress
	FabricErrorCentralSecretServiceGeneric
	FabricErrorSecretInvalid
	FabricErrorSecretVersionAlreadyExists
	FabricErrorSingleInstanceApplicationUpgradeInProgress
	FabricErrorOperationNotSupported
	FabricErrorComposeDeploymentNotUpgrading
	FabricErrorSecretTypeCannotBeChanged
	FabricErrorNetworkNotFound
	FabricErrorNetworkInUse
	FabricErrorEndpointNotReferenced
	FabricErrorLastUsedHresult FabricErrorCode = FabricErrorEndpointNotReferenced
)

type FabricClientRole int32

const (
	FabricClientRoleUnknown FabricClientRole = 0x0000
	FabricClientRoleUser    FabricClientRole = 0x0001
	FabricClientRoleAdmin   FabricClientRole = 0x0002
)

type FabricQueryServiceStatus int32

const (
	FabricQueryServiceStatusUnknown   FabricQueryServiceStatus = 0x0000
	FabricQueryServiceStatusActive    FabricQueryServiceStatus = 0x0001
	FabricQueryServiceStatusUpgrading FabricQueryServiceStatus = 0x0002
	FabricQueryServiceStatusDeleting  FabricQueryServiceStatus = 0x0003
	FabricQueryServiceStatusCreating  FabricQueryServiceStatus = 0x0004
	FabricQueryServiceStatusFailed    FabricQueryServiceStatus = 0x0005
)

type FabricQueryNodeStatus int32

const (
	FabricQueryNodeStatusInvalid   FabricQueryNodeStatus = 0x0000
	FabricQueryNodeStatusUp        FabricQueryNodeStatus = 0x0001
	FabricQueryNodeStatusDown      FabricQueryNodeStatus = 0x0002
	FabricQueryNodeStatusEnabling  FabricQueryNodeStatus = 0x0003
	FabricQueryNodeStatusDisabling FabricQueryNodeStatus = 0x0004
	FabricQueryNodeStatusDisabled  FabricQueryNodeStatus = 0x0005
	FabricQueryNodeStatusUnknown   FabricQueryNodeStatus = 0x0006
	FabricQueryNodeStatusRemoved   FabricQueryNodeStatus = 0x0007
)

type FabricQueryNodeStatusFilter int32

const (
	FabricQueryNodeStatusFilterDefault   FabricQueryNodeStatusFilter = 0x0000
	FabricQueryNodeStatusFilterAll       FabricQueryNodeStatusFilter = 0xFFFF
	FabricQueryNodeStatusFilterUp        FabricQueryNodeStatusFilter = 0x0001
	FabricQueryNodeStatusFilterDown      FabricQueryNodeStatusFilter = 0x0002
	FabricQueryNodeStatusFilterEnabling  FabricQueryNodeStatusFilter = 0x0004
	FabricQueryNodeStatusFilterDisabling FabricQueryNodeStatusFilter = 0x0008
	FabricQueryNodeStatusFilterDisabled  FabricQueryNodeStatusFilter = 0x0010
	FabricQueryNodeStatusFilterUnknown   FabricQueryNodeStatusFilter = 0x0020
	FabricQueryNodeStatusFilterRemoved   FabricQueryNodeStatusFilter = 0x0040
)

type FabricServiceKind int32

const (
	FabricServiceKindInvalid   FabricServiceKind = 0x0000
	FabricServiceKindStateless FabricServiceKind = 0x0001
	FabricServiceKindStateful  FabricServiceKind = 0x0002
)

type FabricServicePartitionKind int32

const (
	FabricServicePartitionKindInvalid    FabricServicePartitionKind = 0x0000
	FabricServicePartitionKindSingleton  FabricServicePartitionKind = 0x0001
	FabricServicePartitionKindInt64Range FabricServicePartitionKind = 0x0002
	FabricServicePartitionKindNamed      FabricServicePartitionKind = 0x0003
)

type FabricQueryServicePartitionStatus int32

const (
	FabricQueryServicePartitionStatusInvalid       FabricQueryServicePartitionStatus = 0x0000
	FabricQueryServicePartitionStatusReady         FabricQueryServicePartitionStatus = 0x0001
	FabricQueryServicePartitionStatusNotReady      FabricQueryServicePartitionStatus = 0x0002
	FabricQueryServicePartitionStatusInQuorumLoss  FabricQueryServicePartitionStatus = 0x0003
	FabricQueryServicePartitionStatusReconfiguring FabricQueryServicePartitionStatus = 0x0004
	FabricQueryServicePartitionStatusDeleting      FabricQueryServicePartitionStatus = 0x0005
)

type FabricQueryServiceReplicaStatus int32

const (
	FabricQueryServiceReplicaStatusInvalid FabricQueryServiceReplicaStatus = 0x0000
	FabricQueryServiceReplicaStatusInbuild FabricQueryServiceReplicaStatus = 0x0001
	FabricQueryServiceReplicaStatusStandby FabricQueryServiceReplicaStatus = 0x0002
	FabricQueryServiceReplicaStatusReady   FabricQueryServiceReplicaStatus = 0x0003
	FabricQueryServiceReplicaStatusDown    FabricQueryServiceReplicaStatus = 0x0004
	FabricQueryServiceReplicaStatusDropped FabricQueryServiceReplicaStatus = 0x0005
)

type FabricQueryServiceReplicaStatusFilter int32

const (
	FabricQueryServiceReplicaStatusFilterDefault FabricQueryServiceReplicaStatusFilter = 0x0000
	FabricQueryServiceReplicaStatusFilterAll     FabricQueryServiceReplicaStatusFilter = 0xFFFF
	FabricQueryServiceReplicaStatusFilterInbuild FabricQueryServiceReplicaStatusFilter = 0x0001
	FabricQueryServiceReplicaStatusFilterStandby FabricQueryServiceReplicaStatusFilter = 0x0002
	FabricQueryServiceReplicaStatusFilterReady   FabricQueryServiceReplicaStatusFilter = 0x0004
	FabricQueryServiceReplicaStatusFilterDown    FabricQueryServiceReplicaStatusFilter = 0x0008
	FabricQueryServiceReplicaStatusFilterDropped FabricQueryServiceReplicaStatusFilter = 0x0010
)

type FabricQueryServiceOperationName int32

const (
	FabricQueryServiceOperationNameInvalid    FabricQueryServiceOperationName = 0x0000
	FabricQueryServiceOperationNameNone       FabricQueryServiceOperationName = 0x0001
	FabricQueryServiceOperationNameOpen       FabricQueryServiceOperationName = 0x0002
	FabricQueryServiceOperationNameChangerole FabricQueryServiceOperationName = 0x0004
	FabricQueryServiceOperationNameClose      FabricQueryServiceOperationName = 0x0008
	FabricQueryServiceOperationNameAbort      FabricQueryServiceOperationName = 0x0010
)

type FabricQueryReplicatorOperationName int32

const (
	FabricQueryReplicatorOperationNameInvalid        FabricQueryReplicatorOperationName = 0x0000
	FabricQueryReplicatorOperationNameNone           FabricQueryReplicatorOperationName = 0x0001
	FabricQueryReplicatorOperationNameOpen           FabricQueryReplicatorOperationName = 0x0002
	FabricQueryReplicatorOperationNameChangerole     FabricQueryReplicatorOperationName = 0x0004
	FabricQueryReplicatorOperationNameUpdateepoch    FabricQueryReplicatorOperationName = 0x0008
	FabricQueryReplicatorOperationNameClose          FabricQueryReplicatorOperationName = 0x0010
	FabricQueryReplicatorOperationNameAbort          FabricQueryReplicatorOperationName = 0x0020
	FabricQueryReplicatorOperationNameOndataloss     FabricQueryReplicatorOperationName = 0x0040
	FabricQueryReplicatorOperationNameWaitforcatchup FabricQueryReplicatorOperationName = 0x0080
	FabricQueryReplicatorOperationNameBuild          FabricQueryReplicatorOperationName = 0x0100
)

type FabricCodePackageEntryPointKind int32

const (
	FabricCodePackageEntryPointKindInvalid       FabricCodePackageEntryPointKind = 0x0000
	FabricCodePackageEntryPointKindNone          FabricCodePackageEntryPointKind = 0x0001
	FabricCodePackageEntryPointKindExehost       FabricCodePackageEntryPointKind = 0x0002
	FabricCodePackageEntryPointKindDllhost       FabricCodePackageEntryPointKind = 0x0003
	FabricCodePackageEntryPointKindContainerhost FabricCodePackageEntryPointKind = 0x0004
)

type FabricErrorxehostWorkingFolder int32

const (
	FabricErrorxehostWorkingFolderInvalid     FabricErrorxehostWorkingFolder = 0x0000
	FabricErrorxehostWorkingFolderWork        FabricErrorxehostWorkingFolder = 0x0001
	FabricErrorxehostWorkingFolderCodePackage FabricErrorxehostWorkingFolder = 0x0002
	FabricErrorxehostWorkingFolderCodeBase    FabricErrorxehostWorkingFolder = 0x0003
)

type FabricDllhostHostedDllKind int32

const (
	FabricDllhostHostedDllKindInvalid   FabricDllhostHostedDllKind = 0x0000
	FabricDllhostHostedDllKindUnmanaged FabricDllhostHostedDllKind = 0x0001
	FabricDllhostHostedDllKindManaged   FabricDllhostHostedDllKind = 0x0002
)

type FabricDllhostIsolationPolicy int32

const (
	FabricDllhostIsolationPolicyInvalid          FabricDllhostIsolationPolicy = 0x0000
	FabricDllhostIsolationPolicySharedDomain     FabricDllhostIsolationPolicy = 0x0001
	FabricDllhostIsolationPolicyDedicatedDomain  FabricDllhostIsolationPolicy = 0x0002
	FabricDllhostIsolationPolicyDedicatedProcess FabricDllhostIsolationPolicy = 0x0003
)

type FabricSecurityCredentialKind int32

const (
	FabricSecurityCredentialKindNone    FabricSecurityCredentialKind = 0x0000
	FabricSecurityCredentialKindX509    FabricSecurityCredentialKind = 0x0001
	FabricSecurityCredentialKindWindows FabricSecurityCredentialKind = 0x0002
	FabricSecurityCredentialKindClaims  FabricSecurityCredentialKind = 0x0003
	FabricSecurityCredentialKindX5092   FabricSecurityCredentialKind = 0x0004
	FabricSecurityCredentialKindInvalid FabricSecurityCredentialKind = 0x00ff
)

type FabricClaimsRetrievalMetadataKind int32

const (
	FabricClaimsRetrievalMetadataKindNone FabricClaimsRetrievalMetadataKind = 0x0000
	FabricClaimsRetrievalMetadataKindAad  FabricClaimsRetrievalMetadataKind = 0x0001
)

type FabricProtectionLevel int32

const (
	FabricProtectionLevelNone           FabricProtectionLevel = 0x0000
	FabricProtectionLevelSign           FabricProtectionLevel = 0x0001
	FabricProtectionLevelEncryptandsign FabricProtectionLevel = 0x0002
)

type FabricX509StoreLocation int32

const (
	FabricX509StoreLocationInvalid      FabricX509StoreLocation = 0x0000
	FabricX509StoreLocationCurrentuser  FabricX509StoreLocation = 0x0001
	FabricX509StoreLocationLocalmachine FabricX509StoreLocation = 0x0002
)

type FabricX509FindType int32

const (
	FabricX509FindTypeFindbythumbprint  FabricX509FindType = 0x0000
	FabricX509FindTypeFindbysubjectname FabricX509FindType = 0x0001
	FabricX509FindTypeFindbyextension   FabricX509FindType = 0x000c
)

type FabricServiceLoadMetricWeight int32

const (
	FabricServiceLoadMetricWeightZero   FabricServiceLoadMetricWeight = 0x0000
	FabricServiceLoadMetricWeightLow    FabricServiceLoadMetricWeight = 0x0001
	FabricServiceLoadMetricWeightMedium FabricServiceLoadMetricWeight = 0x0002
	FabricServiceLoadMetricWeightHigh   FabricServiceLoadMetricWeight = 0x0003
)

type FabricMoveCost int32

const (
	FabricMoveCostZero   FabricMoveCost = 0x0000
	FabricMoveCostLow    FabricMoveCost = 0x0001
	FabricMoveCostMedium FabricMoveCost = 0x0002
	FabricMoveCostHigh   FabricMoveCost = 0x0003
)

type FabricServicePackageActivationMode int32

const (
	FabricServicePackageActivationModeSharedProcess    FabricServicePackageActivationMode = 0x0000
	FabricServicePackageActivationModeExclusiveProcess FabricServicePackageActivationMode = 0x0001
)

type FabricServiceCorrelationScheme int32

const (
	FabricServiceCorrelationSchemeInvalid            FabricServiceCorrelationScheme = 0x0000
	FabricServiceCorrelationSchemeAffinity           FabricServiceCorrelationScheme = 0x0001
	FabricServiceCorrelationSchemeAlignedAffinity    FabricServiceCorrelationScheme = 0x0002
	FabricServiceCorrelationSchemeNonalignedAffinity FabricServiceCorrelationScheme = 0x0003
)

type FabricServicePartitionAccessStatus int32

const (
	FabricServicePartitionAccessStatusInvalid                FabricServicePartitionAccessStatus = 0x0000
	FabricServicePartitionAccessStatusGranted                FabricServicePartitionAccessStatus = 0x0001
	FabricServicePartitionAccessStatusReconfigurationPending FabricServicePartitionAccessStatus = 0x0002
	FabricServicePartitionAccessStatusNotPrimary             FabricServicePartitionAccessStatus = 0x0003
	FabricServicePartitionAccessStatusNoWriteQuorum          FabricServicePartitionAccessStatus = 0x0004
)

type FabricReplicaRole int32

const (
	FabricReplicaRoleUnknown         FabricReplicaRole = 0x0000
	FabricReplicaRoleNone            FabricReplicaRole = 0x0001
	FabricReplicaRolePrimary         FabricReplicaRole = 0x0002
	FabricReplicaRoleIdleSecondary   FabricReplicaRole = 0x0003
	FabricReplicaRoleActiveSecondary FabricReplicaRole = 0x0004
)

type FabricReplicaOpenMode int32

const (
	FabricReplicaOpenModeInvalid  FabricReplicaOpenMode = 0x0000
	FabricReplicaOpenModeNew      FabricReplicaOpenMode = 0x0001
	FabricReplicaOpenModeExisting FabricReplicaOpenMode = 0x0002
)

type FabricReplicaStatus int32

const (
	FabricReplicaStatusInvalid FabricReplicaStatus = 0x0000
	FabricReplicaStatusDown    FabricReplicaStatus = 0x0001
	FabricReplicaStatusUp      FabricReplicaStatus = 0x0002
)

type FabricOperationType int32

const (
	FabricOperationTypeInvalid              FabricOperationType = 0x0000
	FabricOperationTypeNormal               FabricOperationType = 0x0001
	FabricOperationTypeEndOfStream          FabricOperationType = 0x0002
	FabricOperationTypeCreateAtomicGroup    FabricOperationType = 0x0010
	FabricOperationTypeAtomicGroupOperation FabricOperationType = 0x0020
	FabricOperationTypeCommitAtomicGroup    FabricOperationType = 0x0040
	FabricOperationTypeRollbackAtomicGroup  FabricOperationType = 0x0080
	FabricOperationTypeHasAtomicGroupMask   FabricOperationType = 0x00F0
)

type FabricReplicaSetQuorumMode int32

const (
	FabricReplicaSetQuorumInvalid FabricReplicaSetQuorumMode = 0x0000
	FabricReplicaSetWriteQuorum   FabricReplicaSetQuorumMode = 0x0001
	FabricReplicaSetQuorumAll     FabricReplicaSetQuorumMode = 0x0002
)

type FabricReplicatorSettingsFlags int32

const (
	FabricReplicatorSettingsNone                              FabricReplicatorSettingsFlags = 0x0000
	FabricReplicatorAddress                                   FabricReplicatorSettingsFlags = 0x0001
	FabricReplicatorSecurity                                  FabricReplicatorSettingsFlags = 0x0002
	FabricReplicatorRetryInterval                             FabricReplicatorSettingsFlags = 0x0004
	FabricReplicatorBatchAcknowledgementInterval              FabricReplicatorSettingsFlags = 0x0008
	FabricReplicatorRequireServiceAck                         FabricReplicatorSettingsFlags = 0x0010
	FabricReplicatorReplicationQueueInitialSize               FabricReplicatorSettingsFlags = 0x0020
	FabricReplicatorReplicationQueueMaxSize                   FabricReplicatorSettingsFlags = 0x0040
	FabricReplicatorCopyQueueInitialSize                      FabricReplicatorSettingsFlags = 0x0080
	FabricReplicatorCopyQueueMaxSize                          FabricReplicatorSettingsFlags = 0x0100
	FabricReplicatorReplicationQueueMaxMemorySize             FabricReplicatorSettingsFlags = 0x0200
	FabricReplicatorSecondaryClearAcknowledgedOperations      FabricReplicatorSettingsFlags = 0x0400
	FabricReplicatorReplicationMessageMaxSize                 FabricReplicatorSettingsFlags = 0x0800
	FabricReplicatorUseStreamfaultsAndEndofstreamOperationack FabricReplicatorSettingsFlags = 0x1000
	FabricReplicatorSecondaryReplicationQueueInitialSize      FabricReplicatorSettingsFlags = 0x2000
	FabricReplicatorSecondaryReplicationQueueMaxSize          FabricReplicatorSettingsFlags = 0x4000
	FabricReplicatorSecondaryReplicationQueueMaxMemorySize    FabricReplicatorSettingsFlags = 0x8000
	FabricReplicatorPrimaryReplicationQueueInitialSize        FabricReplicatorSettingsFlags = 0x10000
	FabricReplicatorPrimaryReplicationQueueMaxSize            FabricReplicatorSettingsFlags = 0x20000
	FabricReplicatorPrimaryReplicationQueueMaxMemorySize      FabricReplicatorSettingsFlags = 0x40000
	FabricReplicatorPrimaryWaitForPendingQuorumsTimeout       FabricReplicatorSettingsFlags = 0x80000
	FabricReplicatorListenAddress                             FabricReplicatorSettingsFlags = 0x100000
	FabricReplicatorPublishAddress                            FabricReplicatorSettingsFlags = 0x200000
)

type FabricFaultType int32

const (
	FabricFaultTypeInvalid   FabricFaultType = 0x0000
	FabricFaultTypePermanent FabricFaultType = 0x0001
	FabricFaultTypeTransient FabricFaultType = 0x0002
)

type FabricHealthState int32

const (
	FabricHealthStateInvalid FabricHealthState = 0x0000
	FabricHealthStateOk      FabricHealthState = 0x0001
	FabricHealthStateWarning FabricHealthState = 0x0002
	FabricHealthStateError   FabricHealthState = 0x0003
	FabricHealthStateUnknown FabricHealthState = 0xFFFF
)

type FabricHealthReportKind int32

const (
	FabricHealthReportKindInvalid                  FabricHealthReportKind = 0x0000
	FabricHealthReportKindStatefulServiceReplica   FabricHealthReportKind = 0x0001
	FabricHealthReportKindStatelessServiceInstance FabricHealthReportKind = 0x0002
	FabricHealthReportKindPartition                FabricHealthReportKind = 0x0003
	FabricHealthReportKindNode                     FabricHealthReportKind = 0x0004
	FabricHealthReportKindService                  FabricHealthReportKind = 0x0005
	FabricHealthReportKindApplication              FabricHealthReportKind = 0x0006
	FabricHealthReportKindDeployedApplication      FabricHealthReportKind = 0x0007
	FabricHealthReportKindDeployedServicePackage   FabricHealthReportKind = 0x0008
	FabricHealthReportKindCluster                  FabricHealthReportKind = 0x0009
)

type FabricHealthEntityKind int32

const (
	FabricHealthEntityKindInvalid                FabricHealthEntityKind = 0x0000
	FabricHealthEntityKindNode                   FabricHealthEntityKind = 0x0001
	FabricHealthEntityKindPartition              FabricHealthEntityKind = 0x0002
	FabricHealthEntityKindService                FabricHealthEntityKind = 0x0003
	FabricHealthEntityKindApplication            FabricHealthEntityKind = 0x0004
	FabricHealthEntityKindReplica                FabricHealthEntityKind = 0x0005
	FabricHealthEntityKindDeployedApplication    FabricHealthEntityKind = 0x0006
	FabricHealthEntityKindDeployedServicePackage FabricHealthEntityKind = 0x0007
	FabricHealthEntityKindCluster                FabricHealthEntityKind = 0x0008
)

type FabricHealthEvaluationKind int32

const (
	FabricHealthEvaluationKindInvalid                           FabricHealthEvaluationKind = 0x0000
	FabricHealthEvaluationKindEvent                             FabricHealthEvaluationKind = 0x0001
	FabricHealthEvaluationKindReplicas                          FabricHealthEvaluationKind = 0x0002
	FabricHealthEvaluationKindPartitions                        FabricHealthEvaluationKind = 0x0003
	FabricHealthEvaluationKindDeployedServicePackages           FabricHealthEvaluationKind = 0x0004
	FabricHealthEvaluationKindDeployedApplications              FabricHealthEvaluationKind = 0x0005
	FabricHealthEvaluationKindServices                          FabricHealthEvaluationKind = 0x0006
	FabricHealthEvaluationKindNodes                             FabricHealthEvaluationKind = 0x0007
	FabricHealthEvaluationKindApplications                      FabricHealthEvaluationKind = 0x0008
	FabricHealthEvaluationKindSystemApplication                 FabricHealthEvaluationKind = 0x0009
	FabricHealthEvaluationKindUpgradeDomainDeployedApplications FabricHealthEvaluationKind = 0x000A
	FabricHealthEvaluationKindUpgradeDomainNodes                FabricHealthEvaluationKind = 0x000B
	FabricHealthEvaluationKindNode                              FabricHealthEvaluationKind = 0x000C
	FabricHealthEvaluationKindReplica                           FabricHealthEvaluationKind = 0x000D
	FabricHealthEvaluationKindPartition                         FabricHealthEvaluationKind = 0x000E
	FabricHealthEvaluationKindService                           FabricHealthEvaluationKind = 0x000F
	FabricHealthEvaluationKindDeployedServicePackage            FabricHealthEvaluationKind = 0x0010
	FabricHealthEvaluationKindDeployedApplication               FabricHealthEvaluationKind = 0x0011
	FabricHealthEvaluationKindApplication                       FabricHealthEvaluationKind = 0x0012
	FabricHealthEvaluationKindDeltaNodesCheck                   FabricHealthEvaluationKind = 0x0013
	FabricHealthEvaluationKindUpgradeDomainDeltaNodesCheck      FabricHealthEvaluationKind = 0x0014
	FabricHealthEvaluationKindApplicationTypeApplications       FabricHealthEvaluationKind = 0x0015
)

type FabricPropertyTypeId int32

const (
	FabricPropertyTypeInvalid FabricPropertyTypeId = 0x0000
	FabricPropertyTypeBinary  FabricPropertyTypeId = 0x0001
	FabricPropertyTypeInt64   FabricPropertyTypeId = 0x0002
	FabricPropertyTypeDouble  FabricPropertyTypeId = 0x0003
	FabricPropertyTypeWstring FabricPropertyTypeId = 0x0004
	FabricPropertyTypeGuid    FabricPropertyTypeId = 0x0005
)

type FabricPropertyBatchOperationKind int32

const (
	FabricPropertyBatchOperationKindInvalid       FabricPropertyBatchOperationKind = 0x0000
	FabricPropertyBatchOperationKindPut           FabricPropertyBatchOperationKind = 0x0001
	FabricPropertyBatchOperationKindGet           FabricPropertyBatchOperationKind = 0x0002
	FabricPropertyBatchOperationKindCheckExists   FabricPropertyBatchOperationKind = 0x0003
	FabricPropertyBatchOperationKindCheckSequence FabricPropertyBatchOperationKind = 0x0004
	FabricPropertyBatchOperationKindDelete        FabricPropertyBatchOperationKind = 0x0005
	FabricPropertyBatchOperationKindPutCustom     FabricPropertyBatchOperationKind = 0x0006
	FabricPropertyBatchOperationKindCheckValue    FabricPropertyBatchOperationKind = 0x0007
)

type FabricServiceEndpointRole int32

const (
	FabricServiceRoleInvalid           FabricServiceEndpointRole = 0x0000
	FabricServiceRoleStateless         FabricServiceEndpointRole = 0x0001
	FabricServiceRoleStatefulPrimary   FabricServiceEndpointRole = 0x0002
	FabricServiceRoleStatefulSecondary FabricServiceEndpointRole = 0x0003
)

type FabricErrornumerationStatus int32

const (
	FabricErrornumerationInvalid            FabricErrornumerationStatus = 0x0000
	FabricErrornumerationBestEffortMoreData FabricErrornumerationStatus = 0x0001
	FabricErrornumerationConsistentMoreData FabricErrornumerationStatus = 0x0002
	FabricErrornumerationBestEffortFinished FabricErrornumerationStatus = 0x0004
	FabricErrornumerationConsistentFinished FabricErrornumerationStatus = 0x0008
	FabricErrornumerationValidMask          FabricErrornumerationStatus = 0x000F
	FabricErrornumerationBestEffortMask     FabricErrornumerationStatus = 0x0005
	FabricErrornumerationConsistentMask     FabricErrornumerationStatus = 0x000A
	FabricErrornumerationMoreDataMask       FabricErrornumerationStatus = 0x0003
	FabricErrornumerationFinishedMask       FabricErrornumerationStatus = 0x000C
)

type FabricPartitionKeyType int32

const (
	FabricPartitionKeyTypeInvalid FabricPartitionKeyType = 0x0000
	FabricPartitionKeyTypeNone    FabricPartitionKeyType = 0x0001
	FabricPartitionKeyTypeInt64   FabricPartitionKeyType = 0x0002
	FabricPartitionKeyTypeString  FabricPartitionKeyType = 0x0003
)

type FabricPartitionScheme int32

const (
	FabricPartitionSchemeInvalid           FabricPartitionScheme = 0x0000
	FabricPartitionSchemeSingleton         FabricPartitionScheme = 0x0001
	FabricPartitionSchemeUniformInt64Range FabricPartitionScheme = 0x0002
	FabricPartitionSchemeNamed             FabricPartitionScheme = 0x0003
)

type FabricServiceDescriptionKind int32

const (
	FabricServiceDescriptionKindInvalid   FabricServiceDescriptionKind = 0x0000
	FabricServiceDescriptionKindStateless FabricServiceDescriptionKind = 0x0001
	FabricServiceDescriptionKindStateful  FabricServiceDescriptionKind = 0x0002
)

type FabricStatefulServiceFailoverSettingsFlags int32

const (
	FabricStatefulServiceSettingsNone                       FabricStatefulServiceFailoverSettingsFlags = 0x0000
	FabricStatefulServiceSettingsReplicaRestartWaitDuration FabricStatefulServiceFailoverSettingsFlags = 0x0001
	FabricStatefulServiceSettingsQuorumLossWaitDuration     FabricStatefulServiceFailoverSettingsFlags = 0x0002
	FabricStatefulServiceSettingsStandbyReplicaKeepDuration FabricStatefulServiceFailoverSettingsFlags = 0x0004
)

type FabricStatelessServiceUpdateDescriptionFlags int32

const (
	FabricStatelessServiceNone                 FabricStatelessServiceUpdateDescriptionFlags = 0x0000
	FabricStatelessServiceInstanceCount        FabricStatelessServiceUpdateDescriptionFlags = 0x0001
	FabricStatelessServicePlacementConstraints FabricStatelessServiceUpdateDescriptionFlags = 0x0002
	FabricStatelessServicePolicyList           FabricStatelessServiceUpdateDescriptionFlags = 0x0004
	FabricStatelessServiceCorrelations         FabricStatelessServiceUpdateDescriptionFlags = 0x0008
	FabricStatelessServiceMetrics              FabricStatelessServiceUpdateDescriptionFlags = 0x0010
	FabricStatelessServiceMoveCost             FabricStatelessServiceUpdateDescriptionFlags = 0x0020
	FabricStatelessServiceScalingPolicy        FabricStatelessServiceUpdateDescriptionFlags = 0x0040
)

type FabricStatefulServiceUpdateDescriptionFlags int32

const (
	FabricStatefulServiceNone                       FabricStatefulServiceUpdateDescriptionFlags = 0x0000
	FabricStatefulServiceTargetReplicaSetSize       FabricStatefulServiceUpdateDescriptionFlags = 0x0001
	FabricStatefulServiceReplicaRestartWaitDuration FabricStatefulServiceUpdateDescriptionFlags = 0x0002
	FabricStatefulServiceQuorumLossWaitDuration     FabricStatefulServiceUpdateDescriptionFlags = 0x0004
	FabricStatefulServiceStandbyReplicaKeepDuration FabricStatefulServiceUpdateDescriptionFlags = 0x0008
	FabricStatefulServiceMinReplicaSetSize          FabricStatefulServiceUpdateDescriptionFlags = 0x0010
	FabricStatefulServicePlacementConstraints       FabricStatefulServiceUpdateDescriptionFlags = 0x0020
	FabricStatefulServicePolicyList                 FabricStatefulServiceUpdateDescriptionFlags = 0x0040
	FabricStatefulServiceCorrelations               FabricStatefulServiceUpdateDescriptionFlags = 0x0080
	FabricStatefulServiceMetrics                    FabricStatefulServiceUpdateDescriptionFlags = 0x0100
	FabricStatefulServiceMoveCost                   FabricStatefulServiceUpdateDescriptionFlags = 0x0200
	FabricStatefulServiceScalingPolicy              FabricStatefulServiceUpdateDescriptionFlags = 0x0400
)

type FabricServiceNotificationFilterFlags int32

const (
	FabricServiceNotificationFilterFlagsNone        FabricServiceNotificationFilterFlags = 0x0000
	FabricServiceNotificationFilterFlagsNamePrefix  FabricServiceNotificationFilterFlags = 0x0001
	FabricServiceNotificationFilterFlagsPrimaryOnly FabricServiceNotificationFilterFlags = 0x0002
)

type FabricApplicationUpgradeKind int32

const (
	FabricApplicationUpgradeKindInvalid FabricApplicationUpgradeKind = 0x0000
	FabricApplicationUpgradeKindRolling FabricApplicationUpgradeKind = 0x0001
)

type FabricUpgradeKind int32

const (
	FabricUpgradeKindInvalid FabricUpgradeKind = 0x0000
	FabricUpgradeKindRolling FabricUpgradeKind = 0x0001
)

type FabricRollingUpgradeMode int32

const (
	FabricRollingUpgradeModeInvalid           FabricRollingUpgradeMode = 0x0000
	FabricRollingUpgradeModeUnmonitoredAuto   FabricRollingUpgradeMode = 0x0001
	FabricRollingUpgradeModeUnmonitoredManual FabricRollingUpgradeMode = 0x0002
	FabricRollingUpgradeModeMonitored         FabricRollingUpgradeMode = 0x0003
)

type FabricMonitoredUpgradeFailureAction int32

const (
	FabricMonitoredUpgradeFailureActionInvalid  FabricMonitoredUpgradeFailureAction = 0x0000
	FabricMonitoredUpgradeFailureActionRollback FabricMonitoredUpgradeFailureAction = 0x0001
	FabricMonitoredUpgradeFailureActionManual   FabricMonitoredUpgradeFailureAction = 0x0002
)

type FabricRollingUpgradeUpdateFlags int32

const (
	FabricRollingUpgradeUpdateFlagsNone                              FabricRollingUpgradeUpdateFlags = 0x0000
	FabricRollingUpgradeUpdateFlagsUpgradeMode                       FabricRollingUpgradeUpdateFlags = 0x0001
	FabricRollingUpgradeUpdateFlagsForceRestart                      FabricRollingUpgradeUpdateFlags = 0x0002
	FabricRollingUpgradeUpdateFlagsReplicaSetCheckTimeout            FabricRollingUpgradeUpdateFlags = 0x0004
	FabricRollingUpgradeUpdateFlagsFailureAction                     FabricRollingUpgradeUpdateFlags = 0x0008
	FabricRollingUpgradeUpdateFlagsHealthCheckWait                   FabricRollingUpgradeUpdateFlags = 0x0010
	FabricRollingUpgradeUpdateFlagsHealthCheckStable                 FabricRollingUpgradeUpdateFlags = 0x0020
	FabricRollingUpgradeUpdateFlagsHealthCheckRetry                  FabricRollingUpgradeUpdateFlags = 0x0040
	FabricRollingUpgradeUpdateFlagsUpgradeTimeout                    FabricRollingUpgradeUpdateFlags = 0x0080
	FabricRollingUpgradeUpdateFlagsUpgradeDomainTimeout              FabricRollingUpgradeUpdateFlags = 0x0100
	FabricRollingUpgradeUpdateFlagsHealthPolicy                      FabricRollingUpgradeUpdateFlags = 0x0200
	FabricRollingUpgradeUpdateFlagsEnableDeltas                      FabricRollingUpgradeUpdateFlags = 0x0400
	FabricRollingUpgradeUpdateFlagsUpgradeHealthPolicy               FabricRollingUpgradeUpdateFlags = 0x0800
	FabricRollingUpgradeUpdateFlagsUpgradeApplicationHealthPolicyMap FabricRollingUpgradeUpdateFlags = 0x1000
)

type FabricApplicationUpgradeState int32

const (
	FabricApplicationUpgradeStateInvalid                  FabricApplicationUpgradeState = 0x0000
	FabricApplicationUpgradeStateRollingBackInProgress    FabricApplicationUpgradeState = 0x0001
	FabricApplicationUpgradeStateRollingBackCompleted     FabricApplicationUpgradeState = 0x0002
	FabricApplicationUpgradeStateRollingForwardPending    FabricApplicationUpgradeState = 0x0003
	FabricApplicationUpgradeStateRollingForwardInProgress FabricApplicationUpgradeState = 0x0004
	FabricApplicationUpgradeStateRollingForwardCompleted  FabricApplicationUpgradeState = 0x0005
	FabricApplicationUpgradeStateFailed                   FabricApplicationUpgradeState = 0x0006
	FabricApplicationUpgradeStateRollingBackPending       FabricApplicationUpgradeState = 0x0007
)

type FabricUpgradeState int32

const (
	FabricUpgradeStateInvalid                  FabricUpgradeState = 0x0000
	FabricUpgradeStateRollingBackInProgress    FabricUpgradeState = 0x0001
	FabricUpgradeStateRollingBackCompleted     FabricUpgradeState = 0x0002
	FabricUpgradeStateRollingForwardPending    FabricUpgradeState = 0x0003
	FabricUpgradeStateRollingForwardInProgress FabricUpgradeState = 0x0004
	FabricUpgradeStateRollingForwardCompleted  FabricUpgradeState = 0x0005
	FabricUpgradeStateFailed                   FabricUpgradeState = 0x0006
	FabricUpgradeStateRollingBackPending       FabricUpgradeState = 0x0007
)

type FabricUpgradeDomainState int32

const (
	FabricUpgradeDomainStateInvalid    FabricUpgradeDomainState = 0x0000
	FabricUpgradeDomainStatePending    FabricUpgradeDomainState = 0x0001
	FabricUpgradeDomainStateInProgress FabricUpgradeDomainState = 0x0002
	FabricUpgradeDomainStateCompleted  FabricUpgradeDomainState = 0x0003
)

type FabricUpgradeFailureReason int32

const (
	FabricUpgradeFailureReasonNone                  FabricUpgradeFailureReason = 0x0000
	FabricUpgradeFailureReasonInterrupted           FabricUpgradeFailureReason = 0x0001
	FabricUpgradeFailureReasonHealthCheck           FabricUpgradeFailureReason = 0x0002
	FabricUpgradeFailureReasonUpgradeDomainTimeout  FabricUpgradeFailureReason = 0x0003
	FabricUpgradeFailureReasonOverallUpgradeTimeout FabricUpgradeFailureReason = 0x0004
	FabricUpgradeFailureReasonProcessingFailure     FabricUpgradeFailureReason = 0x0005
)

type FabricLocalStoreKind int32

const (
	FabricLocalStoreKindInvalid FabricLocalStoreKind = 0x0000
	FabricLocalStoreKindEse     FabricLocalStoreKind = 0x0001
)

type FabricServiceReplicaKind int32

const (
	FabricServiceReplicaKindInvalid       FabricServiceReplicaKind = 0x0000
	FabricServiceReplicaKindKeyValueStore FabricServiceReplicaKind = 0x0001
)

type FabricKeyValueStoreNotificationMode int32

const (
	FabricKeyValueStoreNotificationModeInvalid                FabricKeyValueStoreNotificationMode = 0x0000
	FabricKeyValueStoreNotificationModeNone                   FabricKeyValueStoreNotificationMode = 0x0001
	FabricKeyValueStoreNotificationModeNonBlockingQuorumAcked FabricKeyValueStoreNotificationMode = 0x0002
	FabricKeyValueStoreNotificationModeBlockSecondaryAck      FabricKeyValueStoreNotificationMode = 0x0003
)

type FabricKeyValueStoreFullCopyMode int32

const (
	FabricKeyValueStoreFullCopyModeDefault  FabricKeyValueStoreFullCopyMode = 0x0000
	FabricKeyValueStoreFullCopyModePhysical FabricKeyValueStoreFullCopyMode = 0x0001
	FabricKeyValueStoreFullCopyModeLogical  FabricKeyValueStoreFullCopyMode = 0x0002
	FabricKeyValueStoreFullCopyModeRebuild  FabricKeyValueStoreFullCopyMode = 0x0003
)

type FabricTransactionIsolationLevel int32

const (
	FabricTransactionIsolationLevelDefault         FabricTransactionIsolationLevel = 0x0000
	FabricTransactionIsolationLevelReadUncommitted FabricTransactionIsolationLevel = 0x0001
	FabricTransactionIsolationLevelReadCommitted   FabricTransactionIsolationLevel = 0x0002
	FabricTransactionIsolationLevelRepeatableRead  FabricTransactionIsolationLevel = 0x0003
	FabricTransactionIsolationLevelSnapshot        FabricTransactionIsolationLevel = 0x0004
	FabricTransactionIsolationLevelSerializable    FabricTransactionIsolationLevel = 0x0005
)

type FabricNodeDeactivationIntent int32

const (
	FabricNodeDeactivationIntentInvalid    FabricNodeDeactivationIntent = 0x0000
	FabricNodeDeactivationIntentPause      FabricNodeDeactivationIntent = 0x0001
	FabricNodeDeactivationIntentRestart    FabricNodeDeactivationIntent = 0x0002
	FabricNodeDeactivationIntentRemoveData FabricNodeDeactivationIntent = 0x0003
	FabricNodeDeactivationIntentRemoveNode FabricNodeDeactivationIntent = 0x0004
)

type FabricApplicationTypeStatus int32

const (
	FabricApplicationTypeStatusInvalid        FabricApplicationTypeStatus = 0x0000
	FabricApplicationTypeStatusProvisioning   FabricApplicationTypeStatus = 0x0001
	FabricApplicationTypeStatusAvailable      FabricApplicationTypeStatus = 0x0002
	FabricApplicationTypeStatusUnprovisioning FabricApplicationTypeStatus = 0x0003
	FabricApplicationTypeStatusFailed         FabricApplicationTypeStatus = 0x0004
)

type FabricApplicationStatus int32

const (
	FabricApplicationStatusInvalid   FabricApplicationStatus = 0x0000
	FabricApplicationStatusReady     FabricApplicationStatus = 0x0001
	FabricApplicationStatusUpgrading FabricApplicationStatus = 0x0002
	FabricApplicationStatusCreating  FabricApplicationStatus = 0x0003
	FabricApplicationStatusDeleting  FabricApplicationStatus = 0x0004
	FabricApplicationStatusFailed    FabricApplicationStatus = 0x0005
)

type FabricApplicationDefinitionKind int32

const (
	FabricApplicationDefinitionKindInvalid                             FabricApplicationDefinitionKind = 0xFFFF
	FabricApplicationDefinitionKindServiceFabricApplicationDescription FabricApplicationDefinitionKind = 0x0000
	FabricApplicationDefinitionKindCompose                             FabricApplicationDefinitionKind = 0x0001
	FabricApplicationDefinitionKindMeshApplicationDescription          FabricApplicationDefinitionKind = 0x0002
)

type FabricApplicationTypeDefinitionKind int32

const (
	FabricApplicationTypeDefinitionKindInvalid                         FabricApplicationTypeDefinitionKind = 0x0000
	FabricApplicationTypeDefinitionKindServiceFabricApplicationPackage FabricApplicationTypeDefinitionKind = 0x0001
	FabricApplicationTypeDefinitionKindCompose                         FabricApplicationTypeDefinitionKind = 0x0002
	FabricApplicationTypeDefinitionKindMeshApplicationDescription      FabricApplicationTypeDefinitionKind = 0x0003
)

type FabricApplicationDefinitionKindFilter int32

const (
	FabricApplicationDefinitionKindFilterDefault                             FabricApplicationDefinitionKindFilter = 0x0000
	FabricApplicationDefinitionKindFilterAll                                 FabricApplicationDefinitionKindFilter = 0xFFFF
	FabricApplicationDefinitionKindFilterServiceFabricApplicationDescription FabricApplicationDefinitionKindFilter = 0x0001
	FabricApplicationDefinitionKindFilterCompose                             FabricApplicationDefinitionKindFilter = 0x0002
	FabricApplicationDefinitionKindFilterMeshApplicationDescription          FabricApplicationDefinitionKindFilter = 0x0004
)

type FabricApplicationTypeDefinitionKindFilter int32

const (
	FabricApplicationTypeDefinitionKindFilterDefault                         FabricApplicationTypeDefinitionKindFilter = 0x0000
	FabricApplicationTypeDefinitionKindFilterAll                             FabricApplicationTypeDefinitionKindFilter = 0xFFFF
	FabricApplicationTypeDefinitionKindFilterServiceFabricApplicationPackage FabricApplicationTypeDefinitionKindFilter = 0x0001
	FabricApplicationTypeDefinitionKindFilterCompose                         FabricApplicationTypeDefinitionKindFilter = 0x0002
	FabricApplicationTypeDefinitionKindFilterMeshApplicationDescription      FabricApplicationTypeDefinitionKindFilter = 0x0004
)

type FabricServiceTypeRegistrationStatus int32

const (
	FabricServiceTypeRegistrationStatusInvalid       FabricServiceTypeRegistrationStatus = 0x0000
	FabricServiceTypeRegistrationStatusDisabled      FabricServiceTypeRegistrationStatus = 0x0001
	FabricServiceTypeRegistrationStatusNotRegistered FabricServiceTypeRegistrationStatus = 0x0002
	FabricServiceTypeRegistrationStatusRegistered    FabricServiceTypeRegistrationStatus = 0x0003
)

type FabricDeploymentStatus int32

const (
	FabricDeploymentStatusInvalid      FabricDeploymentStatus = 0x0000
	FabricDeploymentStatusDownloading  FabricDeploymentStatus = 0x0001
	FabricDeploymentStatusActivating   FabricDeploymentStatus = 0x0002
	FabricDeploymentStatusActive       FabricDeploymentStatus = 0x0003
	FabricDeploymentStatusUpgrading    FabricDeploymentStatus = 0x0004
	FabricDeploymentStatusDeactivating FabricDeploymentStatus = 0x0005
)

type FabricHostType int32

const (
	FabricHostTypeInvalid       FabricHostType = 0x0000
	FabricHostTypeExeHost       FabricHostType = 0x0001
	FabricHostTypeContainerHost FabricHostType = 0x0002
)

type FabricHostIsolationMode int32

const (
	FabricHostIsolationModeNone    FabricHostIsolationMode = 0x0000
	FabricHostIsolationModeProcess FabricHostIsolationMode = 0x0001
	FabricHostIsolationModeHyperV  FabricHostIsolationMode = 0x0002
)

type FabricErrorntryPointStatus int32

const (
	FabricErrorntryPointStatusInvalid  FabricErrorntryPointStatus = 0x0000
	FabricErrorntryPointStatusPending  FabricErrorntryPointStatus = 0x0001
	FabricErrorntryPointStatusStarting FabricErrorntryPointStatus = 0x0002
	FabricErrorntryPointStatusStarted  FabricErrorntryPointStatus = 0x0003
	FabricErrorntryPointStatusStopping FabricErrorntryPointStatus = 0x0004
	FabricErrorntryPointStatusStopped  FabricErrorntryPointStatus = 0x0005
)

type FabricNodeUpgradePhase int32

const (
	FabricNodeUpgradePhaseInvalid                FabricNodeUpgradePhase = 0x0000
	FabricNodeUpgradePhasePreUpgradeSafetyCheck  FabricNodeUpgradePhase = 0x0001
	FabricNodeUpgradePhaseUpgrading              FabricNodeUpgradePhase = 0x0002
	FabricNodeUpgradePhasePostUpgradeSafetyCheck FabricNodeUpgradePhase = 0x0003
)

type FabricUpgradeSafetyCheckKind int32

const (
	FabricUpgradeSafetyCheckKindInvalid                              FabricUpgradeSafetyCheckKind = 0x0000
	FabricUpgradeSeedNodeSafetyCheckKindEnsureQuorum                 FabricUpgradeSafetyCheckKind = 0x0001
	FabricUpgradePartitionSafetyCheckKindEnsureQuorum                FabricUpgradeSafetyCheckKind = 0x0002
	FabricUpgradePartitionSafetyCheckKindWaitForPrimaryPlacement     FabricUpgradeSafetyCheckKind = 0x0003
	FabricUpgradePartitionSafetyCheckKindWaitForPrimarySwap          FabricUpgradeSafetyCheckKind = 0x0004
	FabricUpgradePartitionSafetyCheckKindWaitForReconfiguration      FabricUpgradeSafetyCheckKind = 0x0005
	FabricUpgradePartitionSafetyCheckKindWaitForInbuildReplica       FabricUpgradeSafetyCheckKind = 0x0006
	FabricUpgradePartitionSafetyCheckKindEnsureAvailability          FabricUpgradeSafetyCheckKind = 0x0007
	FabricUpgradePartitionSafetyCheckKindWaitForResourceAvailability FabricUpgradeSafetyCheckKind = 0x0008
)

type FabricSafetyCheckKind int32

const (
	FabricSafetyCheckKindInvalid                          FabricSafetyCheckKind = 0x0000
	FabricSeedNodeSafetyCheckKindEnsureQuorum             FabricSafetyCheckKind = 0x0001
	FabricPartitionSafetyCheckKindEnsureQuorum            FabricSafetyCheckKind = 0x0002
	FabricPartitionSafetyCheckKindWaitForPrimaryPlacement FabricSafetyCheckKind = 0x0003
	FabricPartitionSafetyCheckKindWaitForPrimarySwap      FabricSafetyCheckKind = 0x0004
	FabricPartitionSafetyCheckKindWaitForReconfiguration  FabricSafetyCheckKind = 0x0005
	FabricPartitionSafetyCheckKindWaitForInbuildReplica   FabricSafetyCheckKind = 0x0006
	FabricPartitionSafetyCheckKindEnsureAvailability      FabricSafetyCheckKind = 0x0007
)

type FabricRepairScopeIdentifierKind int32

const (
	FabricRepairScopeIdentifierKindInvalid FabricRepairScopeIdentifierKind = 0x0000
	FabricRepairScopeIdentifierKindCluster FabricRepairScopeIdentifierKind = 0x0001
)

type FabricRepairTargetKind int32

const (
	FabricRepairTargetKindInvalid FabricRepairTargetKind = 0x0000
	FabricRepairTargetKindNode    FabricRepairTargetKind = 0x0001
)

type FabricRestartNodeDescriptionKind int32

const (
	FabricRestartNodeDescriptionKindInvalid       FabricRestartNodeDescriptionKind = 0x0000
	FabricRestartNodeDescriptionKindUsingNodeName FabricRestartNodeDescriptionKind = 0x0001
)

type FabricStartNodeDescriptionKind int32

const (
	FabricStartNodeDescriptionKindInvalid       FabricStartNodeDescriptionKind = 0x0000
	FabricStartNodeDescriptionKindUsingNodeName FabricStartNodeDescriptionKind = 0x0001
)

type FabricStopNodeDescriptionKind int32

const (
	FabricStopNodeDescriptionKindInvalid       FabricStopNodeDescriptionKind = 0x0000
	FabricStopNodeDescriptionKindUsingNodeName FabricStopNodeDescriptionKind = 0x0001
)

type FabricRestartDeployedCodePackageDescriptionKind int32

const (
	FabricRestartDeployedCodePackageDescriptionKindInvalid       FabricRestartDeployedCodePackageDescriptionKind = 0x0000
	FabricRestartDeployedCodePackageDescriptionKindUsingNodeName FabricRestartDeployedCodePackageDescriptionKind = 0x0001
)

type FabricRepairTaskState int32

const (
	FabricRepairTaskStateInvalid   FabricRepairTaskState = 0x0000
	FabricRepairTaskStateCreated   FabricRepairTaskState = 0x0001
	FabricRepairTaskStateClaimed   FabricRepairTaskState = 0x0002
	FabricRepairTaskStatePreparing FabricRepairTaskState = 0x0004
	FabricRepairTaskStateApproved  FabricRepairTaskState = 0x0008
	FabricRepairTaskStateExecuting FabricRepairTaskState = 0x0010
	FabricRepairTaskStateRestoring FabricRepairTaskState = 0x0020
	FabricRepairTaskStateCompleted FabricRepairTaskState = 0x0040
)

type FabricRepairTaskHealthCheckState int32

const (
	FabricRepairTaskHealthCheckStateNotStarted FabricRepairTaskHealthCheckState = 0x0000
	FabricRepairTaskHealthCheckStateInProgress FabricRepairTaskHealthCheckState = 0x0001
	FabricRepairTaskHealthCheckStateSucceeded  FabricRepairTaskHealthCheckState = 0x0002
	FabricRepairTaskHealthCheckStateSkipped    FabricRepairTaskHealthCheckState = 0x0003
	FabricRepairTaskHealthCheckStateTimedout   FabricRepairTaskHealthCheckState = 0x0004
)

type FabricRepairTaskHealthPolicyUpdateSettingsFlags int32

const (
	FabricRepairTaskHealthPolicyUpdateSettingsNone                             FabricRepairTaskHealthPolicyUpdateSettingsFlags = 0x0000
	FabricRepairTaskHealthPolicyUpdateSettingsHonorPerformPreparingHealthCheck FabricRepairTaskHealthPolicyUpdateSettingsFlags = 0x0001
	FabricRepairTaskHealthPolicyUpdateSettingsHonorPerformRestoringHealthCheck FabricRepairTaskHealthPolicyUpdateSettingsFlags = 0x0002
)

type FabricRepairTaskStateFilter int32

const (
	FabricRepairTaskStateFilterDefault        FabricRepairTaskStateFilter = 0x0000
	FabricRepairTaskStateFilterCreated        FabricRepairTaskStateFilter = FabricRepairTaskStateFilter(FabricRepairTaskStateCreated)
	FabricRepairTaskStateFilterClaimed        FabricRepairTaskStateFilter = FabricRepairTaskStateFilter(FabricRepairTaskStateClaimed)
	FabricRepairTaskStateFilterPreparing      FabricRepairTaskStateFilter = FabricRepairTaskStateFilter(FabricRepairTaskStatePreparing)
	FabricRepairTaskStateFilterApproved       FabricRepairTaskStateFilter = FabricRepairTaskStateFilter(FabricRepairTaskStateApproved)
	FabricRepairTaskStateFilterExecuting      FabricRepairTaskStateFilter = FabricRepairTaskStateFilter(FabricRepairTaskStateExecuting)
	FabricRepairTaskStateFilterRestoring      FabricRepairTaskStateFilter = FabricRepairTaskStateFilter(FabricRepairTaskStateRestoring)
	FabricRepairTaskStateFilterCompleted      FabricRepairTaskStateFilter = FabricRepairTaskStateFilter(FabricRepairTaskStateCompleted)
	FabricRepairTaskStateFilterReadyToExecute FabricRepairTaskStateFilter = FabricRepairTaskStateFilterApproved | FabricRepairTaskStateFilterExecuting
	FabricRepairTaskStateFilterActive         FabricRepairTaskStateFilter = FabricRepairTaskStateFilterCreated | FabricRepairTaskStateFilterClaimed | FabricRepairTaskStateFilterPreparing | FabricRepairTaskStateFilterApproved | FabricRepairTaskStateFilterExecuting | FabricRepairTaskStateFilterRestoring
	FabricRepairTaskStateFilterAll            FabricRepairTaskStateFilter = FabricRepairTaskStateFilterActive | FabricRepairTaskStateFilterCompleted
)

type FabricRepairTaskFlags int32

const (
	FabricRepairTaskFlagsNone            FabricRepairTaskFlags = 0x0000
	FabricRepairTaskFlagsCancelRequested FabricRepairTaskFlags = 0x0001
	FabricRepairTaskFlagsAbortRequested  FabricRepairTaskFlags = 0x0002
	FabricRepairTaskFlagsForcedApproval  FabricRepairTaskFlags = 0x0004
	FabricRepairTaskFlagsValidMask       FabricRepairTaskFlags = FabricRepairTaskFlagsNone | FabricRepairTaskFlagsCancelRequested | FabricRepairTaskFlagsAbortRequested | FabricRepairTaskFlagsForcedApproval
)

type FabricRepairImpactKind int32

const (
	FabricRepairImpactKindInvalid FabricRepairImpactKind = 0x0000
	FabricRepairImpactKindNode    FabricRepairImpactKind = 0x0001
)

type FabricRepairNodeImpactLevel int32

const (
	FabricRepairNodeImpactLevelInvalid    FabricRepairNodeImpactLevel = 0x0000
	FabricRepairNodeImpactLevelNone       FabricRepairNodeImpactLevel = 0x0001
	FabricRepairNodeImpactLevelRestart    FabricRepairNodeImpactLevel = 0x0002
	FabricRepairNodeImpactLevelRemoveData FabricRepairNodeImpactLevel = 0x0003
	FabricRepairNodeImpactLevelRemoveNode FabricRepairNodeImpactLevel = 0x0004
)

type FabricRepairTaskResult int32

const (
	FabricRepairTaskResultInvalid     FabricRepairTaskResult = 0x0000
	FabricRepairTaskResultSucceeded   FabricRepairTaskResult = 0x0001
	FabricRepairTaskResultCancelled   FabricRepairTaskResult = 0x0002
	FabricRepairTaskResultInterrupted FabricRepairTaskResult = 0x0004
	FabricRepairTaskResultFailed      FabricRepairTaskResult = 0x0008
	FabricRepairTaskResultPending     FabricRepairTaskResult = 0x0010
)

type FabricNodeDeactivationStatus int32

const (
	FabricNodeDeactivationStatusNone                  FabricNodeDeactivationStatus = 0x0000
	FabricNodeDeactivationStatusSafetyCheckInProgress FabricNodeDeactivationStatus = 0x0001
	FabricNodeDeactivationStatusSafetyCheckComplete   FabricNodeDeactivationStatus = 0x0002
	FabricNodeDeactivationStatusCompleted             FabricNodeDeactivationStatus = 0x0003
)

type FabricNodeDeactivationTaskType int32

const (
	FabricNodeDeactivationTaskTypeInvalid        FabricNodeDeactivationTaskType = 0x0000
	FabricNodeDeactivationTaskTypeInfrastructure FabricNodeDeactivationTaskType = 0x0001
	FabricNodeDeactivationTaskTypeRepair         FabricNodeDeactivationTaskType = 0x0002
	FabricNodeDeactivationTaskTypeClient         FabricNodeDeactivationTaskType = 0x0003
)

type FabricPartitionSelectorType int32

const (
	FabricPartitionSelectorTypeNone         FabricPartitionSelectorType = 0x0000
	FabricPartitionSelectorTypeSingleton    FabricPartitionSelectorType = 0x0001
	FabricPartitionSelectorTypeNamed        FabricPartitionSelectorType = 0x0002
	FabricPartitionSelectorTypeUniformInt64 FabricPartitionSelectorType = 0x0003
	FabricPartitionSelectorTypePartitionId  FabricPartitionSelectorType = 0x0004
	FabricPartitionSelectorTypeRandom       FabricPartitionSelectorType = 0x0005
)

type FabricDataLossMode int32

const (
	FabricDataLossModeInvalid FabricDataLossMode = 0x0000
	FabricDataLossModePartial FabricDataLossMode = 0x0001
	FabricDataLossModeFull    FabricDataLossMode = 0x0002
)

type FabricTestCommandProgressState int32

const (
	FabricTestCommandProgressStateInvalid        FabricTestCommandProgressState = 0x0000
	FabricTestCommandProgressStateRunning        FabricTestCommandProgressState = 0x0001
	FabricTestCommandProgressStateRollingBack    FabricTestCommandProgressState = 0x0002
	FabricTestCommandProgressStateCompleted      FabricTestCommandProgressState = 0x0003
	FabricTestCommandProgressStateFaulted        FabricTestCommandProgressState = 0x0004
	FabricTestCommandProgressStateCancelled      FabricTestCommandProgressState = 0x0005
	FabricTestCommandProgressStateForceCancelled FabricTestCommandProgressState = 0x0006
)

type FabricQuorumLossMode int32

const (
	FabricQuorumLossModeInvalid        FabricQuorumLossMode = 0x0000
	FabricQuorumLossModeQuorumReplicas FabricQuorumLossMode = 0x0001
	FabricQuorumLossModeAllReplicas    FabricQuorumLossMode = 0x0002
)

type FabricRestartPartitionMode int32

const (
	FabricRestartPartitionModeInvalid                FabricRestartPartitionMode = 0x0000
	FabricRestartPartitionModeAllReplicasOrInstances FabricRestartPartitionMode = 0x0001
	FabricRestartPartitionModeOnlyActiveSecondaries  FabricRestartPartitionMode = 0x0002
)

type FabricMovePrimaryDescriptionKind int32

const (
	FabricMovePrimaryDescriptionKindInvalid              FabricMovePrimaryDescriptionKind = 0x0000
	FabricMovePrimaryDescriptionKindUsingNodeName        FabricMovePrimaryDescriptionKind = 0x0001
	FabricMovePrimaryDescriptionKindUsingReplicaSelector FabricMovePrimaryDescriptionKind = 0x0002
)

type FabricMoveSecondaryDescriptionKind int32

const (
	FabricMoveSecondaryDescriptionKindInvalid              FabricMoveSecondaryDescriptionKind = 0x0000
	FabricMoveSecondaryDescriptionKindUsingNodeName        FabricMoveSecondaryDescriptionKind = 0x0001
	FabricMoveSecondaryDescriptionKindUsingReplicaSelector FabricMoveSecondaryDescriptionKind = 0x0002
)

type FabricNodeTransitionType int32

const (
	FabricNodeTransitionTypeInvalid FabricNodeTransitionType = 0x0000
	FabricNodeTransitionTypeStart   FabricNodeTransitionType = 0x0001
	FabricNodeTransitionTypeStop    FabricNodeTransitionType = 0x0002
)

type FabricReconfigurationPhase int32

const (
	FabricReconfigurationPhaseInvalid   FabricReconfigurationPhase = 0x0000
	FabricReconfigurationPhaseNone      FabricReconfigurationPhase = 0x0001
	FabricReconfigurationPhaseZero      FabricReconfigurationPhase = 0x0002
	FabricReconfigurationPhaseOne       FabricReconfigurationPhase = 0x0003
	FabricReconfigurationPhaseTwo       FabricReconfigurationPhase = 0x0004
	FabricReconfigurationPhaseThree     FabricReconfigurationPhase = 0x0005
	FabricReconfigurationPhaseFour      FabricReconfigurationPhase = 0x0006
	FabricReconfigurationAbortPhaseZero FabricReconfigurationPhase = 0x0007
)

type FabricReconfigurationType int32

const (
	FabricReconfigurationTypeInvalid     FabricReconfigurationType = 0x0000
	FabricReconfigurationTypeSwapprimary FabricReconfigurationType = 0x0001
	FabricReconfigurationTypeFailover    FabricReconfigurationType = 0x0002
	FabricReconfigurationTypeOther       FabricReconfigurationType = 0x0003
	FabricReconfigurationTypeNone        FabricReconfigurationType = 0x0004
)

type FabricChaosStatus int32

const (
	FabricChaosStatusInvalid FabricChaosStatus = 0x0000
	FabricChaosStatusRunning FabricChaosStatus = 0x0001
	FabricChaosStatusStopped FabricChaosStatus = 0x0002
)

type FabricChaosScheduleStatus int32

const (
	FabricChaosScheduleStatusInvalid FabricChaosScheduleStatus = 0x0000
	FabricChaosScheduleStatusActive  FabricChaosScheduleStatus = 0x0001
	FabricChaosScheduleStatusExpired FabricChaosScheduleStatus = 0x0002
	FabricChaosScheduleStatusPending FabricChaosScheduleStatus = 0x0003
	FabricChaosScheduleStatusStopped FabricChaosScheduleStatus = 0x0004
)

type FabricChaosEventKind int32

const (
	FabricChaosEventKindInvalid          FabricChaosEventKind = 0x0000
	FabricChaosEventKindStarted          FabricChaosEventKind = 0x0001
	FabricChaosEventKindExecutingFaults  FabricChaosEventKind = 0x0002
	FabricChaosEventKindWaiting          FabricChaosEventKind = 0x0003
	FabricChaosEventKindValidationFailed FabricChaosEventKind = 0x0004
	FabricChaosEventKindTestError        FabricChaosEventKind = 0x0005
	FabricChaosEventKindStopped          FabricChaosEventKind = 0x0006
)

type FabricProvisionApplicationTypeKind int32

const (
	FabricProvisionApplicationTypeKindInvalid        FabricProvisionApplicationTypeKind = 0x0000
	FabricProvisionApplicationTypeKindImageStorePath FabricProvisionApplicationTypeKind = 0x0001
	FabricProvisionApplicationTypeKindExternalStore  FabricProvisionApplicationTypeKind = 0x0002
)

type FabricApplicationPackageCleanupPolicy int32

const (
	FabricApplicationPackageCleanupPolicyInvalid   FabricApplicationPackageCleanupPolicy = 0x0000
	FabricApplicationPackageCleanupPolicyDefault   FabricApplicationPackageCleanupPolicy = 0x0001
	FabricApplicationPackageCleanupPolicyAutomatic FabricApplicationPackageCleanupPolicy = 0x0002
	FabricApplicationPackageCleanupPolicyManual    FabricApplicationPackageCleanupPolicy = 0x0003
)

type FabricDiagnosticsSinksKind int32

const (
	FabricDiagnosticsSinksKindInvalid       FabricDiagnosticsSinksKind = 0x000
	FabricDiagnosticsSinksKindAzureinternal FabricDiagnosticsSinksKind = 0x001
)

type FabricPlacementPolicyType int32

const (
	FabricPlacementPolicyInvalid                    FabricPlacementPolicyType = 0x0000
	FabricPlacementPolicyInvalidDomain              FabricPlacementPolicyType = 0x0001
	FabricPlacementPolicyRequiredDomain             FabricPlacementPolicyType = 0x0002
	FabricPlacementPolicyPreferredPrimaryDomain     FabricPlacementPolicyType = 0x0003
	FabricPlacementPolicyRequiredDomainDistribution FabricPlacementPolicyType = 0x0004
	FabricPlacementPolicyNonpartiallyPlaceService   FabricPlacementPolicyType = 0x0005
)

type FabricPackageSharingPolicyScope int32

const (
	FabricPackageSharingPolicyScopeNone   FabricPackageSharingPolicyScope = 0x0000
	FabricPackageSharingPolicyScopeAll    FabricPackageSharingPolicyScope = 0x0001
	FabricPackageSharingPolicyScopeCode   FabricPackageSharingPolicyScope = 0x0002
	FabricPackageSharingPolicyScopeConfig FabricPackageSharingPolicyScope = 0x0003
	FabricPackageSharingPolicyScopeData   FabricPackageSharingPolicyScope = 0x0004
)

type FabricHealthStateFilter int32

const (
	FabricHealthStateFilterDefault FabricHealthStateFilter = 0x0000
	FabricHealthStateFilterNone    FabricHealthStateFilter = 0x0001
	FabricHealthStateFilterOk      FabricHealthStateFilter = 0x0002
	FabricHealthStateFilterWarning FabricHealthStateFilter = 0x0004
	FabricHealthStateFilterError   FabricHealthStateFilter = 0x0008
	FabricHealthStateFilterAll     FabricHealthStateFilter = 0xFFFF
)

type FabricApplicationUpdateDescriptionFlags int32

const (
	FabricApplicationUpdateDescriptionFlagsNone     FabricApplicationUpdateDescriptionFlags = 0x0000
	FabricApplicationUpdateDescriptionFlagsMinnodes FabricApplicationUpdateDescriptionFlags = 0x0001
	FabricApplicationUpdateDescriptionFlagsMaxnodes FabricApplicationUpdateDescriptionFlags = 0x0002
	FabricApplicationUpdateDescriptionFlagsMetrics  FabricApplicationUpdateDescriptionFlags = 0x0004
)

type FabricScalingTriggerKind int32

const (
	FabricScalingTriggerKindInvalid              FabricScalingTriggerKind = 0x0000
	FabricScalingTriggerKindAveragePartitionLoad FabricScalingTriggerKind = 0x0001
	FabricScalingTriggerKindAverageServiceLoad   FabricScalingTriggerKind = 0x0002
)

type FabricScalingMechanismKind int32

const (
	FabricScalingMechanismInvalid                                FabricScalingMechanismKind = 0x0000
	FabricScalingMechanismKindScalePartitionInstanceCount        FabricScalingMechanismKind = 0x0001
	FabricScalingMechanismKindAddRemoveIncrementalNamedPartition FabricScalingMechanismKind = 0x0002
)

type FabricTestCommandStateFilter int32

const (
	FabricTestCommandStateFilterDefault               FabricTestCommandStateFilter = 0x0000
	FabricTestCommandStateFilterAll                   FabricTestCommandStateFilter = 0xFFFF
	FabricTestCommandStateFilterRunning               FabricTestCommandStateFilter = 0x0001
	FabricTestCommandStateFilterRollingBack           FabricTestCommandStateFilter = 0x0002
	FabricTestCommandStateFilterCompletedSuccessfully FabricTestCommandStateFilter = 0x0008
	FabricTestCommandStateFilterFailed                FabricTestCommandStateFilter = 0x0010
	FabricTestCommandStateFilterCancelled             FabricTestCommandStateFilter = 0x0020
	FabricTestCommandStateFilterForceCancelled        FabricTestCommandStateFilter = 0x0040
)

type FabricTestCommandTypeFilter int32

const (
	FabricTestCommandTypeFilterDefault             FabricTestCommandTypeFilter = 0x0000
	FabricTestCommandTypeFilterAll                 FabricTestCommandTypeFilter = 0xFFFF
	FabricTestCommandTypeFilterPartitionDataLoss   FabricTestCommandTypeFilter = 0x0001
	FabricTestCommandTypeFilterPartitionQuorumLoss FabricTestCommandTypeFilter = 0x0002
	FabricTestCommandTypeFilterPartitionRestart    FabricTestCommandTypeFilter = 0x0004
)

type FabricTestCommandType int32

const (
	FabricTestCommandTypeDefault                FabricTestCommandType = 0x0000
	FabricTestCommandTypeInvokeDataLoss         FabricTestCommandType = 0x0001
	FabricTestCommandTypeInvokeQuorumLoss       FabricTestCommandType = 0x0002
	FabricTestCommandTypeInvokeRestartPartition FabricTestCommandType = 0x0004
	FabricTestCommandTypeStartNodeTransition    FabricTestCommandType = 0x0008
)

type FabricKeyValueStoreMigrationPhase int32

const (
	FabricKeyValueStoreMigrationPhaseInactive              FabricKeyValueStoreMigrationPhase = 0
	FabricKeyValueStoreMigrationPhaseMigration             FabricKeyValueStoreMigrationPhase = 1
	FabricKeyValueStoreMigrationPhaseTargetDatabaseSwap    FabricKeyValueStoreMigrationPhase = 2
	FabricKeyValueStoreMigrationPhaseTargetDatabaseCleanup FabricKeyValueStoreMigrationPhase = 3
	FabricKeyValueStoreMigrationPhaseSourceDatabaseCleanup FabricKeyValueStoreMigrationPhase = 4
	FabricKeyValueStoreMigrationPhaseTargetDatabaseActive  FabricKeyValueStoreMigrationPhase = 5
	FabricKeyValueStoreMigrationPhaseRestoreSourceBackup   FabricKeyValueStoreMigrationPhase = 6
)

type FabricKeyValueStoreMigrationState int32

const (
	FabricKeyValueStoreMigrationStateInactive   FabricKeyValueStoreMigrationState = 0
	FabricKeyValueStoreMigrationStateProcessing FabricKeyValueStoreMigrationState = 1
	FabricKeyValueStoreMigrationStateCompleted  FabricKeyValueStoreMigrationState = 2
	FabricKeyValueStoreMigrationStateCanceled   FabricKeyValueStoreMigrationState = 3
	FabricKeyValueStoreMigrationStateFailed     FabricKeyValueStoreMigrationState = 4
)

type FabricKeyValueStoreProviderKind int32

const (
	FabricKeyValueStoreProviderKindUnknown FabricKeyValueStoreProviderKind = 0
	FabricKeyValueStoreProviderKindEse     FabricKeyValueStoreProviderKind = 1
	FabricKeyValueStoreProviderKindTstore  FabricKeyValueStoreProviderKind = 2
)

type FabricNetworkType int32

const (
	FabricNetworkTypeInvalid   FabricNetworkType = 0x0000
	FabricNetworkTypeLocal     FabricNetworkType = 0x0001
	FabricNetworkTypeFederated FabricNetworkType = 0x0002
)

type FabricNetworkStatus int32

const (
	FabricNetworkStatusInvalid  FabricNetworkStatus = 0x0000
	FabricNetworkStatusReady    FabricNetworkStatus = 0x0001
	FabricNetworkStatusCreating FabricNetworkStatus = 0x0002
	FabricNetworkStatusDeleting FabricNetworkStatus = 0x0003
	FabricNetworkStatusUpdating FabricNetworkStatus = 0x0004
	FabricNetworkStatusFailed   FabricNetworkStatus = 0x0005
)

type FabricNetworkStatusFilter int32

const (
	FabricNetworkStatusFilterDefault  FabricNetworkStatusFilter = 0x0000
	FabricNetworkStatusFilterAll      FabricNetworkStatusFilter = 0xFFFF
	FabricNetworkStatusFilterReady    FabricNetworkStatusFilter = 0x0001
	FabricNetworkStatusFilterCreating FabricNetworkStatusFilter = 0x0002
	FabricNetworkStatusFilterDeleting FabricNetworkStatusFilter = 0x0004
	FabricNetworkStatusFilterUpdating FabricNetworkStatusFilter = 0x0008
	FabricNetworkStatusFilterFailed   FabricNetworkStatusFilter = 0x0010
)

type FabricNodeId struct {
	Low  uint64
	High uint64
}
type innerFabricNodeId struct {
	FabricNodeId
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeId) toGoStruct() *FabricNodeId {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeId
}
func (obj *FabricNodeId) toInnerStruct() *innerFabricNodeId {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeId{*obj, nil}
}

type FabricOperationDataBuffer struct {
	Buffer *byte
}
type innerFabricOperationDataBuffer struct {
	FabricOperationDataBuffer
}

func (obj *innerFabricOperationDataBuffer) toGoStruct() *FabricOperationDataBuffer {
	if obj == nil {
		return nil
	}
	return &obj.FabricOperationDataBuffer
}
func (obj *FabricOperationDataBuffer) toInnerStruct() *innerFabricOperationDataBuffer {
	if obj == nil {
		return nil
	}
	return &innerFabricOperationDataBuffer{*obj}
}

type FabricServiceLoadMetricDescription struct {
	Name                 string
	Weight               FabricServiceLoadMetricWeight
	PrimaryDefaultLoad   uint32
	SecondaryDefaultLoad uint32
}

func (obj *FabricServiceLoadMetricDescription) toInnerStruct() *innerFabricServiceLoadMetricDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceLoadMetricDescription{}
	s_1, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_1

	dst.Weight = obj.Weight
	dst.PrimaryDefaultLoad = obj.PrimaryDefaultLoad
	dst.SecondaryDefaultLoad = obj.SecondaryDefaultLoad
	return &dst
}

type innerFabricServiceLoadMetricDescription struct {
	Name                 *uint16
	Weight               FabricServiceLoadMetricWeight
	PrimaryDefaultLoad   uint32
	SecondaryDefaultLoad uint32
	Reserved             unsafe.Pointer
}

func (obj *innerFabricServiceLoadMetricDescription) toGoStruct() *FabricServiceLoadMetricDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceLoadMetricDescription{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Weight = obj.Weight
	dst.PrimaryDefaultLoad = obj.PrimaryDefaultLoad
	dst.SecondaryDefaultLoad = obj.SecondaryDefaultLoad
	return &dst
}

type FabricPartitionSelector struct {
	ServiceName           string
	PartitionSelectorType FabricPartitionSelectorType
	PartitionKey          string
}

func (obj *FabricPartitionSelector) toInnerStruct() *innerFabricPartitionSelector {
	if obj == nil {
		return nil
	}
	dst := innerFabricPartitionSelector{}
	s_2, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_2

	dst.PartitionSelectorType = obj.PartitionSelectorType
	s_3, _ := windows.UTF16PtrFromString(obj.PartitionKey)
	dst.PartitionKey = s_3

	return &dst
}

type innerFabricPartitionSelector struct {
	ServiceName           *uint16
	PartitionSelectorType FabricPartitionSelectorType
	PartitionKey          *uint16
	Reserved              unsafe.Pointer
}

func (obj *innerFabricPartitionSelector) toGoStruct() *FabricPartitionSelector {
	if obj == nil {
		return nil
	}
	dst := FabricPartitionSelector{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionSelectorType = obj.PartitionSelectorType
	dst.PartitionKey = windows.UTF16PtrToString(obj.PartitionKey)
	return &dst
}

type FabricStartPartitionDataLossDescription struct {
	OperationId       windows.GUID
	PartitionSelector *FabricPartitionSelector
	DataLossMode      FabricDataLossMode
}
type innerFabricStartPartitionDataLossDescription struct {
	FabricStartPartitionDataLossDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricStartPartitionDataLossDescription) toGoStruct() *FabricStartPartitionDataLossDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricStartPartitionDataLossDescription
}
func (obj *FabricStartPartitionDataLossDescription) toInnerStruct() *innerFabricStartPartitionDataLossDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricStartPartitionDataLossDescription{*obj, nil}
}

type FabricSelectedPartition struct {
	ServiceName string
	PartitionId windows.GUID
}

func (obj *FabricSelectedPartition) toInnerStruct() *innerFabricSelectedPartition {
	if obj == nil {
		return nil
	}
	dst := innerFabricSelectedPartition{}
	s_4, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_4

	dst.PartitionId = obj.PartitionId
	return &dst
}

type innerFabricSelectedPartition struct {
	ServiceName *uint16
	PartitionId windows.GUID
	Reserved    unsafe.Pointer
}

func (obj *innerFabricSelectedPartition) toGoStruct() *FabricSelectedPartition {
	if obj == nil {
		return nil
	}
	dst := FabricSelectedPartition{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionId = obj.PartitionId
	return &dst
}

type FabricPartitionDataLossResult struct {
	SelectedPartition *FabricSelectedPartition
	ErrorCode         FabricErrorCode
}
type innerFabricPartitionDataLossResult struct {
	FabricPartitionDataLossResult
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionDataLossResult) toGoStruct() *FabricPartitionDataLossResult {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionDataLossResult
}
func (obj *FabricPartitionDataLossResult) toInnerStruct() *innerFabricPartitionDataLossResult {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionDataLossResult{*obj, nil}
}

type FabricPartitionDataLossProgress struct {
	State  FabricTestCommandProgressState
	Result *FabricPartitionDataLossResult
}
type innerFabricPartitionDataLossProgress struct {
	FabricPartitionDataLossProgress
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionDataLossProgress) toGoStruct() *FabricPartitionDataLossProgress {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionDataLossProgress
}
func (obj *FabricPartitionDataLossProgress) toInnerStruct() *innerFabricPartitionDataLossProgress {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionDataLossProgress{*obj, nil}
}

type FabricStartPartitionQuorumLossDescription struct {
	OperationId                      windows.GUID
	PartitionSelector                *FabricPartitionSelector
	QuorumLossMode                   FabricQuorumLossMode
	QuorumLossDurationInMilliSeconds int32
}
type innerFabricStartPartitionQuorumLossDescription struct {
	FabricStartPartitionQuorumLossDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricStartPartitionQuorumLossDescription) toGoStruct() *FabricStartPartitionQuorumLossDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricStartPartitionQuorumLossDescription
}
func (obj *FabricStartPartitionQuorumLossDescription) toInnerStruct() *innerFabricStartPartitionQuorumLossDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricStartPartitionQuorumLossDescription{*obj, nil}
}

type FabricPartitionQuorumLossResult struct {
	SelectedPartition *FabricSelectedPartition
	ErrorCode         FabricErrorCode
}
type innerFabricPartitionQuorumLossResult struct {
	FabricPartitionQuorumLossResult
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionQuorumLossResult) toGoStruct() *FabricPartitionQuorumLossResult {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionQuorumLossResult
}
func (obj *FabricPartitionQuorumLossResult) toInnerStruct() *innerFabricPartitionQuorumLossResult {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionQuorumLossResult{*obj, nil}
}

type FabricPartitionQuorumLossProgress struct {
	State  FabricTestCommandProgressState
	Result *FabricPartitionQuorumLossResult
}
type innerFabricPartitionQuorumLossProgress struct {
	FabricPartitionQuorumLossProgress
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionQuorumLossProgress) toGoStruct() *FabricPartitionQuorumLossProgress {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionQuorumLossProgress
}
func (obj *FabricPartitionQuorumLossProgress) toInnerStruct() *innerFabricPartitionQuorumLossProgress {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionQuorumLossProgress{*obj, nil}
}

type FabricStartPartitionRestartDescription struct {
	OperationId          windows.GUID
	PartitionSelector    *FabricPartitionSelector
	RestartPartitionMode FabricRestartPartitionMode
}
type innerFabricStartPartitionRestartDescription struct {
	FabricStartPartitionRestartDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricStartPartitionRestartDescription) toGoStruct() *FabricStartPartitionRestartDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricStartPartitionRestartDescription
}
func (obj *FabricStartPartitionRestartDescription) toInnerStruct() *innerFabricStartPartitionRestartDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricStartPartitionRestartDescription{*obj, nil}
}

type FabricOrchestrationUpgradeProgress struct {
	UpgradeState   FabricUpgradeState
	ProgressStatus uint32
}
type innerFabricOrchestrationUpgradeProgress struct {
	FabricOrchestrationUpgradeProgress
	Reserved unsafe.Pointer
}

func (obj *innerFabricOrchestrationUpgradeProgress) toGoStruct() *FabricOrchestrationUpgradeProgress {
	if obj == nil {
		return nil
	}
	return &obj.FabricOrchestrationUpgradeProgress
}
func (obj *FabricOrchestrationUpgradeProgress) toInnerStruct() *innerFabricOrchestrationUpgradeProgress {
	if obj == nil {
		return nil
	}
	return &innerFabricOrchestrationUpgradeProgress{*obj, nil}
}

type FabricOrchestrationUpgradeProgressEx1 struct {
	ConfigVersion string
}

func (obj *FabricOrchestrationUpgradeProgressEx1) toInnerStruct() *innerFabricOrchestrationUpgradeProgressEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricOrchestrationUpgradeProgressEx1{}
	s_5, _ := windows.UTF16PtrFromString(obj.ConfigVersion)
	dst.ConfigVersion = s_5

	return &dst
}

type innerFabricOrchestrationUpgradeProgressEx1 struct {
	ConfigVersion *uint16
	Reserved      unsafe.Pointer
}

func (obj *innerFabricOrchestrationUpgradeProgressEx1) toGoStruct() *FabricOrchestrationUpgradeProgressEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricOrchestrationUpgradeProgressEx1{}
	dst.ConfigVersion = windows.UTF16PtrToString(obj.ConfigVersion)
	return &dst
}

type FabricOrchestrationUpgradeProgressEx2 struct {
	Details string
}

func (obj *FabricOrchestrationUpgradeProgressEx2) toInnerStruct() *innerFabricOrchestrationUpgradeProgressEx2 {
	if obj == nil {
		return nil
	}
	dst := innerFabricOrchestrationUpgradeProgressEx2{}
	s_6, _ := windows.UTF16PtrFromString(obj.Details)
	dst.Details = s_6

	return &dst
}

type innerFabricOrchestrationUpgradeProgressEx2 struct {
	Details  *uint16
	Reserved unsafe.Pointer
}

func (obj *innerFabricOrchestrationUpgradeProgressEx2) toGoStruct() *FabricOrchestrationUpgradeProgressEx2 {
	if obj == nil {
		return nil
	}
	dst := FabricOrchestrationUpgradeProgressEx2{}
	dst.Details = windows.UTF16PtrToString(obj.Details)
	return &dst
}

type FabricPartitionRestartResult struct {
	SelectedPartition *FabricSelectedPartition
	ErrorCode         FabricErrorCode
}
type innerFabricPartitionRestartResult struct {
	FabricPartitionRestartResult
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionRestartResult) toGoStruct() *FabricPartitionRestartResult {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionRestartResult
}
func (obj *FabricPartitionRestartResult) toInnerStruct() *innerFabricPartitionRestartResult {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionRestartResult{*obj, nil}
}

type FabricPartitionRestartProgress struct {
	State  FabricTestCommandProgressState
	Result *FabricPartitionRestartResult
}
type innerFabricPartitionRestartProgress struct {
	FabricPartitionRestartProgress
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionRestartProgress) toGoStruct() *FabricPartitionRestartProgress {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionRestartProgress
}
func (obj *FabricPartitionRestartProgress) toInnerStruct() *innerFabricPartitionRestartProgress {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionRestartProgress{*obj, nil}
}

type FabricCancelTestCommandDescription struct {
	OperationId windows.GUID
	Force       bool
}
type innerFabricCancelTestCommandDescription struct {
	FabricCancelTestCommandDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricCancelTestCommandDescription) toGoStruct() *FabricCancelTestCommandDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricCancelTestCommandDescription
}
func (obj *FabricCancelTestCommandDescription) toInnerStruct() *innerFabricCancelTestCommandDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricCancelTestCommandDescription{*obj, nil}
}

type FabricOperationId struct {
	PartitionId windows.GUID
}
type innerFabricOperationId struct {
	FabricOperationId
	Reserved unsafe.Pointer
}

func (obj *innerFabricOperationId) toGoStruct() *FabricOperationId {
	if obj == nil {
		return nil
	}
	return &obj.FabricOperationId
}
func (obj *FabricOperationId) toInnerStruct() *innerFabricOperationId {
	if obj == nil {
		return nil
	}
	return &innerFabricOperationId{*obj, nil}
}

type FabricTestCommandListDescription struct {
	TestCommandStateFilter FabricTestCommandStateFilter
	TestCommandTypeFilter  FabricTestCommandTypeFilter
}
type innerFabricTestCommandListDescription struct {
	FabricTestCommandListDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricTestCommandListDescription) toGoStruct() *FabricTestCommandListDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricTestCommandListDescription
}
func (obj *FabricTestCommandListDescription) toInnerStruct() *innerFabricTestCommandListDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricTestCommandListDescription{*obj, nil}
}

type TestCommandQueryResultItem struct {
	OperationId      windows.GUID
	TestCommandState FabricTestCommandProgressState
	TestCommandType  FabricTestCommandType
}
type innerTestCommandQueryResultItem struct {
	TestCommandQueryResultItem
	Reserved unsafe.Pointer
}

func (obj *innerTestCommandQueryResultItem) toGoStruct() *TestCommandQueryResultItem {
	if obj == nil {
		return nil
	}
	return &obj.TestCommandQueryResultItem
}
func (obj *TestCommandQueryResultItem) toInnerStruct() *innerTestCommandQueryResultItem {
	if obj == nil {
		return nil
	}
	return &innerTestCommandQueryResultItem{*obj, nil}
}

type innerTestCommandQueryResultList struct {
	Count uint32
	Items unsafe.Pointer
}

func (obj *innerTestCommandQueryResultList) toGoStruct() []interface{} {
	var dst []interface{}
	{
		var innerlst []unsafe.Pointer
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem interface{}

			tmpitem = fromUnsafePointer(item)

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricNodeResult struct {
	NodeName     string
	NodeInstance uint64
}

func (obj *FabricNodeResult) toInnerStruct() *innerFabricNodeResult {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeResult{}
	s_7, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_7

	dst.NodeInstance = obj.NodeInstance
	return &dst
}

type innerFabricNodeResult struct {
	NodeName     *uint16
	NodeInstance uint64
	Reserved     unsafe.Pointer
}

func (obj *innerFabricNodeResult) toGoStruct() *FabricNodeResult {
	if obj == nil {
		return nil
	}
	dst := FabricNodeResult{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.NodeInstance = obj.NodeInstance
	return &dst
}

type FabricRestartNodeStatus struct {
	NodeResult *FabricNodeResult
}
type innerFabricRestartNodeStatus struct {
	FabricRestartNodeStatus
	Reserved unsafe.Pointer
}

func (obj *innerFabricRestartNodeStatus) toGoStruct() *FabricRestartNodeStatus {
	if obj == nil {
		return nil
	}
	return &obj.FabricRestartNodeStatus
}
func (obj *FabricRestartNodeStatus) toInnerStruct() *innerFabricRestartNodeStatus {
	if obj == nil {
		return nil
	}
	return &innerFabricRestartNodeStatus{*obj, nil}
}

type FabricStartNodeStatus struct {
	NodeResult *FabricNodeResult
}
type innerFabricStartNodeStatus struct {
	FabricStartNodeStatus
	Reserved unsafe.Pointer
}

func (obj *innerFabricStartNodeStatus) toGoStruct() *FabricStartNodeStatus {
	if obj == nil {
		return nil
	}
	return &obj.FabricStartNodeStatus
}
func (obj *FabricStartNodeStatus) toInnerStruct() *innerFabricStartNodeStatus {
	if obj == nil {
		return nil
	}
	return &innerFabricStartNodeStatus{*obj, nil}
}

type FabricStopNodeStatus struct {
	NodeResult *FabricNodeResult
}
type innerFabricStopNodeStatus struct {
	FabricStopNodeStatus
	Reserved unsafe.Pointer
}

func (obj *innerFabricStopNodeStatus) toGoStruct() *FabricStopNodeStatus {
	if obj == nil {
		return nil
	}
	return &obj.FabricStopNodeStatus
}
func (obj *FabricStopNodeStatus) toInnerStruct() *innerFabricStopNodeStatus {
	if obj == nil {
		return nil
	}
	return &innerFabricStopNodeStatus{*obj, nil}
}

type FabricNodeTransitionResult struct {
	ErrorCode  FabricErrorCode
	NodeResult *FabricNodeResult
}
type innerFabricNodeTransitionResult struct {
	FabricNodeTransitionResult
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeTransitionResult) toGoStruct() *FabricNodeTransitionResult {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeTransitionResult
}
func (obj *FabricNodeTransitionResult) toInnerStruct() *innerFabricNodeTransitionResult {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeTransitionResult{*obj, nil}
}

type FabricNodeTransitionProgress struct {
	State  FabricTestCommandProgressState
	Result *FabricNodeTransitionResult
}
type innerFabricNodeTransitionProgress struct {
	FabricNodeTransitionProgress
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeTransitionProgress) toGoStruct() *FabricNodeTransitionProgress {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeTransitionProgress
}
func (obj *FabricNodeTransitionProgress) toInnerStruct() *innerFabricNodeTransitionProgress {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeTransitionProgress{*obj, nil}
}

type innerFabricServiceLoadMetricDescriptionList struct {
	Count uint32
	Items *innerFabricServiceLoadMetricDescription
}

func (obj *innerFabricServiceLoadMetricDescriptionList) toGoStruct() []FabricServiceLoadMetricDescription {
	var dst []FabricServiceLoadMetricDescription
	{
		var innerlst []innerFabricServiceLoadMetricDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceLoadMetricDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServiceCorrelationDescription struct {
	ServiceName string
	Scheme      FabricServiceCorrelationScheme
}

func (obj *FabricServiceCorrelationDescription) toInnerStruct() *innerFabricServiceCorrelationDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceCorrelationDescription{}
	s_8, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_8

	dst.Scheme = obj.Scheme
	return &dst
}

type innerFabricServiceCorrelationDescription struct {
	ServiceName *uint16
	Scheme      FabricServiceCorrelationScheme
	Reserved    unsafe.Pointer
}

func (obj *innerFabricServiceCorrelationDescription) toGoStruct() *FabricServiceCorrelationDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceCorrelationDescription{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.Scheme = obj.Scheme
	return &dst
}

type FabricScalingTrigger struct {
	ScalingTriggerKind        FabricScalingTriggerKind
	ScalingTriggerDescription interface{}
}
type innerFabricScalingTrigger struct {
	FabricScalingTrigger
}

func (obj *innerFabricScalingTrigger) toGoStruct() *FabricScalingTrigger {
	if obj == nil {
		return nil
	}
	return &obj.FabricScalingTrigger
}
func (obj *FabricScalingTrigger) toInnerStruct() *innerFabricScalingTrigger {
	if obj == nil {
		return nil
	}
	return &innerFabricScalingTrigger{*obj}
}

type FabricScalingMechanism struct {
	ScalingMechanismKind        FabricScalingMechanismKind
	ScalingMechanismDescription interface{}
}
type innerFabricScalingMechanism struct {
	FabricScalingMechanism
}

func (obj *innerFabricScalingMechanism) toGoStruct() *FabricScalingMechanism {
	if obj == nil {
		return nil
	}
	return &obj.FabricScalingMechanism
}
func (obj *FabricScalingMechanism) toInnerStruct() *innerFabricScalingMechanism {
	if obj == nil {
		return nil
	}
	return &innerFabricScalingMechanism{*obj}
}

type FabricServiceScalingPolicy struct {
	ServiceScalingPolicyTrigger   FabricScalingTrigger
	ServiceScalingPolicyMechanism FabricScalingMechanism
}
type innerFabricServiceScalingPolicy struct {
	FabricServiceScalingPolicy
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceScalingPolicy) toGoStruct() *FabricServiceScalingPolicy {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceScalingPolicy
}
func (obj *FabricServiceScalingPolicy) toInnerStruct() *innerFabricServiceScalingPolicy {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceScalingPolicy{*obj, nil}
}

type FabricScalingTriggerAveragePartitionLoad struct {
	MetricName             string
	LowerLoadThreshold     float64
	UpperLoadThreshold     float64
	ScaleIntervalInSeconds uint32
}

func (obj *FabricScalingTriggerAveragePartitionLoad) toInnerStruct() *innerFabricScalingTriggerAveragePartitionLoad {
	if obj == nil {
		return nil
	}
	dst := innerFabricScalingTriggerAveragePartitionLoad{}
	s_9, _ := windows.UTF16PtrFromString(obj.MetricName)
	dst.MetricName = s_9

	dst.LowerLoadThreshold = obj.LowerLoadThreshold
	dst.UpperLoadThreshold = obj.UpperLoadThreshold
	dst.ScaleIntervalInSeconds = obj.ScaleIntervalInSeconds
	return &dst
}

type innerFabricScalingTriggerAveragePartitionLoad struct {
	MetricName             *uint16
	LowerLoadThreshold     float64
	UpperLoadThreshold     float64
	ScaleIntervalInSeconds uint32
	Reserved               unsafe.Pointer
}

func (obj *innerFabricScalingTriggerAveragePartitionLoad) toGoStruct() *FabricScalingTriggerAveragePartitionLoad {
	if obj == nil {
		return nil
	}
	dst := FabricScalingTriggerAveragePartitionLoad{}
	dst.MetricName = windows.UTF16PtrToString(obj.MetricName)
	dst.LowerLoadThreshold = obj.LowerLoadThreshold
	dst.UpperLoadThreshold = obj.UpperLoadThreshold
	dst.ScaleIntervalInSeconds = obj.ScaleIntervalInSeconds
	return &dst
}

type FabricScalingTriggerAverageServiceLoad struct {
	MetricName             string
	LowerLoadThreshold     float64
	UpperLoadThreshold     float64
	ScaleIntervalInSeconds uint32
}

func (obj *FabricScalingTriggerAverageServiceLoad) toInnerStruct() *innerFabricScalingTriggerAverageServiceLoad {
	if obj == nil {
		return nil
	}
	dst := innerFabricScalingTriggerAverageServiceLoad{}
	s_10, _ := windows.UTF16PtrFromString(obj.MetricName)
	dst.MetricName = s_10

	dst.LowerLoadThreshold = obj.LowerLoadThreshold
	dst.UpperLoadThreshold = obj.UpperLoadThreshold
	dst.ScaleIntervalInSeconds = obj.ScaleIntervalInSeconds
	return &dst
}

type innerFabricScalingTriggerAverageServiceLoad struct {
	MetricName             *uint16
	LowerLoadThreshold     float64
	UpperLoadThreshold     float64
	ScaleIntervalInSeconds uint32
	Reserved               unsafe.Pointer
}

func (obj *innerFabricScalingTriggerAverageServiceLoad) toGoStruct() *FabricScalingTriggerAverageServiceLoad {
	if obj == nil {
		return nil
	}
	dst := FabricScalingTriggerAverageServiceLoad{}
	dst.MetricName = windows.UTF16PtrToString(obj.MetricName)
	dst.LowerLoadThreshold = obj.LowerLoadThreshold
	dst.UpperLoadThreshold = obj.UpperLoadThreshold
	dst.ScaleIntervalInSeconds = obj.ScaleIntervalInSeconds
	return &dst
}

type FabricScalingTriggerAverageServiceLoadEx1 struct {
	UseOnlyPrimaryLoad bool
}
type innerFabricScalingTriggerAverageServiceLoadEx1 struct {
	FabricScalingTriggerAverageServiceLoadEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricScalingTriggerAverageServiceLoadEx1) toGoStruct() *FabricScalingTriggerAverageServiceLoadEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricScalingTriggerAverageServiceLoadEx1
}
func (obj *FabricScalingTriggerAverageServiceLoadEx1) toInnerStruct() *innerFabricScalingTriggerAverageServiceLoadEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricScalingTriggerAverageServiceLoadEx1{*obj, nil}
}

type FabricScalingMechanismPartitionInstanceCount struct {
	MaximumInstanceCount int32
	MinimumInstanceCount int32
	ScaleIncrement       int32
}
type innerFabricScalingMechanismPartitionInstanceCount struct {
	FabricScalingMechanismPartitionInstanceCount
	Reserved unsafe.Pointer
}

func (obj *innerFabricScalingMechanismPartitionInstanceCount) toGoStruct() *FabricScalingMechanismPartitionInstanceCount {
	if obj == nil {
		return nil
	}
	return &obj.FabricScalingMechanismPartitionInstanceCount
}
func (obj *FabricScalingMechanismPartitionInstanceCount) toInnerStruct() *innerFabricScalingMechanismPartitionInstanceCount {
	if obj == nil {
		return nil
	}
	return &innerFabricScalingMechanismPartitionInstanceCount{*obj, nil}
}

type FabricScalingMechanismAddRemoveIncrementalNamedPartition struct {
	MaximumPartitionCount int32
	MinimumPartitionCount int32
	ScaleIncrement        int32
}
type innerFabricScalingMechanismAddRemoveIncrementalNamedPartition struct {
	FabricScalingMechanismAddRemoveIncrementalNamedPartition
	Reserved unsafe.Pointer
}

func (obj *innerFabricScalingMechanismAddRemoveIncrementalNamedPartition) toGoStruct() *FabricScalingMechanismAddRemoveIncrementalNamedPartition {
	if obj == nil {
		return nil
	}
	return &obj.FabricScalingMechanismAddRemoveIncrementalNamedPartition
}
func (obj *FabricScalingMechanismAddRemoveIncrementalNamedPartition) toInnerStruct() *innerFabricScalingMechanismAddRemoveIncrementalNamedPartition {
	if obj == nil {
		return nil
	}
	return &innerFabricScalingMechanismAddRemoveIncrementalNamedPartition{*obj, nil}
}

type FabricPlacementPolicyInvalidDomainDescription struct {
	InvalidFaultDomain string
}

func (obj *FabricPlacementPolicyInvalidDomainDescription) toInnerStruct() *innerFabricPlacementPolicyInvalidDomainDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricPlacementPolicyInvalidDomainDescription{}
	s_11, _ := windows.UTF16PtrFromString(obj.InvalidFaultDomain)
	dst.InvalidFaultDomain = s_11

	return &dst
}

type innerFabricPlacementPolicyInvalidDomainDescription struct {
	InvalidFaultDomain *uint16
	Reserved           unsafe.Pointer
}

func (obj *innerFabricPlacementPolicyInvalidDomainDescription) toGoStruct() *FabricPlacementPolicyInvalidDomainDescription {
	if obj == nil {
		return nil
	}
	dst := FabricPlacementPolicyInvalidDomainDescription{}
	dst.InvalidFaultDomain = windows.UTF16PtrToString(obj.InvalidFaultDomain)
	return &dst
}

type FabricPlacementPolicyRequiredDomainDescription struct {
	RequiredFaultDomain string
}

func (obj *FabricPlacementPolicyRequiredDomainDescription) toInnerStruct() *innerFabricPlacementPolicyRequiredDomainDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricPlacementPolicyRequiredDomainDescription{}
	s_12, _ := windows.UTF16PtrFromString(obj.RequiredFaultDomain)
	dst.RequiredFaultDomain = s_12

	return &dst
}

type innerFabricPlacementPolicyRequiredDomainDescription struct {
	RequiredFaultDomain *uint16
	Reserved            unsafe.Pointer
}

func (obj *innerFabricPlacementPolicyRequiredDomainDescription) toGoStruct() *FabricPlacementPolicyRequiredDomainDescription {
	if obj == nil {
		return nil
	}
	dst := FabricPlacementPolicyRequiredDomainDescription{}
	dst.RequiredFaultDomain = windows.UTF16PtrToString(obj.RequiredFaultDomain)
	return &dst
}

type FabricPlacementPolicyPreferredPrimaryDomainDescription struct {
	PreferredPrimaryFaultDomain string
}

func (obj *FabricPlacementPolicyPreferredPrimaryDomainDescription) toInnerStruct() *innerFabricPlacementPolicyPreferredPrimaryDomainDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricPlacementPolicyPreferredPrimaryDomainDescription{}
	s_13, _ := windows.UTF16PtrFromString(obj.PreferredPrimaryFaultDomain)
	dst.PreferredPrimaryFaultDomain = s_13

	return &dst
}

type innerFabricPlacementPolicyPreferredPrimaryDomainDescription struct {
	PreferredPrimaryFaultDomain *uint16
	Reserved                    unsafe.Pointer
}

func (obj *innerFabricPlacementPolicyPreferredPrimaryDomainDescription) toGoStruct() *FabricPlacementPolicyPreferredPrimaryDomainDescription {
	if obj == nil {
		return nil
	}
	dst := FabricPlacementPolicyPreferredPrimaryDomainDescription{}
	dst.PreferredPrimaryFaultDomain = windows.UTF16PtrToString(obj.PreferredPrimaryFaultDomain)
	return &dst
}

type FabricPlacementPolicyRequiredDomainDistributionDescription struct {
}
type innerFabricPlacementPolicyRequiredDomainDistributionDescription struct {
	FabricPlacementPolicyRequiredDomainDistributionDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricPlacementPolicyRequiredDomainDistributionDescription) toGoStruct() *FabricPlacementPolicyRequiredDomainDistributionDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricPlacementPolicyRequiredDomainDistributionDescription
}
func (obj *FabricPlacementPolicyRequiredDomainDistributionDescription) toInnerStruct() *innerFabricPlacementPolicyRequiredDomainDistributionDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricPlacementPolicyRequiredDomainDistributionDescription{*obj, nil}
}

type FabricPlacementPolicyNonpartiallyPlaceServiceDescription struct {
}
type innerFabricPlacementPolicyNonpartiallyPlaceServiceDescription struct {
	FabricPlacementPolicyNonpartiallyPlaceServiceDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricPlacementPolicyNonpartiallyPlaceServiceDescription) toGoStruct() *FabricPlacementPolicyNonpartiallyPlaceServiceDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricPlacementPolicyNonpartiallyPlaceServiceDescription
}
func (obj *FabricPlacementPolicyNonpartiallyPlaceServiceDescription) toInnerStruct() *innerFabricPlacementPolicyNonpartiallyPlaceServiceDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricPlacementPolicyNonpartiallyPlaceServiceDescription{*obj, nil}
}

type FabricServicePlacementPolicyDescription struct {
	Type  FabricPlacementPolicyType
	Value interface{}
}
type innerFabricServicePlacementPolicyDescription struct {
	FabricServicePlacementPolicyDescription
}

func (obj *innerFabricServicePlacementPolicyDescription) toGoStruct() *FabricServicePlacementPolicyDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricServicePlacementPolicyDescription
}
func (obj *FabricServicePlacementPolicyDescription) toInnerStruct() *innerFabricServicePlacementPolicyDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricServicePlacementPolicyDescription{*obj}
}

type innerFabricServicePlacementPolicyList struct {
	PolicyCount uint32
	Policies    *innerFabricServicePlacementPolicyDescription
}

func (obj *innerFabricServicePlacementPolicyList) toGoStruct() []FabricServicePlacementPolicyDescription {
	var dst []FabricServicePlacementPolicyDescription
	{
		var innerlst []innerFabricServicePlacementPolicyDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Policies), int(obj.PolicyCount))

		for _, item := range innerlst {
			var tmpitem FabricServicePlacementPolicyDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServicePartitionInformation struct {
	Kind  FabricServicePartitionKind
	Value interface{}
}
type innerFabricServicePartitionInformation struct {
	FabricServicePartitionInformation
}

func (obj *innerFabricServicePartitionInformation) toGoStruct() *FabricServicePartitionInformation {
	if obj == nil {
		return nil
	}
	return &obj.FabricServicePartitionInformation
}
func (obj *FabricServicePartitionInformation) toInnerStruct() *innerFabricServicePartitionInformation {
	if obj == nil {
		return nil
	}
	return &innerFabricServicePartitionInformation{*obj}
}

type FabricSingletonPartitionInformation struct {
	Id windows.GUID
}
type innerFabricSingletonPartitionInformation struct {
	FabricSingletonPartitionInformation
	Reserved unsafe.Pointer
}

func (obj *innerFabricSingletonPartitionInformation) toGoStruct() *FabricSingletonPartitionInformation {
	if obj == nil {
		return nil
	}
	return &obj.FabricSingletonPartitionInformation
}
func (obj *FabricSingletonPartitionInformation) toInnerStruct() *innerFabricSingletonPartitionInformation {
	if obj == nil {
		return nil
	}
	return &innerFabricSingletonPartitionInformation{*obj, nil}
}

type FabricInt64RangePartitionInformation struct {
	Id      windows.GUID
	LowKey  int64
	HighKey int64
}
type innerFabricInt64RangePartitionInformation struct {
	FabricInt64RangePartitionInformation
	Reserved unsafe.Pointer
}

func (obj *innerFabricInt64RangePartitionInformation) toGoStruct() *FabricInt64RangePartitionInformation {
	if obj == nil {
		return nil
	}
	return &obj.FabricInt64RangePartitionInformation
}
func (obj *FabricInt64RangePartitionInformation) toInnerStruct() *innerFabricInt64RangePartitionInformation {
	if obj == nil {
		return nil
	}
	return &innerFabricInt64RangePartitionInformation{*obj, nil}
}

type FabricNamedPartitionInformation struct {
	Id   windows.GUID
	Name string
}

func (obj *FabricNamedPartitionInformation) toInnerStruct() *innerFabricNamedPartitionInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricNamedPartitionInformation{}
	dst.Id = obj.Id
	s_14, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_14

	return &dst
}

type innerFabricNamedPartitionInformation struct {
	Id       windows.GUID
	Name     *uint16
	Reserved unsafe.Pointer
}

func (obj *innerFabricNamedPartitionInformation) toGoStruct() *FabricNamedPartitionInformation {
	if obj == nil {
		return nil
	}
	dst := FabricNamedPartitionInformation{}
	dst.Id = obj.Id
	dst.Name = windows.UTF16PtrToString(obj.Name)
	return &dst
}

type FabricCodePackageEntryPointDescription struct {
	Kind  FabricCodePackageEntryPointKind
	Value interface{}
}
type innerFabricCodePackageEntryPointDescription struct {
	FabricCodePackageEntryPointDescription
}

func (obj *innerFabricCodePackageEntryPointDescription) toGoStruct() *FabricCodePackageEntryPointDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricCodePackageEntryPointDescription
}
func (obj *FabricCodePackageEntryPointDescription) toInnerStruct() *innerFabricCodePackageEntryPointDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricCodePackageEntryPointDescription{*obj}
}

type FabricContainerhostEntryPointDescription struct {
	ImageName  string
	Commands   string
	EntryPoint string
}

func (obj *FabricContainerhostEntryPointDescription) toInnerStruct() *innerFabricContainerhostEntryPointDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricContainerhostEntryPointDescription{}
	s_15, _ := windows.UTF16PtrFromString(obj.ImageName)
	dst.ImageName = s_15

	s_16, _ := windows.UTF16PtrFromString(obj.Commands)
	dst.Commands = s_16

	s_17, _ := windows.UTF16PtrFromString(obj.EntryPoint)
	dst.EntryPoint = s_17

	return &dst
}

type innerFabricContainerhostEntryPointDescription struct {
	ImageName  *uint16
	Commands   *uint16
	EntryPoint *uint16
	Reserved   unsafe.Pointer
}

func (obj *innerFabricContainerhostEntryPointDescription) toGoStruct() *FabricContainerhostEntryPointDescription {
	if obj == nil {
		return nil
	}
	dst := FabricContainerhostEntryPointDescription{}
	dst.ImageName = windows.UTF16PtrToString(obj.ImageName)
	dst.Commands = windows.UTF16PtrToString(obj.Commands)
	dst.EntryPoint = windows.UTF16PtrToString(obj.EntryPoint)
	return &dst
}

type FabricExehostEntryPointDescription struct {
	Program       string
	Arguments     string
	WorkingFolder FabricErrorxehostWorkingFolder
}

func (obj *FabricExehostEntryPointDescription) toInnerStruct() *innerFabricExehostEntryPointDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricExehostEntryPointDescription{}
	s_18, _ := windows.UTF16PtrFromString(obj.Program)
	dst.Program = s_18

	s_19, _ := windows.UTF16PtrFromString(obj.Arguments)
	dst.Arguments = s_19

	dst.WorkingFolder = obj.WorkingFolder
	return &dst
}

type innerFabricExehostEntryPointDescription struct {
	Program       *uint16
	Arguments     *uint16
	WorkingFolder FabricErrorxehostWorkingFolder
	Reserved      unsafe.Pointer
}

func (obj *innerFabricExehostEntryPointDescription) toGoStruct() *FabricExehostEntryPointDescription {
	if obj == nil {
		return nil
	}
	dst := FabricExehostEntryPointDescription{}
	dst.Program = windows.UTF16PtrToString(obj.Program)
	dst.Arguments = windows.UTF16PtrToString(obj.Arguments)
	dst.WorkingFolder = obj.WorkingFolder
	return &dst
}

type FabricExehostEntryPointDescriptionEx1 struct {
	PeriodicIntervalInSeconds            uint32
	ConsoleRedirectionEnabled            bool
	ConsoleRedirectionFileRetentionCount uint32
	ConsoleRedirectionFileMaxSizeInKb    uint32
}
type innerFabricExehostEntryPointDescriptionEx1 struct {
	FabricExehostEntryPointDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricExehostEntryPointDescriptionEx1) toGoStruct() *FabricExehostEntryPointDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricExehostEntryPointDescriptionEx1
}
func (obj *FabricExehostEntryPointDescriptionEx1) toInnerStruct() *innerFabricExehostEntryPointDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricExehostEntryPointDescriptionEx1{*obj, nil}
}

type FabricExehostEntryPointDescriptionEx2 struct {
	IsExternalExecutable bool
}
type innerFabricExehostEntryPointDescriptionEx2 struct {
	FabricExehostEntryPointDescriptionEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricExehostEntryPointDescriptionEx2) toGoStruct() *FabricExehostEntryPointDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricExehostEntryPointDescriptionEx2
}
func (obj *FabricExehostEntryPointDescriptionEx2) toInnerStruct() *innerFabricExehostEntryPointDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricExehostEntryPointDescriptionEx2{*obj, nil}
}

type FabricDllhostHostedDllDescription struct {
	Kind  FabricDllhostHostedDllKind
	Value interface{}
}
type innerFabricDllhostHostedDllDescription struct {
	FabricDllhostHostedDllDescription
}

func (obj *innerFabricDllhostHostedDllDescription) toGoStruct() *FabricDllhostHostedDllDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricDllhostHostedDllDescription
}
func (obj *FabricDllhostHostedDllDescription) toInnerStruct() *innerFabricDllhostHostedDllDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricDllhostHostedDllDescription{*obj}
}

type FabricDllhostHostedUnmanagedDllDescription struct {
	DllName string
}

func (obj *FabricDllhostHostedUnmanagedDllDescription) toInnerStruct() *innerFabricDllhostHostedUnmanagedDllDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDllhostHostedUnmanagedDllDescription{}
	s_20, _ := windows.UTF16PtrFromString(obj.DllName)
	dst.DllName = s_20

	return &dst
}

type innerFabricDllhostHostedUnmanagedDllDescription struct {
	DllName  *uint16
	Reserved unsafe.Pointer
}

func (obj *innerFabricDllhostHostedUnmanagedDllDescription) toGoStruct() *FabricDllhostHostedUnmanagedDllDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDllhostHostedUnmanagedDllDescription{}
	dst.DllName = windows.UTF16PtrToString(obj.DllName)
	return &dst
}

type FabricDllhostHostedManagedDllDescription struct {
	AssemblyName string
}

func (obj *FabricDllhostHostedManagedDllDescription) toInnerStruct() *innerFabricDllhostHostedManagedDllDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDllhostHostedManagedDllDescription{}
	s_21, _ := windows.UTF16PtrFromString(obj.AssemblyName)
	dst.AssemblyName = s_21

	return &dst
}

type innerFabricDllhostHostedManagedDllDescription struct {
	AssemblyName *uint16
	Reserved     unsafe.Pointer
}

func (obj *innerFabricDllhostHostedManagedDllDescription) toGoStruct() *FabricDllhostHostedManagedDllDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDllhostHostedManagedDllDescription{}
	dst.AssemblyName = windows.UTF16PtrToString(obj.AssemblyName)
	return &dst
}

type innerFabricDllhostHostedDllDescriptionList struct {
	Count uint32
	Items *innerFabricDllhostHostedDllDescription
}

func (obj *innerFabricDllhostHostedDllDescriptionList) toGoStruct() []FabricDllhostHostedDllDescription {
	var dst []FabricDllhostHostedDllDescription
	{
		var innerlst []innerFabricDllhostHostedDllDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDllhostHostedDllDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDllhostEntryPointDescription struct {
	IsolationPolicyType FabricDllhostIsolationPolicy
	HostedDlls          []FabricDllhostHostedDllDescription
}

func (obj *FabricDllhostEntryPointDescription) toInnerStruct() *innerFabricDllhostEntryPointDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDllhostEntryPointDescription{}
	dst.IsolationPolicyType = obj.IsolationPolicyType
	lst_22 := &innerFabricDllhostHostedDllDescriptionList{}
	{

		var tmp []innerFabricDllhostHostedDllDescription

		for _, item := range obj.HostedDlls {
			var tmpitem innerFabricDllhostHostedDllDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_22.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_22.Items = &tmp[0]
		}

	}
	dst.HostedDlls = lst_22
	return &dst
}

type innerFabricDllhostEntryPointDescription struct {
	IsolationPolicyType FabricDllhostIsolationPolicy
	HostedDlls          *innerFabricDllhostHostedDllDescriptionList
	Reserved            unsafe.Pointer
}

func (obj *innerFabricDllhostEntryPointDescription) toGoStruct() *FabricDllhostEntryPointDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDllhostEntryPointDescription{}
	dst.IsolationPolicyType = obj.IsolationPolicyType
	{
		var innerlst []innerFabricDllhostHostedDllDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.HostedDlls.Items), int(obj.HostedDlls.Count))

		for _, item := range innerlst {
			var tmpitem FabricDllhostHostedDllDescription

			tmpitem = *item.toGoStruct()

			dst.HostedDlls = append(dst.HostedDlls, tmpitem)
		}

	}
	return &dst
}

type FabricCodePackageDescription struct {
	Name                   string
	Version                string
	ServiceManifestName    string
	ServiceManifestVersion string
	IsShared               bool
	SetupEntryPoint        *FabricExehostEntryPointDescription
	EntryPoint             *FabricCodePackageEntryPointDescription
}

func (obj *FabricCodePackageDescription) toInnerStruct() *innerFabricCodePackageDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricCodePackageDescription{}
	s_23, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_23

	s_24, _ := windows.UTF16PtrFromString(obj.Version)
	dst.Version = s_24

	s_25, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_25

	s_26, _ := windows.UTF16PtrFromString(obj.ServiceManifestVersion)
	dst.ServiceManifestVersion = s_26

	dst.IsShared = obj.IsShared
	dst.SetupEntryPoint = obj.SetupEntryPoint.toInnerStruct()
	dst.EntryPoint = obj.EntryPoint.toInnerStruct()
	return &dst
}

type innerFabricCodePackageDescription struct {
	Name                   *uint16
	Version                *uint16
	ServiceManifestName    *uint16
	ServiceManifestVersion *uint16
	IsShared               bool
	SetupEntryPoint        *innerFabricExehostEntryPointDescription
	EntryPoint             *innerFabricCodePackageEntryPointDescription
	Reserved               unsafe.Pointer
}

func (obj *innerFabricCodePackageDescription) toGoStruct() *FabricCodePackageDescription {
	if obj == nil {
		return nil
	}
	dst := FabricCodePackageDescription{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Version = windows.UTF16PtrToString(obj.Version)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.ServiceManifestVersion = windows.UTF16PtrToString(obj.ServiceManifestVersion)
	dst.IsShared = obj.IsShared
	dst.SetupEntryPoint = obj.SetupEntryPoint.toGoStruct()
	dst.EntryPoint = obj.EntryPoint.toGoStruct()
	return &dst
}

type FabricRunasPolicyDescription struct {
	UserName string
}

func (obj *FabricRunasPolicyDescription) toInnerStruct() *innerFabricRunasPolicyDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricRunasPolicyDescription{}
	s_27, _ := windows.UTF16PtrFromString(obj.UserName)
	dst.UserName = s_27

	return &dst
}

type innerFabricRunasPolicyDescription struct {
	UserName *uint16
	Reserved unsafe.Pointer
}

func (obj *innerFabricRunasPolicyDescription) toGoStruct() *FabricRunasPolicyDescription {
	if obj == nil {
		return nil
	}
	dst := FabricRunasPolicyDescription{}
	dst.UserName = windows.UTF16PtrToString(obj.UserName)
	return &dst
}

type FabricConfigurationPackageDescription struct {
	Name                   string
	Version                string
	ServiceManifestName    string
	ServiceManifestVersion string
}

func (obj *FabricConfigurationPackageDescription) toInnerStruct() *innerFabricConfigurationPackageDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricConfigurationPackageDescription{}
	s_28, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_28

	s_29, _ := windows.UTF16PtrFromString(obj.Version)
	dst.Version = s_29

	s_30, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_30

	s_31, _ := windows.UTF16PtrFromString(obj.ServiceManifestVersion)
	dst.ServiceManifestVersion = s_31

	return &dst
}

type innerFabricConfigurationPackageDescription struct {
	Name                   *uint16
	Version                *uint16
	ServiceManifestName    *uint16
	ServiceManifestVersion *uint16
	Reserved               unsafe.Pointer
}

func (obj *innerFabricConfigurationPackageDescription) toGoStruct() *FabricConfigurationPackageDescription {
	if obj == nil {
		return nil
	}
	dst := FabricConfigurationPackageDescription{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Version = windows.UTF16PtrToString(obj.Version)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.ServiceManifestVersion = windows.UTF16PtrToString(obj.ServiceManifestVersion)
	return &dst
}

type FabricDataPackageDescription struct {
	Name                   string
	Version                string
	ServiceManifestName    string
	ServiceManifestVersion string
}

func (obj *FabricDataPackageDescription) toInnerStruct() *innerFabricDataPackageDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDataPackageDescription{}
	s_32, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_32

	s_33, _ := windows.UTF16PtrFromString(obj.Version)
	dst.Version = s_33

	s_34, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_34

	s_35, _ := windows.UTF16PtrFromString(obj.ServiceManifestVersion)
	dst.ServiceManifestVersion = s_35

	return &dst
}

type innerFabricDataPackageDescription struct {
	Name                   *uint16
	Version                *uint16
	ServiceManifestName    *uint16
	ServiceManifestVersion *uint16
	Reserved               unsafe.Pointer
}

func (obj *innerFabricDataPackageDescription) toGoStruct() *FabricDataPackageDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDataPackageDescription{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Version = windows.UTF16PtrToString(obj.Version)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.ServiceManifestVersion = windows.UTF16PtrToString(obj.ServiceManifestVersion)
	return &dst
}

type FabricServiceTypeDescription struct {
	Kind  FabricServiceKind
	Value interface{}
}
type innerFabricServiceTypeDescription struct {
	FabricServiceTypeDescription
}

func (obj *innerFabricServiceTypeDescription) toGoStruct() *FabricServiceTypeDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceTypeDescription
}
func (obj *FabricServiceTypeDescription) toInnerStruct() *innerFabricServiceTypeDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceTypeDescription{*obj}
}

type innerFabricServiceTypeDescriptionList struct {
	Count uint32
	Items *innerFabricServiceTypeDescription
}

func (obj *innerFabricServiceTypeDescriptionList) toGoStruct() []FabricServiceTypeDescription {
	var dst []FabricServiceTypeDescription
	{
		var innerlst []innerFabricServiceTypeDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceTypeDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServiceTypeDescriptionExtension struct {
	Name  string
	Value string
}

func (obj *FabricServiceTypeDescriptionExtension) toInnerStruct() *innerFabricServiceTypeDescriptionExtension {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceTypeDescriptionExtension{}
	s_36, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_36

	s_37, _ := windows.UTF16PtrFromString(obj.Value)
	dst.Value = s_37

	return &dst
}

type innerFabricServiceTypeDescriptionExtension struct {
	Name     *uint16
	Value    *uint16
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceTypeDescriptionExtension) toGoStruct() *FabricServiceTypeDescriptionExtension {
	if obj == nil {
		return nil
	}
	dst := FabricServiceTypeDescriptionExtension{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Value = windows.UTF16PtrToString(obj.Value)
	return &dst
}

type innerFabricServiceTypeDescriptionExtensionList struct {
	Count uint32
	Items *innerFabricServiceTypeDescriptionExtension
}

func (obj *innerFabricServiceTypeDescriptionExtensionList) toGoStruct() []FabricServiceTypeDescriptionExtension {
	var dst []FabricServiceTypeDescriptionExtension
	{
		var innerlst []innerFabricServiceTypeDescriptionExtension
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceTypeDescriptionExtension

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricStatelessServiceTypeDescription struct {
	ServiceTypeName      string
	PlacementConstraints string
	LoadMetrics          []FabricServiceLoadMetricDescription
	Extensions           []FabricServiceTypeDescriptionExtension
	UseImplicitHost      bool
}

func (obj *FabricStatelessServiceTypeDescription) toInnerStruct() *innerFabricStatelessServiceTypeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceTypeDescription{}
	s_38, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_38

	s_39, _ := windows.UTF16PtrFromString(obj.PlacementConstraints)
	dst.PlacementConstraints = s_39

	lst_40 := &innerFabricServiceLoadMetricDescriptionList{}
	{

		var tmp []innerFabricServiceLoadMetricDescription

		for _, item := range obj.LoadMetrics {
			var tmpitem innerFabricServiceLoadMetricDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_40.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_40.Items = &tmp[0]
		}

	}
	dst.LoadMetrics = lst_40
	lst_41 := &innerFabricServiceTypeDescriptionExtensionList{}
	{

		var tmp []innerFabricServiceTypeDescriptionExtension

		for _, item := range obj.Extensions {
			var tmpitem innerFabricServiceTypeDescriptionExtension

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_41.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_41.Items = &tmp[0]
		}

	}
	dst.Extensions = lst_41
	dst.UseImplicitHost = obj.UseImplicitHost
	return &dst
}

type innerFabricStatelessServiceTypeDescription struct {
	ServiceTypeName      *uint16
	PlacementConstraints *uint16
	LoadMetrics          *innerFabricServiceLoadMetricDescriptionList
	Extensions           *innerFabricServiceTypeDescriptionExtensionList
	UseImplicitHost      bool
	Reserved             unsafe.Pointer
}

func (obj *innerFabricStatelessServiceTypeDescription) toGoStruct() *FabricStatelessServiceTypeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceTypeDescription{}
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	dst.PlacementConstraints = windows.UTF16PtrToString(obj.PlacementConstraints)
	{
		var innerlst []innerFabricServiceLoadMetricDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.LoadMetrics.Items), int(obj.LoadMetrics.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceLoadMetricDescription

			tmpitem = *item.toGoStruct()

			dst.LoadMetrics = append(dst.LoadMetrics, tmpitem)
		}

	}
	{
		var innerlst []innerFabricServiceTypeDescriptionExtension
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Extensions.Items), int(obj.Extensions.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceTypeDescriptionExtension

			tmpitem = *item.toGoStruct()

			dst.Extensions = append(dst.Extensions, tmpitem)
		}

	}
	dst.UseImplicitHost = obj.UseImplicitHost
	return &dst
}

type FabricStatelessServiceTypeDescriptionEx1 struct {
	PolicyList []FabricServicePlacementPolicyDescription
}

func (obj *FabricStatelessServiceTypeDescriptionEx1) toInnerStruct() *innerFabricStatelessServiceTypeDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceTypeDescriptionEx1{}
	lst_42 := &innerFabricServicePlacementPolicyList{}
	{

		var tmp []innerFabricServicePlacementPolicyDescription

		for _, item := range obj.PolicyList {
			var tmpitem innerFabricServicePlacementPolicyDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_42.PolicyCount = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_42.Policies = &tmp[0]
		}

	}
	dst.PolicyList = lst_42
	return &dst
}

type innerFabricStatelessServiceTypeDescriptionEx1 struct {
	PolicyList *innerFabricServicePlacementPolicyList
	Reserved   unsafe.Pointer
}

func (obj *innerFabricStatelessServiceTypeDescriptionEx1) toGoStruct() *FabricStatelessServiceTypeDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceTypeDescriptionEx1{}
	{
		var innerlst []innerFabricServicePlacementPolicyDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PolicyList.Policies), int(obj.PolicyList.PolicyCount))

		for _, item := range innerlst {
			var tmpitem FabricServicePlacementPolicyDescription

			tmpitem = *item.toGoStruct()

			dst.PolicyList = append(dst.PolicyList, tmpitem)
		}

	}
	return &dst
}

type FabricStatefulServiceTypeDescription struct {
	ServiceTypeName      string
	PlacementConstraints string
	LoadMetrics          []FabricServiceLoadMetricDescription
	Extensions           []FabricServiceTypeDescriptionExtension
	HasPersistedState    bool
}

func (obj *FabricStatefulServiceTypeDescription) toInnerStruct() *innerFabricStatefulServiceTypeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceTypeDescription{}
	s_43, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_43

	s_44, _ := windows.UTF16PtrFromString(obj.PlacementConstraints)
	dst.PlacementConstraints = s_44

	lst_45 := &innerFabricServiceLoadMetricDescriptionList{}
	{

		var tmp []innerFabricServiceLoadMetricDescription

		for _, item := range obj.LoadMetrics {
			var tmpitem innerFabricServiceLoadMetricDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_45.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_45.Items = &tmp[0]
		}

	}
	dst.LoadMetrics = lst_45
	lst_46 := &innerFabricServiceTypeDescriptionExtensionList{}
	{

		var tmp []innerFabricServiceTypeDescriptionExtension

		for _, item := range obj.Extensions {
			var tmpitem innerFabricServiceTypeDescriptionExtension

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_46.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_46.Items = &tmp[0]
		}

	}
	dst.Extensions = lst_46
	dst.HasPersistedState = obj.HasPersistedState
	return &dst
}

type innerFabricStatefulServiceTypeDescription struct {
	ServiceTypeName      *uint16
	PlacementConstraints *uint16
	LoadMetrics          *innerFabricServiceLoadMetricDescriptionList
	Extensions           *innerFabricServiceTypeDescriptionExtensionList
	HasPersistedState    bool
	Reserved             unsafe.Pointer
}

func (obj *innerFabricStatefulServiceTypeDescription) toGoStruct() *FabricStatefulServiceTypeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceTypeDescription{}
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	dst.PlacementConstraints = windows.UTF16PtrToString(obj.PlacementConstraints)
	{
		var innerlst []innerFabricServiceLoadMetricDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.LoadMetrics.Items), int(obj.LoadMetrics.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceLoadMetricDescription

			tmpitem = *item.toGoStruct()

			dst.LoadMetrics = append(dst.LoadMetrics, tmpitem)
		}

	}
	{
		var innerlst []innerFabricServiceTypeDescriptionExtension
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Extensions.Items), int(obj.Extensions.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceTypeDescriptionExtension

			tmpitem = *item.toGoStruct()

			dst.Extensions = append(dst.Extensions, tmpitem)
		}

	}
	dst.HasPersistedState = obj.HasPersistedState
	return &dst
}

type FabricStatefulServiceTypeDescriptionEx1 struct {
	PolicyList []FabricServicePlacementPolicyDescription
}

func (obj *FabricStatefulServiceTypeDescriptionEx1) toInnerStruct() *innerFabricStatefulServiceTypeDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceTypeDescriptionEx1{}
	lst_47 := &innerFabricServicePlacementPolicyList{}
	{

		var tmp []innerFabricServicePlacementPolicyDescription

		for _, item := range obj.PolicyList {
			var tmpitem innerFabricServicePlacementPolicyDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_47.PolicyCount = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_47.Policies = &tmp[0]
		}

	}
	dst.PolicyList = lst_47
	return &dst
}

type innerFabricStatefulServiceTypeDescriptionEx1 struct {
	PolicyList *innerFabricServicePlacementPolicyList
	Reserved   unsafe.Pointer
}

func (obj *innerFabricStatefulServiceTypeDescriptionEx1) toGoStruct() *FabricStatefulServiceTypeDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceTypeDescriptionEx1{}
	{
		var innerlst []innerFabricServicePlacementPolicyDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PolicyList.Policies), int(obj.PolicyList.PolicyCount))

		for _, item := range innerlst {
			var tmpitem FabricServicePlacementPolicyDescription

			tmpitem = *item.toGoStruct()

			dst.PolicyList = append(dst.PolicyList, tmpitem)
		}

	}
	return &dst
}

type FabricServiceGroupTypeMemberDescription struct {
	ServiceTypeName string
	LoadMetrics     []FabricServiceLoadMetricDescription
}

func (obj *FabricServiceGroupTypeMemberDescription) toInnerStruct() *innerFabricServiceGroupTypeMemberDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceGroupTypeMemberDescription{}
	s_48, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_48

	lst_49 := &innerFabricServiceLoadMetricDescriptionList{}
	{

		var tmp []innerFabricServiceLoadMetricDescription

		for _, item := range obj.LoadMetrics {
			var tmpitem innerFabricServiceLoadMetricDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_49.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_49.Items = &tmp[0]
		}

	}
	dst.LoadMetrics = lst_49
	return &dst
}

type innerFabricServiceGroupTypeMemberDescription struct {
	ServiceTypeName *uint16
	LoadMetrics     *innerFabricServiceLoadMetricDescriptionList
	Reserved        unsafe.Pointer
}

func (obj *innerFabricServiceGroupTypeMemberDescription) toGoStruct() *FabricServiceGroupTypeMemberDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceGroupTypeMemberDescription{}
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	{
		var innerlst []innerFabricServiceLoadMetricDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.LoadMetrics.Items), int(obj.LoadMetrics.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceLoadMetricDescription

			tmpitem = *item.toGoStruct()

			dst.LoadMetrics = append(dst.LoadMetrics, tmpitem)
		}

	}
	return &dst
}

type innerFabricServiceGroupTypeMemberDescriptionList struct {
	Count uint32
	Items *innerFabricServiceGroupTypeMemberDescription
}

func (obj *innerFabricServiceGroupTypeMemberDescriptionList) toGoStruct() []FabricServiceGroupTypeMemberDescription {
	var dst []FabricServiceGroupTypeMemberDescription
	{
		var innerlst []innerFabricServiceGroupTypeMemberDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceGroupTypeMemberDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServiceGroupTypeDescription struct {
	Description        *FabricServiceTypeDescription
	Members            []FabricServiceGroupTypeMemberDescription
	UseImplicitFactory bool
}

func (obj *FabricServiceGroupTypeDescription) toInnerStruct() *innerFabricServiceGroupTypeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceGroupTypeDescription{}
	dst.Description = obj.Description.toInnerStruct()
	lst_50 := &innerFabricServiceGroupTypeMemberDescriptionList{}
	{

		var tmp []innerFabricServiceGroupTypeMemberDescription

		for _, item := range obj.Members {
			var tmpitem innerFabricServiceGroupTypeMemberDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_50.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_50.Items = &tmp[0]
		}

	}
	dst.Members = lst_50
	dst.UseImplicitFactory = obj.UseImplicitFactory
	return &dst
}

type innerFabricServiceGroupTypeDescription struct {
	Description        *innerFabricServiceTypeDescription
	Members            *innerFabricServiceGroupTypeMemberDescriptionList
	UseImplicitFactory bool
	Reserved           unsafe.Pointer
}

func (obj *innerFabricServiceGroupTypeDescription) toGoStruct() *FabricServiceGroupTypeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceGroupTypeDescription{}
	dst.Description = obj.Description.toGoStruct()
	{
		var innerlst []innerFabricServiceGroupTypeMemberDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Members.Items), int(obj.Members.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceGroupTypeMemberDescription

			tmpitem = *item.toGoStruct()

			dst.Members = append(dst.Members, tmpitem)
		}

	}
	dst.UseImplicitFactory = obj.UseImplicitFactory
	return &dst
}

type innerFabricServiceGroupTypeDescriptionList struct {
	Count uint32
	Items *innerFabricServiceGroupTypeDescription
}

func (obj *innerFabricServiceGroupTypeDescriptionList) toGoStruct() []FabricServiceGroupTypeDescription {
	var dst []FabricServiceGroupTypeDescription
	{
		var innerlst []innerFabricServiceGroupTypeDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceGroupTypeDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricEndpointResourceDescription struct {
	Name            string
	Protocol        string
	Type            string
	Port            uint32
	CertificateName string
}

func (obj *FabricEndpointResourceDescription) toInnerStruct() *innerFabricEndpointResourceDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricEndpointResourceDescription{}
	s_51, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_51

	s_52, _ := windows.UTF16PtrFromString(obj.Protocol)
	dst.Protocol = s_52

	s_53, _ := windows.UTF16PtrFromString(obj.Type)
	dst.Type = s_53

	dst.Port = obj.Port
	s_54, _ := windows.UTF16PtrFromString(obj.CertificateName)
	dst.CertificateName = s_54

	return &dst
}

type innerFabricEndpointResourceDescription struct {
	Name            *uint16
	Protocol        *uint16
	Type            *uint16
	Port            uint32
	CertificateName *uint16
	Reserved        unsafe.Pointer
}

func (obj *innerFabricEndpointResourceDescription) toGoStruct() *FabricEndpointResourceDescription {
	if obj == nil {
		return nil
	}
	dst := FabricEndpointResourceDescription{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Protocol = windows.UTF16PtrToString(obj.Protocol)
	dst.Type = windows.UTF16PtrToString(obj.Type)
	dst.Port = obj.Port
	dst.CertificateName = windows.UTF16PtrToString(obj.CertificateName)
	return &dst
}

type FabricEndpointResourceDescriptionEx1 struct {
	UriScheme  string
	PathSuffix string
}

func (obj *FabricEndpointResourceDescriptionEx1) toInnerStruct() *innerFabricEndpointResourceDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricEndpointResourceDescriptionEx1{}
	s_55, _ := windows.UTF16PtrFromString(obj.UriScheme)
	dst.UriScheme = s_55

	s_56, _ := windows.UTF16PtrFromString(obj.PathSuffix)
	dst.PathSuffix = s_56

	return &dst
}

type innerFabricEndpointResourceDescriptionEx1 struct {
	UriScheme  *uint16
	PathSuffix *uint16
	Reserved   unsafe.Pointer
}

func (obj *innerFabricEndpointResourceDescriptionEx1) toGoStruct() *FabricEndpointResourceDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricEndpointResourceDescriptionEx1{}
	dst.UriScheme = windows.UTF16PtrToString(obj.UriScheme)
	dst.PathSuffix = windows.UTF16PtrToString(obj.PathSuffix)
	return &dst
}

type FabricEndpointResourceDescriptionEx2 struct {
	CodePackageName string
	IpAddressOrFqdn string
}

func (obj *FabricEndpointResourceDescriptionEx2) toInnerStruct() *innerFabricEndpointResourceDescriptionEx2 {
	if obj == nil {
		return nil
	}
	dst := innerFabricEndpointResourceDescriptionEx2{}
	s_57, _ := windows.UTF16PtrFromString(obj.CodePackageName)
	dst.CodePackageName = s_57

	s_58, _ := windows.UTF16PtrFromString(obj.IpAddressOrFqdn)
	dst.IpAddressOrFqdn = s_58

	return &dst
}

type innerFabricEndpointResourceDescriptionEx2 struct {
	CodePackageName *uint16
	IpAddressOrFqdn *uint16
	Reserved        unsafe.Pointer
}

func (obj *innerFabricEndpointResourceDescriptionEx2) toGoStruct() *FabricEndpointResourceDescriptionEx2 {
	if obj == nil {
		return nil
	}
	dst := FabricEndpointResourceDescriptionEx2{}
	dst.CodePackageName = windows.UTF16PtrToString(obj.CodePackageName)
	dst.IpAddressOrFqdn = windows.UTF16PtrToString(obj.IpAddressOrFqdn)
	return &dst
}

type innerFabricEndpointResourceDescriptionList struct {
	Count uint32
	Items *innerFabricEndpointResourceDescription
}

func (obj *innerFabricEndpointResourceDescriptionList) toGoStruct() []FabricEndpointResourceDescription {
	var dst []FabricEndpointResourceDescription
	{
		var innerlst []innerFabricEndpointResourceDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricEndpointResourceDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type innerFabricCodePackageDescriptionList struct {
	Count uint32
	Items *innerFabricCodePackageDescription
}

func (obj *innerFabricCodePackageDescriptionList) toGoStruct() []FabricCodePackageDescription {
	var dst []FabricCodePackageDescription
	{
		var innerlst []innerFabricCodePackageDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricCodePackageDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type innerFabricConfigurationPackageDescriptionList struct {
	Count uint32
	Items *innerFabricConfigurationPackageDescription
}

func (obj *innerFabricConfigurationPackageDescriptionList) toGoStruct() []FabricConfigurationPackageDescription {
	var dst []FabricConfigurationPackageDescription
	{
		var innerlst []innerFabricConfigurationPackageDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricConfigurationPackageDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type innerFabricDataPackageDescriptionList struct {
	Count uint32
	Items *innerFabricDataPackageDescription
}

func (obj *innerFabricDataPackageDescriptionList) toGoStruct() []FabricDataPackageDescription {
	var dst []FabricDataPackageDescription
	{
		var innerlst []innerFabricDataPackageDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDataPackageDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricConfigurationParameter struct {
	Name         string
	Value        string
	MustOverride bool
	IsEncrypted  bool
}

func (obj *FabricConfigurationParameter) toInnerStruct() *innerFabricConfigurationParameter {
	if obj == nil {
		return nil
	}
	dst := innerFabricConfigurationParameter{}
	s_59, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_59

	s_60, _ := windows.UTF16PtrFromString(obj.Value)
	dst.Value = s_60

	dst.MustOverride = obj.MustOverride
	dst.IsEncrypted = obj.IsEncrypted
	return &dst
}

type innerFabricConfigurationParameter struct {
	Name         *uint16
	Value        *uint16
	MustOverride bool
	IsEncrypted  bool
	Reserved     unsafe.Pointer
}

func (obj *innerFabricConfigurationParameter) toGoStruct() *FabricConfigurationParameter {
	if obj == nil {
		return nil
	}
	dst := FabricConfigurationParameter{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Value = windows.UTF16PtrToString(obj.Value)
	dst.MustOverride = obj.MustOverride
	dst.IsEncrypted = obj.IsEncrypted
	return &dst
}

type FabricConfigurationParameterEx1 struct {
	Type string
}

func (obj *FabricConfigurationParameterEx1) toInnerStruct() *innerFabricConfigurationParameterEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricConfigurationParameterEx1{}
	s_61, _ := windows.UTF16PtrFromString(obj.Type)
	dst.Type = s_61

	return &dst
}

type innerFabricConfigurationParameterEx1 struct {
	Type     *uint16
	Reserved unsafe.Pointer
}

func (obj *innerFabricConfigurationParameterEx1) toGoStruct() *FabricConfigurationParameterEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricConfigurationParameterEx1{}
	dst.Type = windows.UTF16PtrToString(obj.Type)
	return &dst
}

type innerFabricConfigurationParameterList struct {
	Count uint32
	Items *innerFabricConfigurationParameter
}

func (obj *innerFabricConfigurationParameterList) toGoStruct() []FabricConfigurationParameter {
	var dst []FabricConfigurationParameter
	{
		var innerlst []innerFabricConfigurationParameter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricConfigurationParameter

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricConfigurationSection struct {
	Name       string
	Parameters []FabricConfigurationParameter
}

func (obj *FabricConfigurationSection) toInnerStruct() *innerFabricConfigurationSection {
	if obj == nil {
		return nil
	}
	dst := innerFabricConfigurationSection{}
	s_62, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_62

	lst_63 := &innerFabricConfigurationParameterList{}
	{

		var tmp []innerFabricConfigurationParameter

		for _, item := range obj.Parameters {
			var tmpitem innerFabricConfigurationParameter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_63.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_63.Items = &tmp[0]
		}

	}
	dst.Parameters = lst_63
	return &dst
}

type innerFabricConfigurationSection struct {
	Name       *uint16
	Parameters *innerFabricConfigurationParameterList
	Reserved   unsafe.Pointer
}

func (obj *innerFabricConfigurationSection) toGoStruct() *FabricConfigurationSection {
	if obj == nil {
		return nil
	}
	dst := FabricConfigurationSection{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	{
		var innerlst []innerFabricConfigurationParameter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Parameters.Items), int(obj.Parameters.Count))

		for _, item := range innerlst {
			var tmpitem FabricConfigurationParameter

			tmpitem = *item.toGoStruct()

			dst.Parameters = append(dst.Parameters, tmpitem)
		}

	}
	return &dst
}

type innerFabricConfigurationSectionList struct {
	Count uint32
	Items *innerFabricConfigurationSection
}

func (obj *innerFabricConfigurationSectionList) toGoStruct() []FabricConfigurationSection {
	var dst []FabricConfigurationSection
	{
		var innerlst []innerFabricConfigurationSection
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricConfigurationSection

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricConfigurationSettings struct {
	Sections []FabricConfigurationSection
}

func (obj *FabricConfigurationSettings) toInnerStruct() *innerFabricConfigurationSettings {
	if obj == nil {
		return nil
	}
	dst := innerFabricConfigurationSettings{}
	lst_64 := &innerFabricConfigurationSectionList{}
	{

		var tmp []innerFabricConfigurationSection

		for _, item := range obj.Sections {
			var tmpitem innerFabricConfigurationSection

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_64.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_64.Items = &tmp[0]
		}

	}
	dst.Sections = lst_64
	return &dst
}

type innerFabricConfigurationSettings struct {
	Sections *innerFabricConfigurationSectionList
	Reserved unsafe.Pointer
}

func (obj *innerFabricConfigurationSettings) toGoStruct() *FabricConfigurationSettings {
	if obj == nil {
		return nil
	}
	dst := FabricConfigurationSettings{}
	{
		var innerlst []innerFabricConfigurationSection
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Sections.Items), int(obj.Sections.Count))

		for _, item := range innerlst {
			var tmpitem FabricConfigurationSection

			tmpitem = *item.toGoStruct()

			dst.Sections = append(dst.Sections, tmpitem)
		}

	}
	return &dst
}

type innerFabricStringList struct {
	Count uint32
	Items **uint16
}

func (obj *innerFabricStringList) toGoStruct() []string {
	var dst []string
	{
		var innerlst []*uint16
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem string

			tmpitem = windows.UTF16PtrToString(item)

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricEpoch struct {
	DataLossNumber      int64
	ConfigurationNumber int64
}
type innerFabricEpoch struct {
	FabricEpoch
	Reserved unsafe.Pointer
}

func (obj *innerFabricEpoch) toGoStruct() *FabricEpoch {
	if obj == nil {
		return nil
	}
	return &obj.FabricEpoch
}
func (obj *FabricEpoch) toInnerStruct() *innerFabricEpoch {
	if obj == nil {
		return nil
	}
	return &innerFabricEpoch{*obj, nil}
}

type FabricOperationMetadata struct {
	Type           FabricOperationType
	SequenceNumber int64
	AtomicGroupId  int64
}
type innerFabricOperationMetadata struct {
	FabricOperationMetadata
	Reserved unsafe.Pointer
}

func (obj *innerFabricOperationMetadata) toGoStruct() *FabricOperationMetadata {
	if obj == nil {
		return nil
	}
	return &obj.FabricOperationMetadata
}
func (obj *FabricOperationMetadata) toInnerStruct() *innerFabricOperationMetadata {
	if obj == nil {
		return nil
	}
	return &innerFabricOperationMetadata{*obj, nil}
}

type FabricReplicaInformation struct {
	Id                int64
	Role              FabricReplicaRole
	Status            FabricReplicaStatus
	ReplicatorAddress string
	CurrentProgress   int64
	CatchUpCapability int64
}

func (obj *FabricReplicaInformation) toInnerStruct() *innerFabricReplicaInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricReplicaInformation{}
	dst.Id = obj.Id
	dst.Role = obj.Role
	dst.Status = obj.Status
	s_65, _ := windows.UTF16PtrFromString(obj.ReplicatorAddress)
	dst.ReplicatorAddress = s_65

	dst.CurrentProgress = obj.CurrentProgress
	dst.CatchUpCapability = obj.CatchUpCapability
	return &dst
}

type innerFabricReplicaInformation struct {
	Id                int64
	Role              FabricReplicaRole
	Status            FabricReplicaStatus
	ReplicatorAddress *uint16
	CurrentProgress   int64
	CatchUpCapability int64
	Reserved          unsafe.Pointer
}

func (obj *innerFabricReplicaInformation) toGoStruct() *FabricReplicaInformation {
	if obj == nil {
		return nil
	}
	dst := FabricReplicaInformation{}
	dst.Id = obj.Id
	dst.Role = obj.Role
	dst.Status = obj.Status
	dst.ReplicatorAddress = windows.UTF16PtrToString(obj.ReplicatorAddress)
	dst.CurrentProgress = obj.CurrentProgress
	dst.CatchUpCapability = obj.CatchUpCapability
	return &dst
}

type FabricReplicaInformationEx1 struct {
	MustCatchup bool
}
type innerFabricReplicaInformationEx1 struct {
	FabricReplicaInformationEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicaInformationEx1) toGoStruct() *FabricReplicaInformationEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicaInformationEx1
}
func (obj *FabricReplicaInformationEx1) toInnerStruct() *innerFabricReplicaInformationEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicaInformationEx1{*obj, nil}
}

type FabricReplicaSetConfiguration struct {
	Replicas    []FabricReplicaInformation
	WriteQuorum uint32
}
type innerFabricReplicaSetConfiguration struct {
	FabricReplicaSetConfiguration
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicaSetConfiguration) toGoStruct() *FabricReplicaSetConfiguration {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicaSetConfiguration
}
func (obj *FabricReplicaSetConfiguration) toInnerStruct() *innerFabricReplicaSetConfiguration {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicaSetConfiguration{*obj, nil}
}

type FabricLoadMetric struct {
	Name  string
	Value uint32
}

func (obj *FabricLoadMetric) toInnerStruct() *innerFabricLoadMetric {
	if obj == nil {
		return nil
	}
	dst := innerFabricLoadMetric{}
	s_66, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_66

	dst.Value = obj.Value
	return &dst
}

type innerFabricLoadMetric struct {
	Name     *uint16
	Value    uint32
	Reserved unsafe.Pointer
}

func (obj *innerFabricLoadMetric) toGoStruct() *FabricLoadMetric {
	if obj == nil {
		return nil
	}
	dst := FabricLoadMetric{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Value = obj.Value
	return &dst
}

type FabricSecurityCredentials struct {
	Kind  FabricSecurityCredentialKind
	Value interface{}
}
type innerFabricSecurityCredentials struct {
	FabricSecurityCredentials
}

func (obj *innerFabricSecurityCredentials) toGoStruct() *FabricSecurityCredentials {
	if obj == nil {
		return nil
	}
	return &obj.FabricSecurityCredentials
}
func (obj *FabricSecurityCredentials) toInnerStruct() *innerFabricSecurityCredentials {
	if obj == nil {
		return nil
	}
	return &innerFabricSecurityCredentials{*obj}
}

type FabricReplicatorSettings struct {
	Flags                                    uint32
	RetryIntervalMilliseconds                uint32
	BatchAcknowledgementIntervalMilliseconds uint32
	ReplicatorAddress                        string
	RequireServiceAck                        bool
	InitialReplicationQueueSize              uint32
	MaxReplicationQueueSize                  uint32
	InitialCopyQueueSize                     uint32
	MaxCopyQueueSize                         uint32
	SecurityCredentials                      *FabricSecurityCredentials
}

func (obj *FabricReplicatorSettings) toInnerStruct() *innerFabricReplicatorSettings {
	if obj == nil {
		return nil
	}
	dst := innerFabricReplicatorSettings{}
	dst.Flags = obj.Flags
	dst.RetryIntervalMilliseconds = obj.RetryIntervalMilliseconds
	dst.BatchAcknowledgementIntervalMilliseconds = obj.BatchAcknowledgementIntervalMilliseconds
	s_67, _ := windows.UTF16PtrFromString(obj.ReplicatorAddress)
	dst.ReplicatorAddress = s_67

	dst.RequireServiceAck = obj.RequireServiceAck
	dst.InitialReplicationQueueSize = obj.InitialReplicationQueueSize
	dst.MaxReplicationQueueSize = obj.MaxReplicationQueueSize
	dst.InitialCopyQueueSize = obj.InitialCopyQueueSize
	dst.MaxCopyQueueSize = obj.MaxCopyQueueSize
	dst.SecurityCredentials = obj.SecurityCredentials.toInnerStruct()
	return &dst
}

type innerFabricReplicatorSettings struct {
	Flags                                    uint32
	RetryIntervalMilliseconds                uint32
	BatchAcknowledgementIntervalMilliseconds uint32
	ReplicatorAddress                        *uint16
	RequireServiceAck                        bool
	InitialReplicationQueueSize              uint32
	MaxReplicationQueueSize                  uint32
	InitialCopyQueueSize                     uint32
	MaxCopyQueueSize                         uint32
	SecurityCredentials                      *innerFabricSecurityCredentials
	Reserved                                 unsafe.Pointer
}

func (obj *innerFabricReplicatorSettings) toGoStruct() *FabricReplicatorSettings {
	if obj == nil {
		return nil
	}
	dst := FabricReplicatorSettings{}
	dst.Flags = obj.Flags
	dst.RetryIntervalMilliseconds = obj.RetryIntervalMilliseconds
	dst.BatchAcknowledgementIntervalMilliseconds = obj.BatchAcknowledgementIntervalMilliseconds
	dst.ReplicatorAddress = windows.UTF16PtrToString(obj.ReplicatorAddress)
	dst.RequireServiceAck = obj.RequireServiceAck
	dst.InitialReplicationQueueSize = obj.InitialReplicationQueueSize
	dst.MaxReplicationQueueSize = obj.MaxReplicationQueueSize
	dst.InitialCopyQueueSize = obj.InitialCopyQueueSize
	dst.MaxCopyQueueSize = obj.MaxCopyQueueSize
	dst.SecurityCredentials = obj.SecurityCredentials.toGoStruct()
	return &dst
}

type FabricReplicatorSettingsEx1 struct {
	MaxReplicationQueueMemorySize        uint32
	SecondaryClearAcknowledgedOperations bool
	MaxReplicationMessageSize            uint32
}
type innerFabricReplicatorSettingsEx1 struct {
	FabricReplicatorSettingsEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicatorSettingsEx1) toGoStruct() *FabricReplicatorSettingsEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicatorSettingsEx1
}
func (obj *FabricReplicatorSettingsEx1) toInnerStruct() *innerFabricReplicatorSettingsEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicatorSettingsEx1{*obj, nil}
}

type FabricReplicatorSettingsEx2 struct {
	UseStreamFaultsAndEndOfStreamOperationAck bool
}
type innerFabricReplicatorSettingsEx2 struct {
	FabricReplicatorSettingsEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicatorSettingsEx2) toGoStruct() *FabricReplicatorSettingsEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicatorSettingsEx2
}
func (obj *FabricReplicatorSettingsEx2) toInnerStruct() *innerFabricReplicatorSettingsEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicatorSettingsEx2{*obj, nil}
}

type FabricReplicatorSettingsEx3 struct {
	InitialPrimaryReplicationQueueSize              uint32
	MaxPrimaryReplicationQueueSize                  uint32
	MaxPrimaryReplicationQueueMemorySize            uint32
	InitialSecondaryReplicationQueueSize            uint32
	MaxSecondaryReplicationQueueSize                uint32
	MaxSecondaryReplicationQueueMemorySize          uint32
	PrimaryWaitForPendingQuorumsTimeoutMilliseconds uint32
}
type innerFabricReplicatorSettingsEx3 struct {
	FabricReplicatorSettingsEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicatorSettingsEx3) toGoStruct() *FabricReplicatorSettingsEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicatorSettingsEx3
}
func (obj *FabricReplicatorSettingsEx3) toInnerStruct() *innerFabricReplicatorSettingsEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicatorSettingsEx3{*obj, nil}
}

type FabricReplicatorSettingsEx4 struct {
	ReplicatorListenAddress  string
	ReplicatorPublishAddress string
}

func (obj *FabricReplicatorSettingsEx4) toInnerStruct() *innerFabricReplicatorSettingsEx4 {
	if obj == nil {
		return nil
	}
	dst := innerFabricReplicatorSettingsEx4{}
	s_68, _ := windows.UTF16PtrFromString(obj.ReplicatorListenAddress)
	dst.ReplicatorListenAddress = s_68

	s_69, _ := windows.UTF16PtrFromString(obj.ReplicatorPublishAddress)
	dst.ReplicatorPublishAddress = s_69

	return &dst
}

type innerFabricReplicatorSettingsEx4 struct {
	ReplicatorListenAddress  *uint16
	ReplicatorPublishAddress *uint16
	Reserved                 unsafe.Pointer
}

func (obj *innerFabricReplicatorSettingsEx4) toGoStruct() *FabricReplicatorSettingsEx4 {
	if obj == nil {
		return nil
	}
	dst := FabricReplicatorSettingsEx4{}
	dst.ReplicatorListenAddress = windows.UTF16PtrToString(obj.ReplicatorListenAddress)
	dst.ReplicatorPublishAddress = windows.UTF16PtrToString(obj.ReplicatorPublishAddress)
	return &dst
}

type FabricNamedPropertyMetadata struct {
	PropertyName    string
	TypeId          FabricPropertyTypeId
	ValueSize       int32
	SequenceNumber  int64
	LastModifiedUtc time.Time
	Name            string
}

func (obj *FabricNamedPropertyMetadata) toInnerStruct() *innerFabricNamedPropertyMetadata {
	if obj == nil {
		return nil
	}
	dst := innerFabricNamedPropertyMetadata{}
	s_70, _ := windows.UTF16PtrFromString(obj.PropertyName)
	dst.PropertyName = s_70

	dst.TypeId = obj.TypeId
	dst.ValueSize = obj.ValueSize
	dst.SequenceNumber = obj.SequenceNumber
	dst.LastModifiedUtc = windows.NsecToFiletime(obj.LastModifiedUtc.UnixNano())
	s_71, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_71

	return &dst
}

type innerFabricNamedPropertyMetadata struct {
	PropertyName    *uint16
	TypeId          FabricPropertyTypeId
	ValueSize       int32
	SequenceNumber  int64
	LastModifiedUtc windows.Filetime
	Name            *uint16
	Reserved        unsafe.Pointer
}

func (obj *innerFabricNamedPropertyMetadata) toGoStruct() *FabricNamedPropertyMetadata {
	if obj == nil {
		return nil
	}
	dst := FabricNamedPropertyMetadata{}
	dst.PropertyName = windows.UTF16PtrToString(obj.PropertyName)
	dst.TypeId = obj.TypeId
	dst.ValueSize = obj.ValueSize
	dst.SequenceNumber = obj.SequenceNumber
	dst.LastModifiedUtc = time.Unix(0, obj.LastModifiedUtc.Nanoseconds())
	dst.Name = windows.UTF16PtrToString(obj.Name)
	return &dst
}

type FabricNamedPropertyMetadataEx1 struct {
	CustomTypeId string
}

func (obj *FabricNamedPropertyMetadataEx1) toInnerStruct() *innerFabricNamedPropertyMetadataEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricNamedPropertyMetadataEx1{}
	s_72, _ := windows.UTF16PtrFromString(obj.CustomTypeId)
	dst.CustomTypeId = s_72

	return &dst
}

type innerFabricNamedPropertyMetadataEx1 struct {
	CustomTypeId *uint16
	Reserved     unsafe.Pointer
}

func (obj *innerFabricNamedPropertyMetadataEx1) toGoStruct() *FabricNamedPropertyMetadataEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricNamedPropertyMetadataEx1{}
	dst.CustomTypeId = windows.UTF16PtrToString(obj.CustomTypeId)
	return &dst
}

type FabricNamedProperty struct {
	Metadata *FabricNamedPropertyMetadata
	Value    *byte
}
type innerFabricNamedProperty struct {
	FabricNamedProperty
	Reserved unsafe.Pointer
}

func (obj *innerFabricNamedProperty) toGoStruct() *FabricNamedProperty {
	if obj == nil {
		return nil
	}
	return &obj.FabricNamedProperty
}
func (obj *FabricNamedProperty) toInnerStruct() *innerFabricNamedProperty {
	if obj == nil {
		return nil
	}
	return &innerFabricNamedProperty{*obj, nil}
}

type FabricPutPropertyOperation struct {
	PropertyName   string
	PropertyTypeId FabricPropertyTypeId
	PropertyValue  interface{}
}

func (obj *FabricPutPropertyOperation) toInnerStruct() *innerFabricPutPropertyOperation {
	if obj == nil {
		return nil
	}
	dst := innerFabricPutPropertyOperation{}
	s_73, _ := windows.UTF16PtrFromString(obj.PropertyName)
	dst.PropertyName = s_73

	dst.PropertyTypeId = obj.PropertyTypeId
	dst.PropertyValue = toUnsafePointer(obj.PropertyValue)
	return &dst
}

type innerFabricPutPropertyOperation struct {
	PropertyName   *uint16
	PropertyTypeId FabricPropertyTypeId
	PropertyValue  unsafe.Pointer
	Reserved       unsafe.Pointer
}

func (obj *innerFabricPutPropertyOperation) toGoStruct() *FabricPutPropertyOperation {
	if obj == nil {
		return nil
	}
	dst := FabricPutPropertyOperation{}
	dst.PropertyName = windows.UTF16PtrToString(obj.PropertyName)
	dst.PropertyTypeId = obj.PropertyTypeId
	dst.PropertyValue = fromUnsafePointer(obj.PropertyValue)
	return &dst
}

type FabricPutCustomPropertyOperation struct {
	PropertyName         string
	PropertyTypeId       FabricPropertyTypeId
	PropertyValue        interface{}
	PropertyCustomTypeId string
}

func (obj *FabricPutCustomPropertyOperation) toInnerStruct() *innerFabricPutCustomPropertyOperation {
	if obj == nil {
		return nil
	}
	dst := innerFabricPutCustomPropertyOperation{}
	s_74, _ := windows.UTF16PtrFromString(obj.PropertyName)
	dst.PropertyName = s_74

	dst.PropertyTypeId = obj.PropertyTypeId
	dst.PropertyValue = toUnsafePointer(obj.PropertyValue)
	s_75, _ := windows.UTF16PtrFromString(obj.PropertyCustomTypeId)
	dst.PropertyCustomTypeId = s_75

	return &dst
}

type innerFabricPutCustomPropertyOperation struct {
	PropertyName         *uint16
	PropertyTypeId       FabricPropertyTypeId
	PropertyValue        unsafe.Pointer
	PropertyCustomTypeId *uint16
	Reserved             unsafe.Pointer
}

func (obj *innerFabricPutCustomPropertyOperation) toGoStruct() *FabricPutCustomPropertyOperation {
	if obj == nil {
		return nil
	}
	dst := FabricPutCustomPropertyOperation{}
	dst.PropertyName = windows.UTF16PtrToString(obj.PropertyName)
	dst.PropertyTypeId = obj.PropertyTypeId
	dst.PropertyValue = fromUnsafePointer(obj.PropertyValue)
	dst.PropertyCustomTypeId = windows.UTF16PtrToString(obj.PropertyCustomTypeId)
	return &dst
}

type FabricGetPropertyOperation struct {
	PropertyName string
	IncludeValue bool
}

func (obj *FabricGetPropertyOperation) toInnerStruct() *innerFabricGetPropertyOperation {
	if obj == nil {
		return nil
	}
	dst := innerFabricGetPropertyOperation{}
	s_76, _ := windows.UTF16PtrFromString(obj.PropertyName)
	dst.PropertyName = s_76

	dst.IncludeValue = obj.IncludeValue
	return &dst
}

type innerFabricGetPropertyOperation struct {
	PropertyName *uint16
	IncludeValue bool
	Reserved     unsafe.Pointer
}

func (obj *innerFabricGetPropertyOperation) toGoStruct() *FabricGetPropertyOperation {
	if obj == nil {
		return nil
	}
	dst := FabricGetPropertyOperation{}
	dst.PropertyName = windows.UTF16PtrToString(obj.PropertyName)
	dst.IncludeValue = obj.IncludeValue
	return &dst
}

type FabricDeletePropertyOperation struct {
	PropertyName string
}

func (obj *FabricDeletePropertyOperation) toInnerStruct() *innerFabricDeletePropertyOperation {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeletePropertyOperation{}
	s_77, _ := windows.UTF16PtrFromString(obj.PropertyName)
	dst.PropertyName = s_77

	return &dst
}

type innerFabricDeletePropertyOperation struct {
	PropertyName *uint16
	Reserved     unsafe.Pointer
}

func (obj *innerFabricDeletePropertyOperation) toGoStruct() *FabricDeletePropertyOperation {
	if obj == nil {
		return nil
	}
	dst := FabricDeletePropertyOperation{}
	dst.PropertyName = windows.UTF16PtrToString(obj.PropertyName)
	return &dst
}

type FabricCheckSequencePropertyOperation struct {
	PropertyName   string
	SequenceNumber int64
}

func (obj *FabricCheckSequencePropertyOperation) toInnerStruct() *innerFabricCheckSequencePropertyOperation {
	if obj == nil {
		return nil
	}
	dst := innerFabricCheckSequencePropertyOperation{}
	s_78, _ := windows.UTF16PtrFromString(obj.PropertyName)
	dst.PropertyName = s_78

	dst.SequenceNumber = obj.SequenceNumber
	return &dst
}

type innerFabricCheckSequencePropertyOperation struct {
	PropertyName   *uint16
	SequenceNumber int64
	Reserved       unsafe.Pointer
}

func (obj *innerFabricCheckSequencePropertyOperation) toGoStruct() *FabricCheckSequencePropertyOperation {
	if obj == nil {
		return nil
	}
	dst := FabricCheckSequencePropertyOperation{}
	dst.PropertyName = windows.UTF16PtrToString(obj.PropertyName)
	dst.SequenceNumber = obj.SequenceNumber
	return &dst
}

type FabricCheckExistsPropertyOperation struct {
	PropertyName   string
	ExistenceCheck bool
}

func (obj *FabricCheckExistsPropertyOperation) toInnerStruct() *innerFabricCheckExistsPropertyOperation {
	if obj == nil {
		return nil
	}
	dst := innerFabricCheckExistsPropertyOperation{}
	s_79, _ := windows.UTF16PtrFromString(obj.PropertyName)
	dst.PropertyName = s_79

	dst.ExistenceCheck = obj.ExistenceCheck
	return &dst
}

type innerFabricCheckExistsPropertyOperation struct {
	PropertyName   *uint16
	ExistenceCheck bool
	Reserved       unsafe.Pointer
}

func (obj *innerFabricCheckExistsPropertyOperation) toGoStruct() *FabricCheckExistsPropertyOperation {
	if obj == nil {
		return nil
	}
	dst := FabricCheckExistsPropertyOperation{}
	dst.PropertyName = windows.UTF16PtrToString(obj.PropertyName)
	dst.ExistenceCheck = obj.ExistenceCheck
	return &dst
}

type FabricCheckValuePropertyOperation struct {
	PropertyName   string
	PropertyTypeId FabricPropertyTypeId
	PropertyValue  interface{}
}

func (obj *FabricCheckValuePropertyOperation) toInnerStruct() *innerFabricCheckValuePropertyOperation {
	if obj == nil {
		return nil
	}
	dst := innerFabricCheckValuePropertyOperation{}
	s_80, _ := windows.UTF16PtrFromString(obj.PropertyName)
	dst.PropertyName = s_80

	dst.PropertyTypeId = obj.PropertyTypeId
	dst.PropertyValue = toUnsafePointer(obj.PropertyValue)
	return &dst
}

type innerFabricCheckValuePropertyOperation struct {
	PropertyName   *uint16
	PropertyTypeId FabricPropertyTypeId
	PropertyValue  unsafe.Pointer
	Reserved       unsafe.Pointer
}

func (obj *innerFabricCheckValuePropertyOperation) toGoStruct() *FabricCheckValuePropertyOperation {
	if obj == nil {
		return nil
	}
	dst := FabricCheckValuePropertyOperation{}
	dst.PropertyName = windows.UTF16PtrToString(obj.PropertyName)
	dst.PropertyTypeId = obj.PropertyTypeId
	dst.PropertyValue = fromUnsafePointer(obj.PropertyValue)
	return &dst
}

type FabricPropertyBatchOperation struct {
	Kind  FabricPropertyBatchOperationKind
	Value interface{}
}
type innerFabricPropertyBatchOperation struct {
	FabricPropertyBatchOperation
}

func (obj *innerFabricPropertyBatchOperation) toGoStruct() *FabricPropertyBatchOperation {
	if obj == nil {
		return nil
	}
	return &obj.FabricPropertyBatchOperation
}
func (obj *FabricPropertyBatchOperation) toInnerStruct() *innerFabricPropertyBatchOperation {
	if obj == nil {
		return nil
	}
	return &innerFabricPropertyBatchOperation{*obj}
}

type FabricServiceDescription struct {
	Kind  FabricServiceDescriptionKind
	Value interface{}
}
type innerFabricServiceDescription struct {
	FabricServiceDescription
}

func (obj *innerFabricServiceDescription) toGoStruct() *FabricServiceDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceDescription
}
func (obj *FabricServiceDescription) toInnerStruct() *innerFabricServiceDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceDescription{*obj}
}

type FabricNodeTransitionDescription struct {
	NodeTransitionType FabricNodeTransitionType
	Value              interface{}
}
type innerFabricNodeTransitionDescription struct {
	FabricNodeTransitionDescription
}

func (obj *innerFabricNodeTransitionDescription) toGoStruct() *FabricNodeTransitionDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeTransitionDescription
}
func (obj *FabricNodeTransitionDescription) toInnerStruct() *innerFabricNodeTransitionDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeTransitionDescription{*obj}
}

type FabricNodeStopDescription struct {
	OperationId           windows.GUID
	NodeName              string
	NodeInstanceId        uint64
	StopDurationInSeconds uint32
}

func (obj *FabricNodeStopDescription) toInnerStruct() *innerFabricNodeStopDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeStopDescription{}
	dst.OperationId = obj.OperationId
	s_81, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_81

	dst.NodeInstanceId = obj.NodeInstanceId
	dst.StopDurationInSeconds = obj.StopDurationInSeconds
	return &dst
}

type innerFabricNodeStopDescription struct {
	OperationId           windows.GUID
	NodeName              *uint16
	NodeInstanceId        uint64
	StopDurationInSeconds uint32
	Reserved              unsafe.Pointer
}

func (obj *innerFabricNodeStopDescription) toGoStruct() *FabricNodeStopDescription {
	if obj == nil {
		return nil
	}
	dst := FabricNodeStopDescription{}
	dst.OperationId = obj.OperationId
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.NodeInstanceId = obj.NodeInstanceId
	dst.StopDurationInSeconds = obj.StopDurationInSeconds
	return &dst
}

type FabricNodeStartDescription struct {
	OperationId    windows.GUID
	NodeName       string
	NodeInstanceId uint64
}

func (obj *FabricNodeStartDescription) toInnerStruct() *innerFabricNodeStartDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeStartDescription{}
	dst.OperationId = obj.OperationId
	s_82, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_82

	dst.NodeInstanceId = obj.NodeInstanceId
	return &dst
}

type innerFabricNodeStartDescription struct {
	OperationId    windows.GUID
	NodeName       *uint16
	NodeInstanceId uint64
	Reserved       unsafe.Pointer
}

func (obj *innerFabricNodeStartDescription) toGoStruct() *FabricNodeStartDescription {
	if obj == nil {
		return nil
	}
	dst := FabricNodeStartDescription{}
	dst.OperationId = obj.OperationId
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.NodeInstanceId = obj.NodeInstanceId
	return &dst
}

type FabricServiceUpdateDescription struct {
	Kind  FabricServiceDescriptionKind
	Value interface{}
}
type innerFabricServiceUpdateDescription struct {
	FabricServiceUpdateDescription
}

func (obj *innerFabricServiceUpdateDescription) toGoStruct() *FabricServiceUpdateDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceUpdateDescription
}
func (obj *FabricServiceUpdateDescription) toInnerStruct() *innerFabricServiceUpdateDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceUpdateDescription{*obj}
}

type FabricDeleteServiceDescription struct {
	ServiceName string
	ForceDelete bool
}

func (obj *FabricDeleteServiceDescription) toInnerStruct() *innerFabricDeleteServiceDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeleteServiceDescription{}
	s_83, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_83

	dst.ForceDelete = obj.ForceDelete
	return &dst
}

type innerFabricDeleteServiceDescription struct {
	ServiceName *uint16
	ForceDelete bool
	Reserved    unsafe.Pointer
}

func (obj *innerFabricDeleteServiceDescription) toGoStruct() *FabricDeleteServiceDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeleteServiceDescription{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.ForceDelete = obj.ForceDelete
	return &dst
}

type FabricServiceFromTemplateDescription struct {
	ApplicationName              string
	ServiceName                  string
	ServiceDnsName               string
	ServiceTypeName              string
	ServicePackageActivationMode FabricServicePackageActivationMode
	InitializationDataSize       uint32
	InitializationData           *byte
}

func (obj *FabricServiceFromTemplateDescription) toInnerStruct() *innerFabricServiceFromTemplateDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceFromTemplateDescription{}
	s_84, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_84

	s_85, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_85

	s_86, _ := windows.UTF16PtrFromString(obj.ServiceDnsName)
	dst.ServiceDnsName = s_86

	s_87, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_87

	dst.ServicePackageActivationMode = obj.ServicePackageActivationMode
	dst.InitializationDataSize = obj.InitializationDataSize
	dst.InitializationData = obj.InitializationData
	return &dst
}

type innerFabricServiceFromTemplateDescription struct {
	ApplicationName              *uint16
	ServiceName                  *uint16
	ServiceDnsName               *uint16
	ServiceTypeName              *uint16
	ServicePackageActivationMode FabricServicePackageActivationMode
	InitializationDataSize       uint32
	InitializationData           *byte
	Reserved                     unsafe.Pointer
}

func (obj *innerFabricServiceFromTemplateDescription) toGoStruct() *FabricServiceFromTemplateDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceFromTemplateDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.ServiceDnsName = windows.UTF16PtrToString(obj.ServiceDnsName)
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	dst.ServicePackageActivationMode = obj.ServicePackageActivationMode
	dst.InitializationDataSize = obj.InitializationDataSize
	dst.InitializationData = obj.InitializationData
	return &dst
}

type FabricServiceGroupFromTemplateDescription struct {
	ApplicationName              string
	ServiceName                  string
	ServiceTypeName              string
	ServicePackageActivationMode FabricServicePackageActivationMode
	InitializationDataSize       uint32
	InitializationData           *byte
}

func (obj *FabricServiceGroupFromTemplateDescription) toInnerStruct() *innerFabricServiceGroupFromTemplateDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceGroupFromTemplateDescription{}
	s_88, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_88

	s_89, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_89

	s_90, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_90

	dst.ServicePackageActivationMode = obj.ServicePackageActivationMode
	dst.InitializationDataSize = obj.InitializationDataSize
	dst.InitializationData = obj.InitializationData
	return &dst
}

type innerFabricServiceGroupFromTemplateDescription struct {
	ApplicationName              *uint16
	ServiceName                  *uint16
	ServiceTypeName              *uint16
	ServicePackageActivationMode FabricServicePackageActivationMode
	InitializationDataSize       uint32
	InitializationData           *byte
	Reserved                     unsafe.Pointer
}

func (obj *innerFabricServiceGroupFromTemplateDescription) toGoStruct() *FabricServiceGroupFromTemplateDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceGroupFromTemplateDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	dst.ServicePackageActivationMode = obj.ServicePackageActivationMode
	dst.InitializationDataSize = obj.InitializationDataSize
	dst.InitializationData = obj.InitializationData
	return &dst
}

type FabricUpgradeDomainStatusDescription struct {
	Name  string
	State FabricUpgradeDomainState
}

func (obj *FabricUpgradeDomainStatusDescription) toInnerStruct() *innerFabricUpgradeDomainStatusDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricUpgradeDomainStatusDescription{}
	s_91, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_91

	dst.State = obj.State
	return &dst
}

type innerFabricUpgradeDomainStatusDescription struct {
	Name     *uint16
	State    FabricUpgradeDomainState
	Reserved unsafe.Pointer
}

func (obj *innerFabricUpgradeDomainStatusDescription) toGoStruct() *FabricUpgradeDomainStatusDescription {
	if obj == nil {
		return nil
	}
	dst := FabricUpgradeDomainStatusDescription{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.State = obj.State
	return &dst
}

type innerFabricUpgradeDomainStatusDescriptionList struct {
	Count uint32
	Items *innerFabricUpgradeDomainStatusDescription
}

func (obj *innerFabricUpgradeDomainStatusDescriptionList) toGoStruct() []FabricUpgradeDomainStatusDescription {
	var dst []FabricUpgradeDomainStatusDescription
	{
		var innerlst []innerFabricUpgradeDomainStatusDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricUpgradeDomainStatusDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricUpgradeSafetyCheck struct {
	Kind  FabricUpgradeSafetyCheckKind
	Value interface{}
}
type innerFabricUpgradeSafetyCheck struct {
	FabricUpgradeSafetyCheck
}

func (obj *innerFabricUpgradeSafetyCheck) toGoStruct() *FabricUpgradeSafetyCheck {
	if obj == nil {
		return nil
	}
	return &obj.FabricUpgradeSafetyCheck
}
func (obj *FabricUpgradeSafetyCheck) toInnerStruct() *innerFabricUpgradeSafetyCheck {
	if obj == nil {
		return nil
	}
	return &innerFabricUpgradeSafetyCheck{*obj}
}

type FabricUpgradePartitionSafetyCheck struct {
	PartitionId windows.GUID
}
type innerFabricUpgradePartitionSafetyCheck struct {
	FabricUpgradePartitionSafetyCheck
	Reserved unsafe.Pointer
}

func (obj *innerFabricUpgradePartitionSafetyCheck) toGoStruct() *FabricUpgradePartitionSafetyCheck {
	if obj == nil {
		return nil
	}
	return &obj.FabricUpgradePartitionSafetyCheck
}
func (obj *FabricUpgradePartitionSafetyCheck) toInnerStruct() *innerFabricUpgradePartitionSafetyCheck {
	if obj == nil {
		return nil
	}
	return &innerFabricUpgradePartitionSafetyCheck{*obj, nil}
}

type FabricUpgradeSeedNodeSafetyCheck struct {
}
type innerFabricUpgradeSeedNodeSafetyCheck struct {
	FabricUpgradeSeedNodeSafetyCheck
	Reserved unsafe.Pointer
}

func (obj *innerFabricUpgradeSeedNodeSafetyCheck) toGoStruct() *FabricUpgradeSeedNodeSafetyCheck {
	if obj == nil {
		return nil
	}
	return &obj.FabricUpgradeSeedNodeSafetyCheck
}
func (obj *FabricUpgradeSeedNodeSafetyCheck) toInnerStruct() *innerFabricUpgradeSeedNodeSafetyCheck {
	if obj == nil {
		return nil
	}
	return &innerFabricUpgradeSeedNodeSafetyCheck{*obj, nil}
}

type innerFabricUpgradeSafetyCheckList struct {
	Count uint32
	Items *innerFabricUpgradeSafetyCheck
}

func (obj *innerFabricUpgradeSafetyCheckList) toGoStruct() []FabricUpgradeSafetyCheck {
	var dst []FabricUpgradeSafetyCheck
	{
		var innerlst []innerFabricUpgradeSafetyCheck
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricUpgradeSafetyCheck

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricNodeUpgradeProgress struct {
	NodeName            string
	UpgradePhase        FabricNodeUpgradePhase
	PendingSafetyChecks []FabricUpgradeSafetyCheck
}

func (obj *FabricNodeUpgradeProgress) toInnerStruct() *innerFabricNodeUpgradeProgress {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeUpgradeProgress{}
	s_92, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_92

	dst.UpgradePhase = obj.UpgradePhase
	lst_93 := &innerFabricUpgradeSafetyCheckList{}
	{

		var tmp []innerFabricUpgradeSafetyCheck

		for _, item := range obj.PendingSafetyChecks {
			var tmpitem innerFabricUpgradeSafetyCheck

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_93.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_93.Items = &tmp[0]
		}

	}
	dst.PendingSafetyChecks = lst_93
	return &dst
}

type innerFabricNodeUpgradeProgress struct {
	NodeName            *uint16
	UpgradePhase        FabricNodeUpgradePhase
	PendingSafetyChecks *innerFabricUpgradeSafetyCheckList
	Reserved            unsafe.Pointer
}

func (obj *innerFabricNodeUpgradeProgress) toGoStruct() *FabricNodeUpgradeProgress {
	if obj == nil {
		return nil
	}
	dst := FabricNodeUpgradeProgress{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.UpgradePhase = obj.UpgradePhase
	{
		var innerlst []innerFabricUpgradeSafetyCheck
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PendingSafetyChecks.Items), int(obj.PendingSafetyChecks.Count))

		for _, item := range innerlst {
			var tmpitem FabricUpgradeSafetyCheck

			tmpitem = *item.toGoStruct()

			dst.PendingSafetyChecks = append(dst.PendingSafetyChecks, tmpitem)
		}

	}
	return &dst
}

type innerFabricNodeUpgradeProgressList struct {
	Count uint32
	Items *innerFabricNodeUpgradeProgress
}

func (obj *innerFabricNodeUpgradeProgressList) toGoStruct() []FabricNodeUpgradeProgress {
	var dst []FabricNodeUpgradeProgress
	{
		var innerlst []innerFabricNodeUpgradeProgress
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeUpgradeProgress

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricUpgradeDomainProgress struct {
	UpgradeDomainName string
	NodeProgressList  []FabricNodeUpgradeProgress
}

func (obj *FabricUpgradeDomainProgress) toInnerStruct() *innerFabricUpgradeDomainProgress {
	if obj == nil {
		return nil
	}
	dst := innerFabricUpgradeDomainProgress{}
	s_94, _ := windows.UTF16PtrFromString(obj.UpgradeDomainName)
	dst.UpgradeDomainName = s_94

	lst_95 := &innerFabricNodeUpgradeProgressList{}
	{

		var tmp []innerFabricNodeUpgradeProgress

		for _, item := range obj.NodeProgressList {
			var tmpitem innerFabricNodeUpgradeProgress

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_95.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_95.Items = &tmp[0]
		}

	}
	dst.NodeProgressList = lst_95
	return &dst
}

type innerFabricUpgradeDomainProgress struct {
	UpgradeDomainName *uint16
	NodeProgressList  *innerFabricNodeUpgradeProgressList
	Reserved          unsafe.Pointer
}

func (obj *innerFabricUpgradeDomainProgress) toGoStruct() *FabricUpgradeDomainProgress {
	if obj == nil {
		return nil
	}
	dst := FabricUpgradeDomainProgress{}
	dst.UpgradeDomainName = windows.UTF16PtrToString(obj.UpgradeDomainName)
	{
		var innerlst []innerFabricNodeUpgradeProgress
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.NodeProgressList.Items), int(obj.NodeProgressList.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeUpgradeProgress

			tmpitem = *item.toGoStruct()

			dst.NodeProgressList = append(dst.NodeProgressList, tmpitem)
		}

	}
	return &dst
}

type FabricStatelessServiceDescription struct {
	ApplicationName            string
	ServiceName                string
	ServiceTypeName            string
	InitializationData         []byte
	PartitionScheme            FabricPartitionScheme
	PartitionSchemeDescription interface{}
	InstanceCount              int32
	PlacementConstraints       string
	CorrelationCount           uint32
	Correlations               *FabricServiceCorrelationDescription
	MetricCount                uint32
	Metrics                    *FabricServiceLoadMetricDescription
}

func (obj *FabricStatelessServiceDescription) toInnerStruct() *innerFabricStatelessServiceDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceDescription{}
	s_96, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_96

	s_97, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_97

	s_98, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_98

	{

		var tmp []byte

		for _, item := range obj.InitializationData {
			var tmpitem byte

			tmpitem = item

			tmp = append(tmp, tmpitem)
		}

		dst.InitializationDataSize = uint32(len(tmp))
		if len(tmp) > 0 {
			dst.InitializationData = &tmp[0]
		}

	}
	dst.PartitionScheme = obj.PartitionScheme
	dst.PartitionSchemeDescription = toUnsafePointer(obj.PartitionSchemeDescription)
	dst.InstanceCount = obj.InstanceCount
	s_99, _ := windows.UTF16PtrFromString(obj.PlacementConstraints)
	dst.PlacementConstraints = s_99

	dst.CorrelationCount = obj.CorrelationCount
	dst.Correlations = obj.Correlations.toInnerStruct()
	dst.MetricCount = obj.MetricCount
	dst.Metrics = obj.Metrics.toInnerStruct()
	return &dst
}

type innerFabricStatelessServiceDescription struct {
	ApplicationName            *uint16
	ServiceName                *uint16
	ServiceTypeName            *uint16
	InitializationDataSize     uint32
	InitializationData         *byte
	PartitionScheme            FabricPartitionScheme
	PartitionSchemeDescription unsafe.Pointer
	InstanceCount              int32
	PlacementConstraints       *uint16
	CorrelationCount           uint32
	Correlations               *innerFabricServiceCorrelationDescription
	MetricCount                uint32
	Metrics                    *innerFabricServiceLoadMetricDescription
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricStatelessServiceDescription) toGoStruct() *FabricStatelessServiceDescription {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	{
		var innerlst []byte
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.InitializationData), int(obj.InitializationDataSize))

		for _, item := range innerlst {
			var tmpitem byte

			tmpitem = item

			dst.InitializationData = append(dst.InitializationData, tmpitem)
		}

	}
	dst.PartitionScheme = obj.PartitionScheme
	dst.PartitionSchemeDescription = fromUnsafePointer(obj.PartitionSchemeDescription)
	dst.InstanceCount = obj.InstanceCount
	dst.PlacementConstraints = windows.UTF16PtrToString(obj.PlacementConstraints)
	dst.CorrelationCount = obj.CorrelationCount
	dst.Correlations = obj.Correlations.toGoStruct()
	dst.MetricCount = obj.MetricCount
	dst.Metrics = obj.Metrics.toGoStruct()
	return &dst
}

type FabricStatelessServiceDescriptionEx1 struct {
	PolicyList []FabricServicePlacementPolicyDescription
}

func (obj *FabricStatelessServiceDescriptionEx1) toInnerStruct() *innerFabricStatelessServiceDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceDescriptionEx1{}
	lst_100 := &innerFabricServicePlacementPolicyList{}
	{

		var tmp []innerFabricServicePlacementPolicyDescription

		for _, item := range obj.PolicyList {
			var tmpitem innerFabricServicePlacementPolicyDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_100.PolicyCount = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_100.Policies = &tmp[0]
		}

	}
	dst.PolicyList = lst_100
	return &dst
}

type innerFabricStatelessServiceDescriptionEx1 struct {
	PolicyList *innerFabricServicePlacementPolicyList
	Reserved   unsafe.Pointer
}

func (obj *innerFabricStatelessServiceDescriptionEx1) toGoStruct() *FabricStatelessServiceDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceDescriptionEx1{}
	{
		var innerlst []innerFabricServicePlacementPolicyDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PolicyList.Policies), int(obj.PolicyList.PolicyCount))

		for _, item := range innerlst {
			var tmpitem FabricServicePlacementPolicyDescription

			tmpitem = *item.toGoStruct()

			dst.PolicyList = append(dst.PolicyList, tmpitem)
		}

	}
	return &dst
}

type FabricStatelessServiceDescriptionEx2 struct {
	IsDefaultMoveCostSpecified bool
	DefaultMoveCost            FabricMoveCost
}
type innerFabricStatelessServiceDescriptionEx2 struct {
	FabricStatelessServiceDescriptionEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatelessServiceDescriptionEx2) toGoStruct() *FabricStatelessServiceDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatelessServiceDescriptionEx2
}
func (obj *FabricStatelessServiceDescriptionEx2) toInnerStruct() *innerFabricStatelessServiceDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatelessServiceDescriptionEx2{*obj, nil}
}

type FabricStatelessServiceDescriptionEx3 struct {
	ServicePackageActivationMode FabricServicePackageActivationMode
	ServiceDnsName               string
}

func (obj *FabricStatelessServiceDescriptionEx3) toInnerStruct() *innerFabricStatelessServiceDescriptionEx3 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceDescriptionEx3{}
	dst.ServicePackageActivationMode = obj.ServicePackageActivationMode
	s_101, _ := windows.UTF16PtrFromString(obj.ServiceDnsName)
	dst.ServiceDnsName = s_101

	return &dst
}

type innerFabricStatelessServiceDescriptionEx3 struct {
	ServicePackageActivationMode FabricServicePackageActivationMode
	ServiceDnsName               *uint16
	Reserved                     unsafe.Pointer
}

func (obj *innerFabricStatelessServiceDescriptionEx3) toGoStruct() *FabricStatelessServiceDescriptionEx3 {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceDescriptionEx3{}
	dst.ServicePackageActivationMode = obj.ServicePackageActivationMode
	dst.ServiceDnsName = windows.UTF16PtrToString(obj.ServiceDnsName)
	return &dst
}

type FabricStatelessServiceDescriptionEx4 struct {
	ServiceScalingPolicies []FabricServiceScalingPolicy
}
type innerFabricStatelessServiceDescriptionEx4 struct {
	FabricStatelessServiceDescriptionEx4
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatelessServiceDescriptionEx4) toGoStruct() *FabricStatelessServiceDescriptionEx4 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatelessServiceDescriptionEx4
}
func (obj *FabricStatelessServiceDescriptionEx4) toInnerStruct() *innerFabricStatelessServiceDescriptionEx4 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatelessServiceDescriptionEx4{*obj, nil}
}

type FabricStatelessServiceUpdateDescription struct {
	Flags         uint32
	InstanceCount int32
}
type innerFabricStatelessServiceUpdateDescription struct {
	FabricStatelessServiceUpdateDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatelessServiceUpdateDescription) toGoStruct() *FabricStatelessServiceUpdateDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatelessServiceUpdateDescription
}
func (obj *FabricStatelessServiceUpdateDescription) toInnerStruct() *innerFabricStatelessServiceUpdateDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricStatelessServiceUpdateDescription{*obj, nil}
}

type FabricStatelessServiceUpdateDescriptionEx1 struct {
	PlacementConstraints string
	PolicyList           []FabricServicePlacementPolicyDescription
	Correlations         []FabricServiceCorrelationDescription
	MetricCount          uint32
	Metrics              *FabricServiceLoadMetricDescription
}

func (obj *FabricStatelessServiceUpdateDescriptionEx1) toInnerStruct() *innerFabricStatelessServiceUpdateDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceUpdateDescriptionEx1{}
	s_102, _ := windows.UTF16PtrFromString(obj.PlacementConstraints)
	dst.PlacementConstraints = s_102

	lst_103 := &innerFabricServicePlacementPolicyList{}
	{

		var tmp []innerFabricServicePlacementPolicyDescription

		for _, item := range obj.PolicyList {
			var tmpitem innerFabricServicePlacementPolicyDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_103.PolicyCount = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_103.Policies = &tmp[0]
		}

	}
	dst.PolicyList = lst_103
	{

		var tmp []innerFabricServiceCorrelationDescription

		for _, item := range obj.Correlations {
			var tmpitem innerFabricServiceCorrelationDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		dst.CorrelationCount = uint32(len(tmp))
		if len(tmp) > 0 {
			dst.Correlations = &tmp[0]
		}

	}
	dst.MetricCount = obj.MetricCount
	dst.Metrics = obj.Metrics.toInnerStruct()
	return &dst
}

type innerFabricStatelessServiceUpdateDescriptionEx1 struct {
	PlacementConstraints *uint16
	PolicyList           *innerFabricServicePlacementPolicyList
	CorrelationCount     uint32
	Correlations         *innerFabricServiceCorrelationDescription
	MetricCount          uint32
	Metrics              *innerFabricServiceLoadMetricDescription
	Reserved             unsafe.Pointer
}

func (obj *innerFabricStatelessServiceUpdateDescriptionEx1) toGoStruct() *FabricStatelessServiceUpdateDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceUpdateDescriptionEx1{}
	dst.PlacementConstraints = windows.UTF16PtrToString(obj.PlacementConstraints)
	{
		var innerlst []innerFabricServicePlacementPolicyDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PolicyList.Policies), int(obj.PolicyList.PolicyCount))

		for _, item := range innerlst {
			var tmpitem FabricServicePlacementPolicyDescription

			tmpitem = *item.toGoStruct()

			dst.PolicyList = append(dst.PolicyList, tmpitem)
		}

	}
	{
		var innerlst []innerFabricServiceCorrelationDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Correlations), int(obj.CorrelationCount))

		for _, item := range innerlst {
			var tmpitem FabricServiceCorrelationDescription

			tmpitem = *item.toGoStruct()

			dst.Correlations = append(dst.Correlations, tmpitem)
		}

	}
	dst.MetricCount = obj.MetricCount
	dst.Metrics = obj.Metrics.toGoStruct()
	return &dst
}

type FabricStatelessServiceUpdateDescriptionEx2 struct {
	DefaultMoveCost FabricMoveCost
}
type innerFabricStatelessServiceUpdateDescriptionEx2 struct {
	FabricStatelessServiceUpdateDescriptionEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatelessServiceUpdateDescriptionEx2) toGoStruct() *FabricStatelessServiceUpdateDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatelessServiceUpdateDescriptionEx2
}
func (obj *FabricStatelessServiceUpdateDescriptionEx2) toInnerStruct() *innerFabricStatelessServiceUpdateDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatelessServiceUpdateDescriptionEx2{*obj, nil}
}

type FabricStatelessServiceUpdateDescriptionEx3 struct {
	RepartitionKind        FabricServicePartitionKind
	RepartitionDescription interface{}
	ServiceScalingPolicies []FabricServiceScalingPolicy
}

func (obj *FabricStatelessServiceUpdateDescriptionEx3) toInnerStruct() *innerFabricStatelessServiceUpdateDescriptionEx3 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceUpdateDescriptionEx3{}
	dst.RepartitionKind = obj.RepartitionKind
	dst.RepartitionDescription = toUnsafePointer(obj.RepartitionDescription)
	{

		var tmp []innerFabricServiceScalingPolicy

		for _, item := range obj.ServiceScalingPolicies {
			var tmpitem innerFabricServiceScalingPolicy

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		dst.ScalingPolicyCount = uint32(len(tmp))
		if len(tmp) > 0 {
			dst.ServiceScalingPolicies = &tmp[0]
		}

	}
	return &dst
}

type innerFabricStatelessServiceUpdateDescriptionEx3 struct {
	RepartitionKind        FabricServicePartitionKind
	RepartitionDescription unsafe.Pointer
	ScalingPolicyCount     uint32
	ServiceScalingPolicies *innerFabricServiceScalingPolicy
	Reserved               unsafe.Pointer
}

func (obj *innerFabricStatelessServiceUpdateDescriptionEx3) toGoStruct() *FabricStatelessServiceUpdateDescriptionEx3 {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceUpdateDescriptionEx3{}
	dst.RepartitionKind = obj.RepartitionKind
	dst.RepartitionDescription = fromUnsafePointer(obj.RepartitionDescription)
	{
		var innerlst []innerFabricServiceScalingPolicy
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ServiceScalingPolicies), int(obj.ScalingPolicyCount))

		for _, item := range innerlst {
			var tmpitem FabricServiceScalingPolicy

			tmpitem = *item.toGoStruct()

			dst.ServiceScalingPolicies = append(dst.ServiceScalingPolicies, tmpitem)
		}

	}
	return &dst
}

type FabricStatefulServiceDescription struct {
	ApplicationName            string
	ServiceName                string
	ServiceTypeName            string
	InitializationData         []byte
	PartitionScheme            FabricPartitionScheme
	PartitionSchemeDescription interface{}
	TargetReplicaSetSize       int32
	MinReplicaSetSize          int32
	PlacementConstraints       string
	CorrelationCount           uint32
	Correlations               *FabricServiceCorrelationDescription
	MetricCount                uint32
	Metrics                    *FabricServiceLoadMetricDescription
	HasPersistedState          bool
}

func (obj *FabricStatefulServiceDescription) toInnerStruct() *innerFabricStatefulServiceDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceDescription{}
	s_104, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_104

	s_105, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_105

	s_106, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_106

	{

		var tmp []byte

		for _, item := range obj.InitializationData {
			var tmpitem byte

			tmpitem = item

			tmp = append(tmp, tmpitem)
		}

		dst.InitializationDataSize = uint32(len(tmp))
		if len(tmp) > 0 {
			dst.InitializationData = &tmp[0]
		}

	}
	dst.PartitionScheme = obj.PartitionScheme
	dst.PartitionSchemeDescription = toUnsafePointer(obj.PartitionSchemeDescription)
	dst.TargetReplicaSetSize = obj.TargetReplicaSetSize
	dst.MinReplicaSetSize = obj.MinReplicaSetSize
	s_107, _ := windows.UTF16PtrFromString(obj.PlacementConstraints)
	dst.PlacementConstraints = s_107

	dst.CorrelationCount = obj.CorrelationCount
	dst.Correlations = obj.Correlations.toInnerStruct()
	dst.MetricCount = obj.MetricCount
	dst.Metrics = obj.Metrics.toInnerStruct()
	dst.HasPersistedState = obj.HasPersistedState
	return &dst
}

type innerFabricStatefulServiceDescription struct {
	ApplicationName            *uint16
	ServiceName                *uint16
	ServiceTypeName            *uint16
	InitializationDataSize     uint32
	InitializationData         *byte
	PartitionScheme            FabricPartitionScheme
	PartitionSchemeDescription unsafe.Pointer
	TargetReplicaSetSize       int32
	MinReplicaSetSize          int32
	PlacementConstraints       *uint16
	CorrelationCount           uint32
	Correlations               *innerFabricServiceCorrelationDescription
	MetricCount                uint32
	Metrics                    *innerFabricServiceLoadMetricDescription
	HasPersistedState          bool
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricStatefulServiceDescription) toGoStruct() *FabricStatefulServiceDescription {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	{
		var innerlst []byte
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.InitializationData), int(obj.InitializationDataSize))

		for _, item := range innerlst {
			var tmpitem byte

			tmpitem = item

			dst.InitializationData = append(dst.InitializationData, tmpitem)
		}

	}
	dst.PartitionScheme = obj.PartitionScheme
	dst.PartitionSchemeDescription = fromUnsafePointer(obj.PartitionSchemeDescription)
	dst.TargetReplicaSetSize = obj.TargetReplicaSetSize
	dst.MinReplicaSetSize = obj.MinReplicaSetSize
	dst.PlacementConstraints = windows.UTF16PtrToString(obj.PlacementConstraints)
	dst.CorrelationCount = obj.CorrelationCount
	dst.Correlations = obj.Correlations.toGoStruct()
	dst.MetricCount = obj.MetricCount
	dst.Metrics = obj.Metrics.toGoStruct()
	dst.HasPersistedState = obj.HasPersistedState
	return &dst
}

type FabricStatefulServiceFailoverSettings struct {
	Flags                             uint32
	ReplicaRestartWaitDurationSeconds uint32
	QuorumLossWaitDurationSeconds     uint32
}
type innerFabricStatefulServiceFailoverSettings struct {
	FabricStatefulServiceFailoverSettings
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceFailoverSettings) toGoStruct() *FabricStatefulServiceFailoverSettings {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceFailoverSettings
}
func (obj *FabricStatefulServiceFailoverSettings) toInnerStruct() *innerFabricStatefulServiceFailoverSettings {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceFailoverSettings{*obj, nil}
}

type FabricStatefulServiceFailoverSettingsEx1 struct {
	StandByReplicaKeepDurationSeconds uint32
}
type innerFabricStatefulServiceFailoverSettingsEx1 struct {
	FabricStatefulServiceFailoverSettingsEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceFailoverSettingsEx1) toGoStruct() *FabricStatefulServiceFailoverSettingsEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceFailoverSettingsEx1
}
func (obj *FabricStatefulServiceFailoverSettingsEx1) toInnerStruct() *innerFabricStatefulServiceFailoverSettingsEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceFailoverSettingsEx1{*obj, nil}
}

type FabricStatefulServiceDescriptionEx1 struct {
	PolicyList       []FabricServicePlacementPolicyDescription
	FailoverSettings *FabricStatefulServiceFailoverSettings
}

func (obj *FabricStatefulServiceDescriptionEx1) toInnerStruct() *innerFabricStatefulServiceDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceDescriptionEx1{}
	lst_108 := &innerFabricServicePlacementPolicyList{}
	{

		var tmp []innerFabricServicePlacementPolicyDescription

		for _, item := range obj.PolicyList {
			var tmpitem innerFabricServicePlacementPolicyDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_108.PolicyCount = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_108.Policies = &tmp[0]
		}

	}
	dst.PolicyList = lst_108
	dst.FailoverSettings = obj.FailoverSettings.toInnerStruct()
	return &dst
}

type innerFabricStatefulServiceDescriptionEx1 struct {
	PolicyList       *innerFabricServicePlacementPolicyList
	FailoverSettings *innerFabricStatefulServiceFailoverSettings
	Reserved         unsafe.Pointer
}

func (obj *innerFabricStatefulServiceDescriptionEx1) toGoStruct() *FabricStatefulServiceDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceDescriptionEx1{}
	{
		var innerlst []innerFabricServicePlacementPolicyDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PolicyList.Policies), int(obj.PolicyList.PolicyCount))

		for _, item := range innerlst {
			var tmpitem FabricServicePlacementPolicyDescription

			tmpitem = *item.toGoStruct()

			dst.PolicyList = append(dst.PolicyList, tmpitem)
		}

	}
	dst.FailoverSettings = obj.FailoverSettings.toGoStruct()
	return &dst
}

type FabricStatefulServiceDescriptionEx2 struct {
	IsDefaultMoveCostSpecified bool
	DefaultMoveCost            FabricMoveCost
}
type innerFabricStatefulServiceDescriptionEx2 struct {
	FabricStatefulServiceDescriptionEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceDescriptionEx2) toGoStruct() *FabricStatefulServiceDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceDescriptionEx2
}
func (obj *FabricStatefulServiceDescriptionEx2) toInnerStruct() *innerFabricStatefulServiceDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceDescriptionEx2{*obj, nil}
}

type FabricStatefulServiceDescriptionEx3 struct {
	ServicePackageActivationMode FabricServicePackageActivationMode
	ServiceDnsName               string
}

func (obj *FabricStatefulServiceDescriptionEx3) toInnerStruct() *innerFabricStatefulServiceDescriptionEx3 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceDescriptionEx3{}
	dst.ServicePackageActivationMode = obj.ServicePackageActivationMode
	s_109, _ := windows.UTF16PtrFromString(obj.ServiceDnsName)
	dst.ServiceDnsName = s_109

	return &dst
}

type innerFabricStatefulServiceDescriptionEx3 struct {
	ServicePackageActivationMode FabricServicePackageActivationMode
	ServiceDnsName               *uint16
	Reserved                     unsafe.Pointer
}

func (obj *innerFabricStatefulServiceDescriptionEx3) toGoStruct() *FabricStatefulServiceDescriptionEx3 {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceDescriptionEx3{}
	dst.ServicePackageActivationMode = obj.ServicePackageActivationMode
	dst.ServiceDnsName = windows.UTF16PtrToString(obj.ServiceDnsName)
	return &dst
}

type FabricStatefulServiceDescriptionEx4 struct {
	ServiceScalingPolicies []FabricServiceScalingPolicy
}
type innerFabricStatefulServiceDescriptionEx4 struct {
	FabricStatefulServiceDescriptionEx4
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceDescriptionEx4) toGoStruct() *FabricStatefulServiceDescriptionEx4 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceDescriptionEx4
}
func (obj *FabricStatefulServiceDescriptionEx4) toInnerStruct() *innerFabricStatefulServiceDescriptionEx4 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceDescriptionEx4{*obj, nil}
}

type FabricStatefulServiceUpdateDescription struct {
	Flags                             uint32
	TargetReplicaSetSize              int32
	ReplicaRestartWaitDurationSeconds uint32
	QuorumLossWaitDurationSeconds     uint32
}
type innerFabricStatefulServiceUpdateDescription struct {
	FabricStatefulServiceUpdateDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceUpdateDescription) toGoStruct() *FabricStatefulServiceUpdateDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceUpdateDescription
}
func (obj *FabricStatefulServiceUpdateDescription) toInnerStruct() *innerFabricStatefulServiceUpdateDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceUpdateDescription{*obj, nil}
}

type FabricStatefulServiceUpdateDescriptionEx1 struct {
	StandByReplicaKeepDurationSeconds uint32
}
type innerFabricStatefulServiceUpdateDescriptionEx1 struct {
	FabricStatefulServiceUpdateDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceUpdateDescriptionEx1) toGoStruct() *FabricStatefulServiceUpdateDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceUpdateDescriptionEx1
}
func (obj *FabricStatefulServiceUpdateDescriptionEx1) toInnerStruct() *innerFabricStatefulServiceUpdateDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceUpdateDescriptionEx1{*obj, nil}
}

type FabricStatefulServiceUpdateDescriptionEx2 struct {
	MinReplicaSetSize int32
}
type innerFabricStatefulServiceUpdateDescriptionEx2 struct {
	FabricStatefulServiceUpdateDescriptionEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceUpdateDescriptionEx2) toGoStruct() *FabricStatefulServiceUpdateDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceUpdateDescriptionEx2
}
func (obj *FabricStatefulServiceUpdateDescriptionEx2) toInnerStruct() *innerFabricStatefulServiceUpdateDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceUpdateDescriptionEx2{*obj, nil}
}

type FabricStatefulServiceUpdateDescriptionEx3 struct {
	PlacementConstraints string
	PolicyList           []FabricServicePlacementPolicyDescription
	Correlations         []FabricServiceCorrelationDescription
	MetricCount          uint32
	Metrics              *FabricServiceLoadMetricDescription
}

func (obj *FabricStatefulServiceUpdateDescriptionEx3) toInnerStruct() *innerFabricStatefulServiceUpdateDescriptionEx3 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceUpdateDescriptionEx3{}
	s_110, _ := windows.UTF16PtrFromString(obj.PlacementConstraints)
	dst.PlacementConstraints = s_110

	lst_111 := &innerFabricServicePlacementPolicyList{}
	{

		var tmp []innerFabricServicePlacementPolicyDescription

		for _, item := range obj.PolicyList {
			var tmpitem innerFabricServicePlacementPolicyDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_111.PolicyCount = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_111.Policies = &tmp[0]
		}

	}
	dst.PolicyList = lst_111
	{

		var tmp []innerFabricServiceCorrelationDescription

		for _, item := range obj.Correlations {
			var tmpitem innerFabricServiceCorrelationDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		dst.CorrelationCount = uint32(len(tmp))
		if len(tmp) > 0 {
			dst.Correlations = &tmp[0]
		}

	}
	dst.MetricCount = obj.MetricCount
	dst.Metrics = obj.Metrics.toInnerStruct()
	return &dst
}

type innerFabricStatefulServiceUpdateDescriptionEx3 struct {
	PlacementConstraints *uint16
	PolicyList           *innerFabricServicePlacementPolicyList
	CorrelationCount     uint32
	Correlations         *innerFabricServiceCorrelationDescription
	MetricCount          uint32
	Metrics              *innerFabricServiceLoadMetricDescription
	Reserved             unsafe.Pointer
}

func (obj *innerFabricStatefulServiceUpdateDescriptionEx3) toGoStruct() *FabricStatefulServiceUpdateDescriptionEx3 {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceUpdateDescriptionEx3{}
	dst.PlacementConstraints = windows.UTF16PtrToString(obj.PlacementConstraints)
	{
		var innerlst []innerFabricServicePlacementPolicyDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PolicyList.Policies), int(obj.PolicyList.PolicyCount))

		for _, item := range innerlst {
			var tmpitem FabricServicePlacementPolicyDescription

			tmpitem = *item.toGoStruct()

			dst.PolicyList = append(dst.PolicyList, tmpitem)
		}

	}
	{
		var innerlst []innerFabricServiceCorrelationDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Correlations), int(obj.CorrelationCount))

		for _, item := range innerlst {
			var tmpitem FabricServiceCorrelationDescription

			tmpitem = *item.toGoStruct()

			dst.Correlations = append(dst.Correlations, tmpitem)
		}

	}
	dst.MetricCount = obj.MetricCount
	dst.Metrics = obj.Metrics.toGoStruct()
	return &dst
}

type FabricStatefulServiceUpdateDescriptionEx4 struct {
	DefaultMoveCost FabricMoveCost
}
type innerFabricStatefulServiceUpdateDescriptionEx4 struct {
	FabricStatefulServiceUpdateDescriptionEx4
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceUpdateDescriptionEx4) toGoStruct() *FabricStatefulServiceUpdateDescriptionEx4 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceUpdateDescriptionEx4
}
func (obj *FabricStatefulServiceUpdateDescriptionEx4) toInnerStruct() *innerFabricStatefulServiceUpdateDescriptionEx4 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceUpdateDescriptionEx4{*obj, nil}
}

type FabricStatefulServiceUpdateDescriptionEx5 struct {
	RepartitionKind        FabricServicePartitionKind
	RepartitionDescription interface{}
	ServiceScalingPolicies []FabricServiceScalingPolicy
}

func (obj *FabricStatefulServiceUpdateDescriptionEx5) toInnerStruct() *innerFabricStatefulServiceUpdateDescriptionEx5 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceUpdateDescriptionEx5{}
	dst.RepartitionKind = obj.RepartitionKind
	dst.RepartitionDescription = toUnsafePointer(obj.RepartitionDescription)
	{

		var tmp []innerFabricServiceScalingPolicy

		for _, item := range obj.ServiceScalingPolicies {
			var tmpitem innerFabricServiceScalingPolicy

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		dst.ScalingPolicyCount = uint32(len(tmp))
		if len(tmp) > 0 {
			dst.ServiceScalingPolicies = &tmp[0]
		}

	}
	return &dst
}

type innerFabricStatefulServiceUpdateDescriptionEx5 struct {
	RepartitionKind        FabricServicePartitionKind
	RepartitionDescription unsafe.Pointer
	ScalingPolicyCount     uint32
	ServiceScalingPolicies *innerFabricServiceScalingPolicy
	Reserved               unsafe.Pointer
}

func (obj *innerFabricStatefulServiceUpdateDescriptionEx5) toGoStruct() *FabricStatefulServiceUpdateDescriptionEx5 {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceUpdateDescriptionEx5{}
	dst.RepartitionKind = obj.RepartitionKind
	dst.RepartitionDescription = fromUnsafePointer(obj.RepartitionDescription)
	{
		var innerlst []innerFabricServiceScalingPolicy
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ServiceScalingPolicies), int(obj.ScalingPolicyCount))

		for _, item := range innerlst {
			var tmpitem FabricServiceScalingPolicy

			tmpitem = *item.toGoStruct()

			dst.ServiceScalingPolicies = append(dst.ServiceScalingPolicies, tmpitem)
		}

	}
	return &dst
}

type innerFabricNamedRepartitionDescription struct {
	NamesToAddCount    uint32
	NamesToAdd         **uint16
	NamesToRemoveCount uint32
	NamesToRemove      **uint16
	Reserved           unsafe.Pointer
}
type FabricUniformInt64RangePartitionSchemeDescription struct {
	PartitionCount int32
	LowKey         int64
	HighKey        int64
}
type innerFabricUniformInt64RangePartitionSchemeDescription struct {
	FabricUniformInt64RangePartitionSchemeDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricUniformInt64RangePartitionSchemeDescription) toGoStruct() *FabricUniformInt64RangePartitionSchemeDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricUniformInt64RangePartitionSchemeDescription
}
func (obj *FabricUniformInt64RangePartitionSchemeDescription) toInnerStruct() *innerFabricUniformInt64RangePartitionSchemeDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricUniformInt64RangePartitionSchemeDescription{*obj, nil}
}

type innerFabricNamedPartitionSchemeDescription struct {
	PartitionCount int32
	Names          **uint16
	Reserved       unsafe.Pointer
}
type FabricResolvedServiceEndpoint struct {
	Address string
	Role    FabricServiceEndpointRole
}

func (obj *FabricResolvedServiceEndpoint) toInnerStruct() *innerFabricResolvedServiceEndpoint {
	if obj == nil {
		return nil
	}
	dst := innerFabricResolvedServiceEndpoint{}
	s_112, _ := windows.UTF16PtrFromString(obj.Address)
	dst.Address = s_112

	dst.Role = obj.Role
	return &dst
}

type innerFabricResolvedServiceEndpoint struct {
	Address  *uint16
	Role     FabricServiceEndpointRole
	Reserved unsafe.Pointer
}

func (obj *innerFabricResolvedServiceEndpoint) toGoStruct() *FabricResolvedServiceEndpoint {
	if obj == nil {
		return nil
	}
	dst := FabricResolvedServiceEndpoint{}
	dst.Address = windows.UTF16PtrToString(obj.Address)
	dst.Role = obj.Role
	return &dst
}

type FabricResolvedServicePartition struct {
	Info        FabricServicePartitionInformation
	Endpoints   []FabricResolvedServiceEndpoint
	ServiceName string
}

func (obj *FabricResolvedServicePartition) toInnerStruct() *innerFabricResolvedServicePartition {
	if obj == nil {
		return nil
	}
	dst := innerFabricResolvedServicePartition{}
	dst.Info = *obj.Info.toInnerStruct()
	{

		var tmp []innerFabricResolvedServiceEndpoint

		for _, item := range obj.Endpoints {
			var tmpitem innerFabricResolvedServiceEndpoint

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		dst.EndpointCount = uint32(len(tmp))
		if len(tmp) > 0 {
			dst.Endpoints = &tmp[0]
		}

	}
	s_113, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_113

	return &dst
}

type innerFabricResolvedServicePartition struct {
	Info          innerFabricServicePartitionInformation
	EndpointCount uint32
	Endpoints     *innerFabricResolvedServiceEndpoint
	ServiceName   *uint16
	Reserved      unsafe.Pointer
}

func (obj *innerFabricResolvedServicePartition) toGoStruct() *FabricResolvedServicePartition {
	if obj == nil {
		return nil
	}
	dst := FabricResolvedServicePartition{}
	dst.Info = *obj.Info.toGoStruct()
	{
		var innerlst []innerFabricResolvedServiceEndpoint
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Endpoints), int(obj.EndpointCount))

		for _, item := range innerlst {
			var tmpitem FabricResolvedServiceEndpoint

			tmpitem = *item.toGoStruct()

			dst.Endpoints = append(dst.Endpoints, tmpitem)
		}

	}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	return &dst
}

type FabricServiceNotification struct {
	ServiceName   string
	PartitionId   windows.GUID
	Endpoints     []FabricResolvedServiceEndpoint
	PartitionInfo *FabricServicePartitionInformation
}

func (obj *FabricServiceNotification) toInnerStruct() *innerFabricServiceNotification {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceNotification{}
	s_114, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_114

	dst.PartitionId = obj.PartitionId
	{

		var tmp []innerFabricResolvedServiceEndpoint

		for _, item := range obj.Endpoints {
			var tmpitem innerFabricResolvedServiceEndpoint

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		dst.EndpointCount = uint32(len(tmp))
		if len(tmp) > 0 {
			dst.Endpoints = &tmp[0]
		}

	}
	dst.PartitionInfo = obj.PartitionInfo.toInnerStruct()
	return &dst
}

type innerFabricServiceNotification struct {
	ServiceName   *uint16
	PartitionId   windows.GUID
	EndpointCount uint32
	Endpoints     *innerFabricResolvedServiceEndpoint
	PartitionInfo *innerFabricServicePartitionInformation
	Reserved      unsafe.Pointer
}

func (obj *innerFabricServiceNotification) toGoStruct() *FabricServiceNotification {
	if obj == nil {
		return nil
	}
	dst := FabricServiceNotification{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionId = obj.PartitionId
	{
		var innerlst []innerFabricResolvedServiceEndpoint
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Endpoints), int(obj.EndpointCount))

		for _, item := range innerlst {
			var tmpitem FabricResolvedServiceEndpoint

			tmpitem = *item.toGoStruct()

			dst.Endpoints = append(dst.Endpoints, tmpitem)
		}

	}
	dst.PartitionInfo = obj.PartitionInfo.toGoStruct()
	return &dst
}

type FabricServiceNotificationFilterDescription struct {
	Name  string
	Flags FabricServiceNotificationFilterFlags
}

func (obj *FabricServiceNotificationFilterDescription) toInnerStruct() *innerFabricServiceNotificationFilterDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceNotificationFilterDescription{}
	s_115, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_115

	dst.Flags = obj.Flags
	return &dst
}

type innerFabricServiceNotificationFilterDescription struct {
	Name     *uint16
	Flags    FabricServiceNotificationFilterFlags
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceNotificationFilterDescription) toGoStruct() *FabricServiceNotificationFilterDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceNotificationFilterDescription{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Flags = obj.Flags
	return &dst
}

type FabricApplicationParameter struct {
	Name  string
	Value string
}

func (obj *FabricApplicationParameter) toInnerStruct() *innerFabricApplicationParameter {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationParameter{}
	s_116, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_116

	s_117, _ := windows.UTF16PtrFromString(obj.Value)
	dst.Value = s_117

	return &dst
}

type innerFabricApplicationParameter struct {
	Name     *uint16
	Value    *uint16
	Reserved unsafe.Pointer
}

func (obj *innerFabricApplicationParameter) toGoStruct() *FabricApplicationParameter {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationParameter{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Value = windows.UTF16PtrToString(obj.Value)
	return &dst
}

type innerFabricApplicationParameterList struct {
	Count uint32
	Items *innerFabricApplicationParameter
}

func (obj *innerFabricApplicationParameterList) toGoStruct() []FabricApplicationParameter {
	var dst []FabricApplicationParameter
	{
		var innerlst []innerFabricApplicationParameter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationParameter

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type innerFabricStringMap struct {
	Count uint32
	Items *innerFabricApplicationParameter
}

func (obj *innerFabricStringMap) toGoStruct() map[string]string {
	var dst = make(map[string]string)
	{
		var mapvar = make(map[string]string)

		var innerlst []innerFabricApplicationParameter

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, kv := range innerlst {
			var k string
			var v string

			k = windows.UTF16PtrToString(kv.Name)
			v = windows.UTF16PtrToString(kv.Value)
			mapvar[k] = v

		}

		dst = mapvar
	}
	return dst
}

type FabricApplicationDescription struct {
	ApplicationName        string
	ApplicationTypeName    string
	ApplicationTypeVersion string
	ApplicationParameters  []FabricApplicationParameter
}

func (obj *FabricApplicationDescription) toInnerStruct() *innerFabricApplicationDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationDescription{}
	s_119, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_119

	s_120, _ := windows.UTF16PtrFromString(obj.ApplicationTypeName)
	dst.ApplicationTypeName = s_120

	s_121, _ := windows.UTF16PtrFromString(obj.ApplicationTypeVersion)
	dst.ApplicationTypeVersion = s_121

	lst_122 := &innerFabricApplicationParameterList{}
	{

		var tmp []innerFabricApplicationParameter

		for _, item := range obj.ApplicationParameters {
			var tmpitem innerFabricApplicationParameter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_122.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_122.Items = &tmp[0]
		}

	}
	dst.ApplicationParameters = lst_122
	return &dst
}

type innerFabricApplicationDescription struct {
	ApplicationName        *uint16
	ApplicationTypeName    *uint16
	ApplicationTypeVersion *uint16
	ApplicationParameters  *innerFabricApplicationParameterList
	Reserved               unsafe.Pointer
}

func (obj *innerFabricApplicationDescription) toGoStruct() *FabricApplicationDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ApplicationTypeName = windows.UTF16PtrToString(obj.ApplicationTypeName)
	dst.ApplicationTypeVersion = windows.UTF16PtrToString(obj.ApplicationTypeVersion)
	{
		var innerlst []innerFabricApplicationParameter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationParameters.Items), int(obj.ApplicationParameters.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationParameter

			tmpitem = *item.toGoStruct()

			dst.ApplicationParameters = append(dst.ApplicationParameters, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationMetricDescription struct {
	Name                     string
	NodeReservationCapacity  uint32
	MaximumNodeCapacity      uint32
	TotalApplicationCapacity uint32
}

func (obj *FabricApplicationMetricDescription) toInnerStruct() *innerFabricApplicationMetricDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationMetricDescription{}
	s_123, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_123

	dst.NodeReservationCapacity = obj.NodeReservationCapacity
	dst.MaximumNodeCapacity = obj.MaximumNodeCapacity
	dst.TotalApplicationCapacity = obj.TotalApplicationCapacity
	return &dst
}

type innerFabricApplicationMetricDescription struct {
	Name                     *uint16
	NodeReservationCapacity  uint32
	MaximumNodeCapacity      uint32
	TotalApplicationCapacity uint32
	Reserved                 unsafe.Pointer
}

func (obj *innerFabricApplicationMetricDescription) toGoStruct() *FabricApplicationMetricDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationMetricDescription{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.NodeReservationCapacity = obj.NodeReservationCapacity
	dst.MaximumNodeCapacity = obj.MaximumNodeCapacity
	dst.TotalApplicationCapacity = obj.TotalApplicationCapacity
	return &dst
}

type innerFabricApplicationMetricList struct {
	Count      uint32
	Capacities *innerFabricApplicationMetricDescription
}

func (obj *innerFabricApplicationMetricList) toGoStruct() []FabricApplicationMetricDescription {
	var dst []FabricApplicationMetricDescription
	{
		var innerlst []innerFabricApplicationMetricDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Capacities), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationMetricDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricApplicationCapacityDescription struct {
	MaximumNodes uint32
	MinimumNodes uint32
	Metrics      []FabricApplicationMetricDescription
}

func (obj *FabricApplicationCapacityDescription) toInnerStruct() *innerFabricApplicationCapacityDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationCapacityDescription{}
	dst.MaximumNodes = obj.MaximumNodes
	dst.MinimumNodes = obj.MinimumNodes
	lst_124 := &innerFabricApplicationMetricList{}
	{

		var tmp []innerFabricApplicationMetricDescription

		for _, item := range obj.Metrics {
			var tmpitem innerFabricApplicationMetricDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_124.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_124.Capacities = &tmp[0]
		}

	}
	dst.Metrics = lst_124
	return &dst
}

type innerFabricApplicationCapacityDescription struct {
	MaximumNodes uint32
	MinimumNodes uint32
	Metrics      *innerFabricApplicationMetricList
	Reserved     unsafe.Pointer
}

func (obj *innerFabricApplicationCapacityDescription) toGoStruct() *FabricApplicationCapacityDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationCapacityDescription{}
	dst.MaximumNodes = obj.MaximumNodes
	dst.MinimumNodes = obj.MinimumNodes
	{
		var innerlst []innerFabricApplicationMetricDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Metrics.Capacities), int(obj.Metrics.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationMetricDescription

			tmpitem = *item.toGoStruct()

			dst.Metrics = append(dst.Metrics, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationDescriptionEx1 struct {
	ApplicationCapacity *FabricApplicationCapacityDescription
}
type innerFabricApplicationDescriptionEx1 struct {
	FabricApplicationDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricApplicationDescriptionEx1) toGoStruct() *FabricApplicationDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricApplicationDescriptionEx1
}
func (obj *FabricApplicationDescriptionEx1) toInnerStruct() *innerFabricApplicationDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricApplicationDescriptionEx1{*obj, nil}
}

type FabricApplicationUpdateDescription struct {
	Flags                     uint32
	ApplicationName           string
	RemoveApplicationCapacity bool
	MaximumNodes              uint32
	MinimumNodes              uint32
	Metrics                   []FabricApplicationMetricDescription
}

func (obj *FabricApplicationUpdateDescription) toInnerStruct() *innerFabricApplicationUpdateDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationUpdateDescription{}
	dst.Flags = obj.Flags
	s_125, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_125

	dst.RemoveApplicationCapacity = obj.RemoveApplicationCapacity
	dst.MaximumNodes = obj.MaximumNodes
	dst.MinimumNodes = obj.MinimumNodes
	lst_126 := &innerFabricApplicationMetricList{}
	{

		var tmp []innerFabricApplicationMetricDescription

		for _, item := range obj.Metrics {
			var tmpitem innerFabricApplicationMetricDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_126.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_126.Capacities = &tmp[0]
		}

	}
	dst.Metrics = lst_126
	return &dst
}

type innerFabricApplicationUpdateDescription struct {
	Flags                     uint32
	ApplicationName           *uint16
	RemoveApplicationCapacity bool
	MaximumNodes              uint32
	MinimumNodes              uint32
	Metrics                   *innerFabricApplicationMetricList
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricApplicationUpdateDescription) toGoStruct() *FabricApplicationUpdateDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationUpdateDescription{}
	dst.Flags = obj.Flags
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.RemoveApplicationCapacity = obj.RemoveApplicationCapacity
	dst.MaximumNodes = obj.MaximumNodes
	dst.MinimumNodes = obj.MinimumNodes
	{
		var innerlst []innerFabricApplicationMetricDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Metrics.Capacities), int(obj.Metrics.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationMetricDescription

			tmpitem = *item.toGoStruct()

			dst.Metrics = append(dst.Metrics, tmpitem)
		}

	}
	return &dst
}

type FabricRollingUpgradePolicyDescription struct {
	RollingUpgradeMode                     FabricRollingUpgradeMode
	ForceRestart                           bool
	UpgradeReplicaSetCheckTimeoutInSeconds uint32
}
type innerFabricRollingUpgradePolicyDescription struct {
	FabricRollingUpgradePolicyDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricRollingUpgradePolicyDescription) toGoStruct() *FabricRollingUpgradePolicyDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricRollingUpgradePolicyDescription
}
func (obj *FabricRollingUpgradePolicyDescription) toInnerStruct() *innerFabricRollingUpgradePolicyDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricRollingUpgradePolicyDescription{*obj, nil}
}

type FabricRollingUpgradeMonitoringPolicy struct {
	FailureAction                    FabricMonitoredUpgradeFailureAction
	HealthCheckWaitDurationInSeconds uint32
	HealthCheckRetryTimeoutInSeconds uint32
	UpgradeTimeoutInSeconds          uint32
	UpgradeDomainTimeoutInSeconds    uint32
}
type innerFabricRollingUpgradeMonitoringPolicy struct {
	FabricRollingUpgradeMonitoringPolicy
	Reserved unsafe.Pointer
}

func (obj *innerFabricRollingUpgradeMonitoringPolicy) toGoStruct() *FabricRollingUpgradeMonitoringPolicy {
	if obj == nil {
		return nil
	}
	return &obj.FabricRollingUpgradeMonitoringPolicy
}
func (obj *FabricRollingUpgradeMonitoringPolicy) toInnerStruct() *innerFabricRollingUpgradeMonitoringPolicy {
	if obj == nil {
		return nil
	}
	return &innerFabricRollingUpgradeMonitoringPolicy{*obj, nil}
}

type FabricRollingUpgradeMonitoringPolicyEx1 struct {
	HealthCheckStableDurationInSeconds uint32
}
type innerFabricRollingUpgradeMonitoringPolicyEx1 struct {
	FabricRollingUpgradeMonitoringPolicyEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricRollingUpgradeMonitoringPolicyEx1) toGoStruct() *FabricRollingUpgradeMonitoringPolicyEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricRollingUpgradeMonitoringPolicyEx1
}
func (obj *FabricRollingUpgradeMonitoringPolicyEx1) toInnerStruct() *innerFabricRollingUpgradeMonitoringPolicyEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricRollingUpgradeMonitoringPolicyEx1{*obj, nil}
}

type FabricRollingUpgradePolicyDescriptionEx1 struct {
	MonitoringPolicy *FabricRollingUpgradeMonitoringPolicy
	HealthPolicy     interface{}
}

func (obj *FabricRollingUpgradePolicyDescriptionEx1) toInnerStruct() *innerFabricRollingUpgradePolicyDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricRollingUpgradePolicyDescriptionEx1{}
	dst.MonitoringPolicy = obj.MonitoringPolicy.toInnerStruct()
	dst.HealthPolicy = toUnsafePointer(obj.HealthPolicy)
	return &dst
}

type innerFabricRollingUpgradePolicyDescriptionEx1 struct {
	MonitoringPolicy *innerFabricRollingUpgradeMonitoringPolicy
	HealthPolicy     unsafe.Pointer
	Reserved         unsafe.Pointer
}

func (obj *innerFabricRollingUpgradePolicyDescriptionEx1) toGoStruct() *FabricRollingUpgradePolicyDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricRollingUpgradePolicyDescriptionEx1{}
	dst.MonitoringPolicy = obj.MonitoringPolicy.toGoStruct()
	dst.HealthPolicy = fromUnsafePointer(obj.HealthPolicy)
	return &dst
}

type FabricRollingUpgradePolicyDescriptionEx2 struct {
	EnableDeltaHealthEvaluation bool
	UpgradeHealthPolicy         interface{}
}

func (obj *FabricRollingUpgradePolicyDescriptionEx2) toInnerStruct() *innerFabricRollingUpgradePolicyDescriptionEx2 {
	if obj == nil {
		return nil
	}
	dst := innerFabricRollingUpgradePolicyDescriptionEx2{}
	dst.EnableDeltaHealthEvaluation = obj.EnableDeltaHealthEvaluation
	dst.UpgradeHealthPolicy = toUnsafePointer(obj.UpgradeHealthPolicy)
	return &dst
}

type innerFabricRollingUpgradePolicyDescriptionEx2 struct {
	EnableDeltaHealthEvaluation bool
	UpgradeHealthPolicy         unsafe.Pointer
	Reserved                    unsafe.Pointer
}

func (obj *innerFabricRollingUpgradePolicyDescriptionEx2) toGoStruct() *FabricRollingUpgradePolicyDescriptionEx2 {
	if obj == nil {
		return nil
	}
	dst := FabricRollingUpgradePolicyDescriptionEx2{}
	dst.EnableDeltaHealthEvaluation = obj.EnableDeltaHealthEvaluation
	dst.UpgradeHealthPolicy = fromUnsafePointer(obj.UpgradeHealthPolicy)
	return &dst
}

type FabricApplicationUpgradeDescription struct {
	ApplicationName              string
	TargetApplicationTypeVersion string
	ApplicationParameters        []FabricApplicationParameter
	UpgradeKind                  FabricApplicationUpgradeKind
	UpgradePolicyDescription     interface{}
}

func (obj *FabricApplicationUpgradeDescription) toInnerStruct() *innerFabricApplicationUpgradeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationUpgradeDescription{}
	s_127, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_127

	s_128, _ := windows.UTF16PtrFromString(obj.TargetApplicationTypeVersion)
	dst.TargetApplicationTypeVersion = s_128

	lst_129 := &innerFabricApplicationParameterList{}
	{

		var tmp []innerFabricApplicationParameter

		for _, item := range obj.ApplicationParameters {
			var tmpitem innerFabricApplicationParameter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_129.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_129.Items = &tmp[0]
		}

	}
	dst.ApplicationParameters = lst_129
	dst.UpgradeKind = obj.UpgradeKind
	dst.UpgradePolicyDescription = toUnsafePointer(obj.UpgradePolicyDescription)
	return &dst
}

type innerFabricApplicationUpgradeDescription struct {
	ApplicationName              *uint16
	TargetApplicationTypeVersion *uint16
	ApplicationParameters        *innerFabricApplicationParameterList
	UpgradeKind                  FabricApplicationUpgradeKind
	UpgradePolicyDescription     unsafe.Pointer
	Reserved                     unsafe.Pointer
}

func (obj *innerFabricApplicationUpgradeDescription) toGoStruct() *FabricApplicationUpgradeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationUpgradeDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.TargetApplicationTypeVersion = windows.UTF16PtrToString(obj.TargetApplicationTypeVersion)
	{
		var innerlst []innerFabricApplicationParameter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationParameters.Items), int(obj.ApplicationParameters.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationParameter

			tmpitem = *item.toGoStruct()

			dst.ApplicationParameters = append(dst.ApplicationParameters, tmpitem)
		}

	}
	dst.UpgradeKind = obj.UpgradeKind
	dst.UpgradePolicyDescription = fromUnsafePointer(obj.UpgradePolicyDescription)
	return &dst
}

type FabricApplicationUpgradeUpdateDescription struct {
	ApplicationName          string
	UpgradeKind              FabricApplicationUpgradeKind
	UpdateFlags              uint32
	UpgradePolicyDescription interface{}
}

func (obj *FabricApplicationUpgradeUpdateDescription) toInnerStruct() *innerFabricApplicationUpgradeUpdateDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationUpgradeUpdateDescription{}
	s_130, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_130

	dst.UpgradeKind = obj.UpgradeKind
	dst.UpdateFlags = obj.UpdateFlags
	dst.UpgradePolicyDescription = toUnsafePointer(obj.UpgradePolicyDescription)
	return &dst
}

type innerFabricApplicationUpgradeUpdateDescription struct {
	ApplicationName          *uint16
	UpgradeKind              FabricApplicationUpgradeKind
	UpdateFlags              uint32
	UpgradePolicyDescription unsafe.Pointer
	Reserved                 unsafe.Pointer
}

func (obj *innerFabricApplicationUpgradeUpdateDescription) toGoStruct() *FabricApplicationUpgradeUpdateDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationUpgradeUpdateDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.UpgradeKind = obj.UpgradeKind
	dst.UpdateFlags = obj.UpdateFlags
	dst.UpgradePolicyDescription = fromUnsafePointer(obj.UpgradePolicyDescription)
	return &dst
}

type FabricUpgradeDescription struct {
	CodeVersion              string
	ConfigVersion            string
	UpgradeKind              FabricUpgradeKind
	UpgradePolicyDescription interface{}
}

func (obj *FabricUpgradeDescription) toInnerStruct() *innerFabricUpgradeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricUpgradeDescription{}
	s_131, _ := windows.UTF16PtrFromString(obj.CodeVersion)
	dst.CodeVersion = s_131

	s_132, _ := windows.UTF16PtrFromString(obj.ConfigVersion)
	dst.ConfigVersion = s_132

	dst.UpgradeKind = obj.UpgradeKind
	dst.UpgradePolicyDescription = toUnsafePointer(obj.UpgradePolicyDescription)
	return &dst
}

type innerFabricUpgradeDescription struct {
	CodeVersion              *uint16
	ConfigVersion            *uint16
	UpgradeKind              FabricUpgradeKind
	UpgradePolicyDescription unsafe.Pointer
	Reserved                 unsafe.Pointer
}

func (obj *innerFabricUpgradeDescription) toGoStruct() *FabricUpgradeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricUpgradeDescription{}
	dst.CodeVersion = windows.UTF16PtrToString(obj.CodeVersion)
	dst.ConfigVersion = windows.UTF16PtrToString(obj.ConfigVersion)
	dst.UpgradeKind = obj.UpgradeKind
	dst.UpgradePolicyDescription = fromUnsafePointer(obj.UpgradePolicyDescription)
	return &dst
}

type FabricUpgradeUpdateDescription struct {
	UpgradeKind              FabricUpgradeKind
	UpdateFlags              uint32
	UpgradePolicyDescription interface{}
}

func (obj *FabricUpgradeUpdateDescription) toInnerStruct() *innerFabricUpgradeUpdateDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricUpgradeUpdateDescription{}
	dst.UpgradeKind = obj.UpgradeKind
	dst.UpdateFlags = obj.UpdateFlags
	dst.UpgradePolicyDescription = toUnsafePointer(obj.UpgradePolicyDescription)
	return &dst
}

type innerFabricUpgradeUpdateDescription struct {
	UpgradeKind              FabricUpgradeKind
	UpdateFlags              uint32
	UpgradePolicyDescription unsafe.Pointer
	Reserved                 unsafe.Pointer
}

func (obj *innerFabricUpgradeUpdateDescription) toGoStruct() *FabricUpgradeUpdateDescription {
	if obj == nil {
		return nil
	}
	dst := FabricUpgradeUpdateDescription{}
	dst.UpgradeKind = obj.UpgradeKind
	dst.UpdateFlags = obj.UpdateFlags
	dst.UpgradePolicyDescription = fromUnsafePointer(obj.UpgradePolicyDescription)
	return &dst
}

type FabricServiceGroupMemberDescription struct {
	ServiceType        string
	ServiceName        string
	InitializationData []byte
	MetricCount        uint32
	Metrics            *FabricServiceLoadMetricDescription
}

func (obj *FabricServiceGroupMemberDescription) toInnerStruct() *innerFabricServiceGroupMemberDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceGroupMemberDescription{}
	s_133, _ := windows.UTF16PtrFromString(obj.ServiceType)
	dst.ServiceType = s_133

	s_134, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_134

	{

		var tmp []byte

		for _, item := range obj.InitializationData {
			var tmpitem byte

			tmpitem = item

			tmp = append(tmp, tmpitem)
		}

		dst.InitializationDataSize = uint32(len(tmp))
		if len(tmp) > 0 {
			dst.InitializationData = &tmp[0]
		}

	}
	dst.MetricCount = obj.MetricCount
	dst.Metrics = obj.Metrics.toInnerStruct()
	return &dst
}

type innerFabricServiceGroupMemberDescription struct {
	ServiceType            *uint16
	ServiceName            *uint16
	InitializationDataSize uint32
	InitializationData     *byte
	MetricCount            uint32
	Metrics                *innerFabricServiceLoadMetricDescription
	Reserved               unsafe.Pointer
}

func (obj *innerFabricServiceGroupMemberDescription) toGoStruct() *FabricServiceGroupMemberDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceGroupMemberDescription{}
	dst.ServiceType = windows.UTF16PtrToString(obj.ServiceType)
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	{
		var innerlst []byte
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.InitializationData), int(obj.InitializationDataSize))

		for _, item := range innerlst {
			var tmpitem byte

			tmpitem = item

			dst.InitializationData = append(dst.InitializationData, tmpitem)
		}

	}
	dst.MetricCount = obj.MetricCount
	dst.Metrics = obj.Metrics.toGoStruct()
	return &dst
}

type FabricServiceGroupDescription struct {
	Description        *FabricServiceDescription
	MemberDescriptions []FabricServiceGroupMemberDescription
}
type innerFabricServiceGroupDescription struct {
	FabricServiceGroupDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceGroupDescription) toGoStruct() *FabricServiceGroupDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceGroupDescription
}
func (obj *FabricServiceGroupDescription) toInnerStruct() *innerFabricServiceGroupDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceGroupDescription{*obj, nil}
}

type FabricServiceGroupUpdateDescription struct {
	Description *FabricServiceUpdateDescription
}
type innerFabricServiceGroupUpdateDescription struct {
	FabricServiceGroupUpdateDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceGroupUpdateDescription) toGoStruct() *FabricServiceGroupUpdateDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceGroupUpdateDescription
}
func (obj *FabricServiceGroupUpdateDescription) toInnerStruct() *innerFabricServiceGroupUpdateDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceGroupUpdateDescription{*obj, nil}
}

type FabricKeyValueStoreItemMetadata struct {
	Key              string
	ValueSizeInBytes int32
	SequenceNumber   int64
	LastModifiedUtc  time.Time
}

func (obj *FabricKeyValueStoreItemMetadata) toInnerStruct() *innerFabricKeyValueStoreItemMetadata {
	if obj == nil {
		return nil
	}
	dst := innerFabricKeyValueStoreItemMetadata{}
	s_135, _ := windows.UTF16PtrFromString(obj.Key)
	dst.Key = s_135

	dst.ValueSizeInBytes = obj.ValueSizeInBytes
	dst.SequenceNumber = obj.SequenceNumber
	dst.LastModifiedUtc = windows.NsecToFiletime(obj.LastModifiedUtc.UnixNano())
	return &dst
}

type innerFabricKeyValueStoreItemMetadata struct {
	Key              *uint16
	ValueSizeInBytes int32
	SequenceNumber   int64
	LastModifiedUtc  windows.Filetime
	Reserved         unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreItemMetadata) toGoStruct() *FabricKeyValueStoreItemMetadata {
	if obj == nil {
		return nil
	}
	dst := FabricKeyValueStoreItemMetadata{}
	dst.Key = windows.UTF16PtrToString(obj.Key)
	dst.ValueSizeInBytes = obj.ValueSizeInBytes
	dst.SequenceNumber = obj.SequenceNumber
	dst.LastModifiedUtc = time.Unix(0, obj.LastModifiedUtc.Nanoseconds())
	return &dst
}

type FabricKeyValueStoreItemMetadataEx1 struct {
	LastModifiedOnPrimaryUtc time.Time
}

func (obj *FabricKeyValueStoreItemMetadataEx1) toInnerStruct() *innerFabricKeyValueStoreItemMetadataEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricKeyValueStoreItemMetadataEx1{}
	dst.LastModifiedOnPrimaryUtc = windows.NsecToFiletime(obj.LastModifiedOnPrimaryUtc.UnixNano())
	return &dst
}

type innerFabricKeyValueStoreItemMetadataEx1 struct {
	LastModifiedOnPrimaryUtc windows.Filetime
	Reserved                 unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreItemMetadataEx1) toGoStruct() *FabricKeyValueStoreItemMetadataEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricKeyValueStoreItemMetadataEx1{}
	dst.LastModifiedOnPrimaryUtc = time.Unix(0, obj.LastModifiedOnPrimaryUtc.Nanoseconds())
	return &dst
}

type FabricKeyValueStoreItem struct {
	Metadata *FabricKeyValueStoreItemMetadata
	Value    *byte
}
type innerFabricKeyValueStoreItem struct {
	FabricKeyValueStoreItem
	Reserved unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreItem) toGoStruct() *FabricKeyValueStoreItem {
	if obj == nil {
		return nil
	}
	return &obj.FabricKeyValueStoreItem
}
func (obj *FabricKeyValueStoreItem) toInnerStruct() *innerFabricKeyValueStoreItem {
	if obj == nil {
		return nil
	}
	return &innerFabricKeyValueStoreItem{*obj, nil}
}

type FabricKeyValueStoreTransactionSettings struct {
	SerializationBlockSize uint32
}
type innerFabricKeyValueStoreTransactionSettings struct {
	FabricKeyValueStoreTransactionSettings
	Reserved unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreTransactionSettings) toGoStruct() *FabricKeyValueStoreTransactionSettings {
	if obj == nil {
		return nil
	}
	return &obj.FabricKeyValueStoreTransactionSettings
}
func (obj *FabricKeyValueStoreTransactionSettings) toInnerStruct() *innerFabricKeyValueStoreTransactionSettings {
	if obj == nil {
		return nil
	}
	return &innerFabricKeyValueStoreTransactionSettings{*obj, nil}
}

type FabricKeyValueStoreRestoreSettings struct {
	InlineReopen bool
}
type innerFabricKeyValueStoreRestoreSettings struct {
	FabricKeyValueStoreRestoreSettings
	Reserved unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreRestoreSettings) toGoStruct() *FabricKeyValueStoreRestoreSettings {
	if obj == nil {
		return nil
	}
	return &obj.FabricKeyValueStoreRestoreSettings
}
func (obj *FabricKeyValueStoreRestoreSettings) toInnerStruct() *innerFabricKeyValueStoreRestoreSettings {
	if obj == nil {
		return nil
	}
	return &innerFabricKeyValueStoreRestoreSettings{*obj, nil}
}

type FabricKeyValueStoreRestoreSettingsEx1 struct {
	EnableLsnCheck bool
}
type innerFabricKeyValueStoreRestoreSettingsEx1 struct {
	FabricKeyValueStoreRestoreSettingsEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreRestoreSettingsEx1) toGoStruct() *FabricKeyValueStoreRestoreSettingsEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricKeyValueStoreRestoreSettingsEx1
}
func (obj *FabricKeyValueStoreRestoreSettingsEx1) toInnerStruct() *innerFabricKeyValueStoreRestoreSettingsEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricKeyValueStoreRestoreSettingsEx1{*obj, nil}
}

type FabricKeyValueStoreReplicaSettings struct {
	TransactionDrainTimeoutInSeconds uint32
	SecondaryNotificationMode        FabricKeyValueStoreNotificationMode
}
type innerFabricKeyValueStoreReplicaSettings struct {
	FabricKeyValueStoreReplicaSettings
	Reserved unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreReplicaSettings) toGoStruct() *FabricKeyValueStoreReplicaSettings {
	if obj == nil {
		return nil
	}
	return &obj.FabricKeyValueStoreReplicaSettings
}
func (obj *FabricKeyValueStoreReplicaSettings) toInnerStruct() *innerFabricKeyValueStoreReplicaSettings {
	if obj == nil {
		return nil
	}
	return &innerFabricKeyValueStoreReplicaSettings{*obj, nil}
}

type FabricKeyValueStoreReplicaSettingsEx1 struct {
	EnableCopyNotificationPrefetch bool
}
type innerFabricKeyValueStoreReplicaSettingsEx1 struct {
	FabricKeyValueStoreReplicaSettingsEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreReplicaSettingsEx1) toGoStruct() *FabricKeyValueStoreReplicaSettingsEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricKeyValueStoreReplicaSettingsEx1
}
func (obj *FabricKeyValueStoreReplicaSettingsEx1) toInnerStruct() *innerFabricKeyValueStoreReplicaSettingsEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricKeyValueStoreReplicaSettingsEx1{*obj, nil}
}

type FabricKeyValueStoreReplicaSettingsEx2 struct {
	FullCopyMode FabricKeyValueStoreFullCopyMode
}
type innerFabricKeyValueStoreReplicaSettingsEx2 struct {
	FabricKeyValueStoreReplicaSettingsEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreReplicaSettingsEx2) toGoStruct() *FabricKeyValueStoreReplicaSettingsEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricKeyValueStoreReplicaSettingsEx2
}
func (obj *FabricKeyValueStoreReplicaSettingsEx2) toInnerStruct() *innerFabricKeyValueStoreReplicaSettingsEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricKeyValueStoreReplicaSettingsEx2{*obj, nil}
}

type FabricKeyValueStoreReplicaSettingsEx3 struct {
	LogTruncationIntervalInMinutes int32
}
type innerFabricKeyValueStoreReplicaSettingsEx3 struct {
	FabricKeyValueStoreReplicaSettingsEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreReplicaSettingsEx3) toGoStruct() *FabricKeyValueStoreReplicaSettingsEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricKeyValueStoreReplicaSettingsEx3
}
func (obj *FabricKeyValueStoreReplicaSettingsEx3) toInnerStruct() *innerFabricKeyValueStoreReplicaSettingsEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricKeyValueStoreReplicaSettingsEx3{*obj, nil}
}

type FabricEseLocalStoreSettings struct {
	DbFolderPath                      string
	LogFileSizeInKB                   int32
	LogBufferSizeInKB                 int32
	MaxCursors                        int32
	MaxVerPages                       int32
	MaxAsyncCommitDelayInMilliseconds int32
}

func (obj *FabricEseLocalStoreSettings) toInnerStruct() *innerFabricEseLocalStoreSettings {
	if obj == nil {
		return nil
	}
	dst := innerFabricEseLocalStoreSettings{}
	s_136, _ := windows.UTF16PtrFromString(obj.DbFolderPath)
	dst.DbFolderPath = s_136

	dst.LogFileSizeInKB = obj.LogFileSizeInKB
	dst.LogBufferSizeInKB = obj.LogBufferSizeInKB
	dst.MaxCursors = obj.MaxCursors
	dst.MaxVerPages = obj.MaxVerPages
	dst.MaxAsyncCommitDelayInMilliseconds = obj.MaxAsyncCommitDelayInMilliseconds
	return &dst
}

type innerFabricEseLocalStoreSettings struct {
	DbFolderPath                      *uint16
	LogFileSizeInKB                   int32
	LogBufferSizeInKB                 int32
	MaxCursors                        int32
	MaxVerPages                       int32
	MaxAsyncCommitDelayInMilliseconds int32
	Reserved                          unsafe.Pointer
}

func (obj *innerFabricEseLocalStoreSettings) toGoStruct() *FabricEseLocalStoreSettings {
	if obj == nil {
		return nil
	}
	dst := FabricEseLocalStoreSettings{}
	dst.DbFolderPath = windows.UTF16PtrToString(obj.DbFolderPath)
	dst.LogFileSizeInKB = obj.LogFileSizeInKB
	dst.LogBufferSizeInKB = obj.LogBufferSizeInKB
	dst.MaxCursors = obj.MaxCursors
	dst.MaxVerPages = obj.MaxVerPages
	dst.MaxAsyncCommitDelayInMilliseconds = obj.MaxAsyncCommitDelayInMilliseconds
	return &dst
}

type FabricEseLocalStoreSettingsEx1 struct {
	EnableIncrementalBackup bool
}
type innerFabricEseLocalStoreSettingsEx1 struct {
	FabricEseLocalStoreSettingsEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricEseLocalStoreSettingsEx1) toGoStruct() *FabricEseLocalStoreSettingsEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricEseLocalStoreSettingsEx1
}
func (obj *FabricEseLocalStoreSettingsEx1) toInnerStruct() *innerFabricEseLocalStoreSettingsEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricEseLocalStoreSettingsEx1{*obj, nil}
}

type FabricEseLocalStoreSettingsEx2 struct {
	MaxCacheSizeInMB int32
}
type innerFabricEseLocalStoreSettingsEx2 struct {
	FabricEseLocalStoreSettingsEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricEseLocalStoreSettingsEx2) toGoStruct() *FabricEseLocalStoreSettingsEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricEseLocalStoreSettingsEx2
}
func (obj *FabricEseLocalStoreSettingsEx2) toInnerStruct() *innerFabricEseLocalStoreSettingsEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricEseLocalStoreSettingsEx2{*obj, nil}
}

type FabricEseLocalStoreSettingsEx3 struct {
	MaxDefragFrequencyInMinutes int32
	DefragThresholdInMB         int32
	DatabasePageSizeInKB        int32
}
type innerFabricEseLocalStoreSettingsEx3 struct {
	FabricEseLocalStoreSettingsEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricEseLocalStoreSettingsEx3) toGoStruct() *FabricEseLocalStoreSettingsEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricEseLocalStoreSettingsEx3
}
func (obj *FabricEseLocalStoreSettingsEx3) toInnerStruct() *innerFabricEseLocalStoreSettingsEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricEseLocalStoreSettingsEx3{*obj, nil}
}

type FabricEseLocalStoreSettingsEx4 struct {
	CompactionThresholdInMB int32
}
type innerFabricEseLocalStoreSettingsEx4 struct {
	FabricEseLocalStoreSettingsEx4
	Reserved unsafe.Pointer
}

func (obj *innerFabricEseLocalStoreSettingsEx4) toGoStruct() *FabricEseLocalStoreSettingsEx4 {
	if obj == nil {
		return nil
	}
	return &obj.FabricEseLocalStoreSettingsEx4
}
func (obj *FabricEseLocalStoreSettingsEx4) toInnerStruct() *innerFabricEseLocalStoreSettingsEx4 {
	if obj == nil {
		return nil
	}
	return &innerFabricEseLocalStoreSettingsEx4{*obj, nil}
}

type FabricEseLocalStoreSettingsEx5 struct {
	IntrinsicValueThresholdInBytes int32
}
type innerFabricEseLocalStoreSettingsEx5 struct {
	FabricEseLocalStoreSettingsEx5
	Reserved unsafe.Pointer
}

func (obj *innerFabricEseLocalStoreSettingsEx5) toGoStruct() *FabricEseLocalStoreSettingsEx5 {
	if obj == nil {
		return nil
	}
	return &obj.FabricEseLocalStoreSettingsEx5
}
func (obj *FabricEseLocalStoreSettingsEx5) toInnerStruct() *innerFabricEseLocalStoreSettingsEx5 {
	if obj == nil {
		return nil
	}
	return &innerFabricEseLocalStoreSettingsEx5{*obj, nil}
}

type FabricEseLocalStoreSettingsEx6 struct {
	EnableOverwriteOnUpdate bool
}
type innerFabricEseLocalStoreSettingsEx6 struct {
	FabricEseLocalStoreSettingsEx6
	Reserved unsafe.Pointer
}

func (obj *innerFabricEseLocalStoreSettingsEx6) toGoStruct() *FabricEseLocalStoreSettingsEx6 {
	if obj == nil {
		return nil
	}
	return &obj.FabricEseLocalStoreSettingsEx6
}
func (obj *FabricEseLocalStoreSettingsEx6) toInnerStruct() *innerFabricEseLocalStoreSettingsEx6 {
	if obj == nil {
		return nil
	}
	return &innerFabricEseLocalStoreSettingsEx6{*obj, nil}
}

type FabricNodeContext struct {
	NodeName        string
	NodeType        string
	IPAddressOrFQDN string
	NodeInstanceId  uint64
	NodeId          FabricNodeId
}

func (obj *FabricNodeContext) toInnerStruct() *innerFabricNodeContext {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeContext{}
	s_137, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_137

	s_138, _ := windows.UTF16PtrFromString(obj.NodeType)
	dst.NodeType = s_138

	s_139, _ := windows.UTF16PtrFromString(obj.IPAddressOrFQDN)
	dst.IPAddressOrFQDN = s_139

	dst.NodeInstanceId = obj.NodeInstanceId
	dst.NodeId = *obj.NodeId.toInnerStruct()
	return &dst
}

type innerFabricNodeContext struct {
	NodeName        *uint16
	NodeType        *uint16
	IPAddressOrFQDN *uint16
	NodeInstanceId  uint64
	NodeId          innerFabricNodeId
	Reserved        unsafe.Pointer
}

func (obj *innerFabricNodeContext) toGoStruct() *FabricNodeContext {
	if obj == nil {
		return nil
	}
	dst := FabricNodeContext{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.NodeType = windows.UTF16PtrToString(obj.NodeType)
	dst.IPAddressOrFQDN = windows.UTF16PtrToString(obj.IPAddressOrFQDN)
	dst.NodeInstanceId = obj.NodeInstanceId
	dst.NodeId = *obj.NodeId.toGoStruct()
	return &dst
}

type FabricClientSettings struct {
	PartitionLocationCacheLimit              uint32
	ServiceChangePollIntervalInSeconds       uint32
	ConnectionInitializationTimeoutInSeconds uint32
	KeepAliveIntervalInSeconds               uint32
	HealthOperationTimeoutInSeconds          uint32
	HealthReportSendIntervalInSeconds        uint32
}
type innerFabricClientSettings struct {
	FabricClientSettings
	Reserved unsafe.Pointer
}

func (obj *innerFabricClientSettings) toGoStruct() *FabricClientSettings {
	if obj == nil {
		return nil
	}
	return &obj.FabricClientSettings
}
func (obj *FabricClientSettings) toInnerStruct() *innerFabricClientSettings {
	if obj == nil {
		return nil
	}
	return &innerFabricClientSettings{*obj, nil}
}

type FabricClientSettingsEx1 struct {
	ClientFriendlyName                     string
	PartitionLocationCacheBucketCount      uint32
	HealthReportRetrySendIntervalInSeconds uint32
}

func (obj *FabricClientSettingsEx1) toInnerStruct() *innerFabricClientSettingsEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricClientSettingsEx1{}
	s_140, _ := windows.UTF16PtrFromString(obj.ClientFriendlyName)
	dst.ClientFriendlyName = s_140

	dst.PartitionLocationCacheBucketCount = obj.PartitionLocationCacheBucketCount
	dst.HealthReportRetrySendIntervalInSeconds = obj.HealthReportRetrySendIntervalInSeconds
	return &dst
}

type innerFabricClientSettingsEx1 struct {
	ClientFriendlyName                     *uint16
	PartitionLocationCacheBucketCount      uint32
	HealthReportRetrySendIntervalInSeconds uint32
	Reserved                               unsafe.Pointer
}

func (obj *innerFabricClientSettingsEx1) toGoStruct() *FabricClientSettingsEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricClientSettingsEx1{}
	dst.ClientFriendlyName = windows.UTF16PtrToString(obj.ClientFriendlyName)
	dst.PartitionLocationCacheBucketCount = obj.PartitionLocationCacheBucketCount
	dst.HealthReportRetrySendIntervalInSeconds = obj.HealthReportRetrySendIntervalInSeconds
	return &dst
}

type FabricClientSettingsEx2 struct {
	NotificationGatewayConnectionTimeoutInSeconds uint32
	NotificationCacheUpdateTimeoutInSeconds       uint32
}
type innerFabricClientSettingsEx2 struct {
	FabricClientSettingsEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricClientSettingsEx2) toGoStruct() *FabricClientSettingsEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricClientSettingsEx2
}
func (obj *FabricClientSettingsEx2) toInnerStruct() *innerFabricClientSettingsEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricClientSettingsEx2{*obj, nil}
}

type FabricClientSettingsEx3 struct {
	AuthTokenBufferSize uint32
}
type innerFabricClientSettingsEx3 struct {
	FabricClientSettingsEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricClientSettingsEx3) toGoStruct() *FabricClientSettingsEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricClientSettingsEx3
}
func (obj *FabricClientSettingsEx3) toInnerStruct() *innerFabricClientSettingsEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricClientSettingsEx3{*obj, nil}
}

type FabricClientSettingsEx4 struct {
	ConnectionIdleTimeoutInSeconds uint32
}
type innerFabricClientSettingsEx4 struct {
	FabricClientSettingsEx4
	Reserved unsafe.Pointer
}

func (obj *innerFabricClientSettingsEx4) toGoStruct() *FabricClientSettingsEx4 {
	if obj == nil {
		return nil
	}
	return &obj.FabricClientSettingsEx4
}
func (obj *FabricClientSettingsEx4) toInnerStruct() *innerFabricClientSettingsEx4 {
	if obj == nil {
		return nil
	}
	return &innerFabricClientSettingsEx4{*obj, nil}
}

type FabricQueryPagingDescription struct {
	ContinuationToken string
	MaxResults        int32
}

func (obj *FabricQueryPagingDescription) toInnerStruct() *innerFabricQueryPagingDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricQueryPagingDescription{}
	s_141, _ := windows.UTF16PtrFromString(obj.ContinuationToken)
	dst.ContinuationToken = s_141

	dst.MaxResults = obj.MaxResults
	return &dst
}

type innerFabricQueryPagingDescription struct {
	ContinuationToken *uint16
	MaxResults        int32
	Reserved          unsafe.Pointer
}

func (obj *innerFabricQueryPagingDescription) toGoStruct() *FabricQueryPagingDescription {
	if obj == nil {
		return nil
	}
	dst := FabricQueryPagingDescription{}
	dst.ContinuationToken = windows.UTF16PtrToString(obj.ContinuationToken)
	dst.MaxResults = obj.MaxResults
	return &dst
}

type FabricClusterManifestQueryDescription struct {
	ClusterManifestVersion string
}

func (obj *FabricClusterManifestQueryDescription) toInnerStruct() *innerFabricClusterManifestQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricClusterManifestQueryDescription{}
	s_142, _ := windows.UTF16PtrFromString(obj.ClusterManifestVersion)
	dst.ClusterManifestVersion = s_142

	return &dst
}

type innerFabricClusterManifestQueryDescription struct {
	ClusterManifestVersion *uint16
	Reserved               unsafe.Pointer
}

func (obj *innerFabricClusterManifestQueryDescription) toGoStruct() *FabricClusterManifestQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricClusterManifestQueryDescription{}
	dst.ClusterManifestVersion = windows.UTF16PtrToString(obj.ClusterManifestVersion)
	return &dst
}

type FabricNodeQueryDescription struct {
	NodeNameFilter string
}

func (obj *FabricNodeQueryDescription) toInnerStruct() *innerFabricNodeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeQueryDescription{}
	s_143, _ := windows.UTF16PtrFromString(obj.NodeNameFilter)
	dst.NodeNameFilter = s_143

	return &dst
}

type innerFabricNodeQueryDescription struct {
	NodeNameFilter *uint16
	Reserved       unsafe.Pointer
}

func (obj *innerFabricNodeQueryDescription) toGoStruct() *FabricNodeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricNodeQueryDescription{}
	dst.NodeNameFilter = windows.UTF16PtrToString(obj.NodeNameFilter)
	return &dst
}

type FabricNodeQueryResultItem struct {
	NodeName              string
	IpAddressOrFQDN       string
	NodeType              string
	CodeVersion           string
	ConfigVersion         string
	NodeStatus            FabricQueryNodeStatus
	NodeUpTimeInSeconds   int64
	AggregatedHealthState FabricHealthState
	IsSeedNode            bool
	UpgradeDomain         string
	FaultDomain           string
}

func (obj *FabricNodeQueryResultItem) toInnerStruct() *innerFabricNodeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeQueryResultItem{}
	s_144, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_144

	s_145, _ := windows.UTF16PtrFromString(obj.IpAddressOrFQDN)
	dst.IpAddressOrFQDN = s_145

	s_146, _ := windows.UTF16PtrFromString(obj.NodeType)
	dst.NodeType = s_146

	s_147, _ := windows.UTF16PtrFromString(obj.CodeVersion)
	dst.CodeVersion = s_147

	s_148, _ := windows.UTF16PtrFromString(obj.ConfigVersion)
	dst.ConfigVersion = s_148

	dst.NodeStatus = obj.NodeStatus
	dst.NodeUpTimeInSeconds = obj.NodeUpTimeInSeconds
	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.IsSeedNode = obj.IsSeedNode
	s_149, _ := windows.UTF16PtrFromString(obj.UpgradeDomain)
	dst.UpgradeDomain = s_149

	s_150, _ := windows.UTF16PtrFromString(obj.FaultDomain)
	dst.FaultDomain = s_150

	return &dst
}

type innerFabricNodeQueryResultItem struct {
	NodeName              *uint16
	IpAddressOrFQDN       *uint16
	NodeType              *uint16
	CodeVersion           *uint16
	ConfigVersion         *uint16
	NodeStatus            FabricQueryNodeStatus
	NodeUpTimeInSeconds   int64
	AggregatedHealthState FabricHealthState
	IsSeedNode            bool
	UpgradeDomain         *uint16
	FaultDomain           *uint16
	Reserved              unsafe.Pointer
}

func (obj *innerFabricNodeQueryResultItem) toGoStruct() *FabricNodeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricNodeQueryResultItem{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.IpAddressOrFQDN = windows.UTF16PtrToString(obj.IpAddressOrFQDN)
	dst.NodeType = windows.UTF16PtrToString(obj.NodeType)
	dst.CodeVersion = windows.UTF16PtrToString(obj.CodeVersion)
	dst.ConfigVersion = windows.UTF16PtrToString(obj.ConfigVersion)
	dst.NodeStatus = obj.NodeStatus
	dst.NodeUpTimeInSeconds = obj.NodeUpTimeInSeconds
	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.IsSeedNode = obj.IsSeedNode
	dst.UpgradeDomain = windows.UTF16PtrToString(obj.UpgradeDomain)
	dst.FaultDomain = windows.UTF16PtrToString(obj.FaultDomain)
	return &dst
}

type FabricNodeQueryResultItemEx1 struct {
	NodeId FabricNodeId
}
type innerFabricNodeQueryResultItemEx1 struct {
	FabricNodeQueryResultItemEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeQueryResultItemEx1) toGoStruct() *FabricNodeQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeQueryResultItemEx1
}
func (obj *FabricNodeQueryResultItemEx1) toInnerStruct() *innerFabricNodeQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeQueryResultItemEx1{*obj, nil}
}

type FabricNodeQueryResultItemEx2 struct {
	NodeInstanceId uint64
}
type innerFabricNodeQueryResultItemEx2 struct {
	FabricNodeQueryResultItemEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeQueryResultItemEx2) toGoStruct() *FabricNodeQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeQueryResultItemEx2
}
func (obj *FabricNodeQueryResultItemEx2) toInnerStruct() *innerFabricNodeQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeQueryResultItemEx2{*obj, nil}
}

type FabricNodeDeactivationTaskId struct {
	Id   string
	Type FabricNodeDeactivationTaskType
}

func (obj *FabricNodeDeactivationTaskId) toInnerStruct() *innerFabricNodeDeactivationTaskId {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeDeactivationTaskId{}
	s_151, _ := windows.UTF16PtrFromString(obj.Id)
	dst.Id = s_151

	dst.Type = obj.Type
	return &dst
}

type innerFabricNodeDeactivationTaskId struct {
	Id       *uint16
	Type     FabricNodeDeactivationTaskType
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeDeactivationTaskId) toGoStruct() *FabricNodeDeactivationTaskId {
	if obj == nil {
		return nil
	}
	dst := FabricNodeDeactivationTaskId{}
	dst.Id = windows.UTF16PtrToString(obj.Id)
	dst.Type = obj.Type
	return &dst
}

type FabricNodeDeactivationTask struct {
	TaskId *FabricNodeDeactivationTaskId
	Intent FabricNodeDeactivationIntent
}
type innerFabricNodeDeactivationTask struct {
	FabricNodeDeactivationTask
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeDeactivationTask) toGoStruct() *FabricNodeDeactivationTask {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeDeactivationTask
}
func (obj *FabricNodeDeactivationTask) toInnerStruct() *innerFabricNodeDeactivationTask {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeDeactivationTask{*obj, nil}
}

type innerFabricNodeDeactivationTaskList struct {
	Count uint32
	Items *innerFabricNodeDeactivationTask
}

func (obj *innerFabricNodeDeactivationTaskList) toGoStruct() []FabricNodeDeactivationTask {
	var dst []FabricNodeDeactivationTask
	{
		var innerlst []innerFabricNodeDeactivationTask
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeDeactivationTask

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricNodeDeactivationQueryResultItem struct {
	EffectiveIntent FabricNodeDeactivationIntent
	Status          FabricNodeDeactivationStatus
	Tasks           []FabricNodeDeactivationTask
}

func (obj *FabricNodeDeactivationQueryResultItem) toInnerStruct() *innerFabricNodeDeactivationQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeDeactivationQueryResultItem{}
	dst.EffectiveIntent = obj.EffectiveIntent
	dst.Status = obj.Status
	lst_152 := &innerFabricNodeDeactivationTaskList{}
	{

		var tmp []innerFabricNodeDeactivationTask

		for _, item := range obj.Tasks {
			var tmpitem innerFabricNodeDeactivationTask

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_152.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_152.Items = &tmp[0]
		}

	}
	dst.Tasks = lst_152
	return &dst
}

type innerFabricNodeDeactivationQueryResultItem struct {
	EffectiveIntent FabricNodeDeactivationIntent
	Status          FabricNodeDeactivationStatus
	Tasks           *innerFabricNodeDeactivationTaskList
	Reserved        unsafe.Pointer
}

func (obj *innerFabricNodeDeactivationQueryResultItem) toGoStruct() *FabricNodeDeactivationQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricNodeDeactivationQueryResultItem{}
	dst.EffectiveIntent = obj.EffectiveIntent
	dst.Status = obj.Status
	{
		var innerlst []innerFabricNodeDeactivationTask
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Tasks.Items), int(obj.Tasks.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeDeactivationTask

			tmpitem = *item.toGoStruct()

			dst.Tasks = append(dst.Tasks, tmpitem)
		}

	}
	return &dst
}

type FabricSafetyCheck struct {
	Kind  FabricSafetyCheckKind
	Value interface{}
}
type innerFabricSafetyCheck struct {
	FabricSafetyCheck
}

func (obj *innerFabricSafetyCheck) toGoStruct() *FabricSafetyCheck {
	if obj == nil {
		return nil
	}
	return &obj.FabricSafetyCheck
}
func (obj *FabricSafetyCheck) toInnerStruct() *innerFabricSafetyCheck {
	if obj == nil {
		return nil
	}
	return &innerFabricSafetyCheck{*obj}
}

type FabricPartitionSafetyCheck struct {
	PartitionId windows.GUID
}
type innerFabricPartitionSafetyCheck struct {
	FabricPartitionSafetyCheck
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionSafetyCheck) toGoStruct() *FabricPartitionSafetyCheck {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionSafetyCheck
}
func (obj *FabricPartitionSafetyCheck) toInnerStruct() *innerFabricPartitionSafetyCheck {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionSafetyCheck{*obj, nil}
}

type FabricSeedNodeSafetyCheck struct {
}
type innerFabricSeedNodeSafetyCheck struct {
	FabricSeedNodeSafetyCheck
	Reserved unsafe.Pointer
}

func (obj *innerFabricSeedNodeSafetyCheck) toGoStruct() *FabricSeedNodeSafetyCheck {
	if obj == nil {
		return nil
	}
	return &obj.FabricSeedNodeSafetyCheck
}
func (obj *FabricSeedNodeSafetyCheck) toInnerStruct() *innerFabricSeedNodeSafetyCheck {
	if obj == nil {
		return nil
	}
	return &innerFabricSeedNodeSafetyCheck{*obj, nil}
}

type innerFabricSafetyCheckList struct {
	Count uint32
	Items *innerFabricSafetyCheck
}

func (obj *innerFabricSafetyCheckList) toGoStruct() []FabricSafetyCheck {
	var dst []FabricSafetyCheck
	{
		var innerlst []innerFabricSafetyCheck
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricSafetyCheck

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricNodeDeactivationQueryResultItemEx1 struct {
	PendingSafetyChecks []FabricSafetyCheck
}

func (obj *FabricNodeDeactivationQueryResultItemEx1) toInnerStruct() *innerFabricNodeDeactivationQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeDeactivationQueryResultItemEx1{}
	lst_153 := &innerFabricSafetyCheckList{}
	{

		var tmp []innerFabricSafetyCheck

		for _, item := range obj.PendingSafetyChecks {
			var tmpitem innerFabricSafetyCheck

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_153.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_153.Items = &tmp[0]
		}

	}
	dst.PendingSafetyChecks = lst_153
	return &dst
}

type innerFabricNodeDeactivationQueryResultItemEx1 struct {
	PendingSafetyChecks *innerFabricSafetyCheckList
	Reserved            unsafe.Pointer
}

func (obj *innerFabricNodeDeactivationQueryResultItemEx1) toGoStruct() *FabricNodeDeactivationQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricNodeDeactivationQueryResultItemEx1{}
	{
		var innerlst []innerFabricSafetyCheck
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PendingSafetyChecks.Items), int(obj.PendingSafetyChecks.Count))

		for _, item := range innerlst {
			var tmpitem FabricSafetyCheck

			tmpitem = *item.toGoStruct()

			dst.PendingSafetyChecks = append(dst.PendingSafetyChecks, tmpitem)
		}

	}
	return &dst
}

type FabricNodeQueryResultItemEx3 struct {
	NodeDeactivationInfo *FabricNodeDeactivationQueryResultItem
}
type innerFabricNodeQueryResultItemEx3 struct {
	FabricNodeQueryResultItemEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeQueryResultItemEx3) toGoStruct() *FabricNodeQueryResultItemEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeQueryResultItemEx3
}
func (obj *FabricNodeQueryResultItemEx3) toInnerStruct() *innerFabricNodeQueryResultItemEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeQueryResultItemEx3{*obj, nil}
}

type FabricNodeQueryResultItemEx4 struct {
	IsStopped bool
}
type innerFabricNodeQueryResultItemEx4 struct {
	FabricNodeQueryResultItemEx4
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeQueryResultItemEx4) toGoStruct() *FabricNodeQueryResultItemEx4 {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeQueryResultItemEx4
}
func (obj *FabricNodeQueryResultItemEx4) toInnerStruct() *innerFabricNodeQueryResultItemEx4 {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeQueryResultItemEx4{*obj, nil}
}

type FabricNodeQueryResultItemEx5 struct {
	NodeDownTimeInSeconds int64
}
type innerFabricNodeQueryResultItemEx5 struct {
	FabricNodeQueryResultItemEx5
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeQueryResultItemEx5) toGoStruct() *FabricNodeQueryResultItemEx5 {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeQueryResultItemEx5
}
func (obj *FabricNodeQueryResultItemEx5) toInnerStruct() *innerFabricNodeQueryResultItemEx5 {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeQueryResultItemEx5{*obj, nil}
}

type FabricNodeQueryResultItemEx6 struct {
	NodeUpAt   time.Time
	NodeDownAt time.Time
}

func (obj *FabricNodeQueryResultItemEx6) toInnerStruct() *innerFabricNodeQueryResultItemEx6 {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeQueryResultItemEx6{}
	dst.NodeUpAt = windows.NsecToFiletime(obj.NodeUpAt.UnixNano())
	dst.NodeDownAt = windows.NsecToFiletime(obj.NodeDownAt.UnixNano())
	return &dst
}

type innerFabricNodeQueryResultItemEx6 struct {
	NodeUpAt   windows.Filetime
	NodeDownAt windows.Filetime
	Reserved   unsafe.Pointer
}

func (obj *innerFabricNodeQueryResultItemEx6) toGoStruct() *FabricNodeQueryResultItemEx6 {
	if obj == nil {
		return nil
	}
	dst := FabricNodeQueryResultItemEx6{}
	dst.NodeUpAt = time.Unix(0, obj.NodeUpAt.Nanoseconds())
	dst.NodeDownAt = time.Unix(0, obj.NodeDownAt.Nanoseconds())
	return &dst
}

type innerFabricNodeQueryResultList struct {
	Count uint32
	Items *innerFabricNodeQueryResultItem
}

func (obj *innerFabricNodeQueryResultList) toGoStruct() []FabricNodeQueryResultItem {
	var dst []FabricNodeQueryResultItem
	{
		var innerlst []innerFabricNodeQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricApplicationTypeQueryDescription struct {
	ApplicationTypeNameFilter string
}

func (obj *FabricApplicationTypeQueryDescription) toInnerStruct() *innerFabricApplicationTypeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationTypeQueryDescription{}
	s_154, _ := windows.UTF16PtrFromString(obj.ApplicationTypeNameFilter)
	dst.ApplicationTypeNameFilter = s_154

	return &dst
}

type innerFabricApplicationTypeQueryDescription struct {
	ApplicationTypeNameFilter *uint16
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricApplicationTypeQueryDescription) toGoStruct() *FabricApplicationTypeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationTypeQueryDescription{}
	dst.ApplicationTypeNameFilter = windows.UTF16PtrToString(obj.ApplicationTypeNameFilter)
	return &dst
}

type PagedFabricApplicationTypeQueryDescription struct {
	ApplicationTypeNameFilter    string
	MaxResults                   int32
	ContinuationToken            string
	ExcludeApplicationParameters bool
}

func (obj *PagedFabricApplicationTypeQueryDescription) toInnerStruct() *innerPagedFabricApplicationTypeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerPagedFabricApplicationTypeQueryDescription{}
	s_155, _ := windows.UTF16PtrFromString(obj.ApplicationTypeNameFilter)
	dst.ApplicationTypeNameFilter = s_155

	dst.MaxResults = obj.MaxResults
	s_156, _ := windows.UTF16PtrFromString(obj.ContinuationToken)
	dst.ContinuationToken = s_156

	dst.ExcludeApplicationParameters = obj.ExcludeApplicationParameters
	return &dst
}

type innerPagedFabricApplicationTypeQueryDescription struct {
	ApplicationTypeNameFilter    *uint16
	MaxResults                   int32
	ContinuationToken            *uint16
	ExcludeApplicationParameters bool
	Reserved                     unsafe.Pointer
}

func (obj *innerPagedFabricApplicationTypeQueryDescription) toGoStruct() *PagedFabricApplicationTypeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := PagedFabricApplicationTypeQueryDescription{}
	dst.ApplicationTypeNameFilter = windows.UTF16PtrToString(obj.ApplicationTypeNameFilter)
	dst.MaxResults = obj.MaxResults
	dst.ContinuationToken = windows.UTF16PtrToString(obj.ContinuationToken)
	dst.ExcludeApplicationParameters = obj.ExcludeApplicationParameters
	return &dst
}

type PagedFabricApplicationTypeQueryDescriptionEx1 struct {
	ApplicationTypeVersionFilter string
}

func (obj *PagedFabricApplicationTypeQueryDescriptionEx1) toInnerStruct() *innerPagedFabricApplicationTypeQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerPagedFabricApplicationTypeQueryDescriptionEx1{}
	s_157, _ := windows.UTF16PtrFromString(obj.ApplicationTypeVersionFilter)
	dst.ApplicationTypeVersionFilter = s_157

	return &dst
}

type innerPagedFabricApplicationTypeQueryDescriptionEx1 struct {
	ApplicationTypeVersionFilter *uint16
	Reserved                     unsafe.Pointer
}

func (obj *innerPagedFabricApplicationTypeQueryDescriptionEx1) toGoStruct() *PagedFabricApplicationTypeQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := PagedFabricApplicationTypeQueryDescriptionEx1{}
	dst.ApplicationTypeVersionFilter = windows.UTF16PtrToString(obj.ApplicationTypeVersionFilter)
	return &dst
}

type PagedFabricApplicationTypeQueryDescriptionEx2 struct {
	ApplicationTypeDefinitionKindFilter uint32
}
type innerPagedFabricApplicationTypeQueryDescriptionEx2 struct {
	PagedFabricApplicationTypeQueryDescriptionEx2
	Reserved unsafe.Pointer
}

func (obj *innerPagedFabricApplicationTypeQueryDescriptionEx2) toGoStruct() *PagedFabricApplicationTypeQueryDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &obj.PagedFabricApplicationTypeQueryDescriptionEx2
}
func (obj *PagedFabricApplicationTypeQueryDescriptionEx2) toInnerStruct() *innerPagedFabricApplicationTypeQueryDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &innerPagedFabricApplicationTypeQueryDescriptionEx2{*obj, nil}
}

type FabricApplicationTypeQueryResultItem struct {
	ApplicationTypeName    string
	ApplicationTypeVersion string
	DefaultParameters      []FabricApplicationParameter
}

func (obj *FabricApplicationTypeQueryResultItem) toInnerStruct() *innerFabricApplicationTypeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationTypeQueryResultItem{}
	s_158, _ := windows.UTF16PtrFromString(obj.ApplicationTypeName)
	dst.ApplicationTypeName = s_158

	s_159, _ := windows.UTF16PtrFromString(obj.ApplicationTypeVersion)
	dst.ApplicationTypeVersion = s_159

	lst_160 := &innerFabricApplicationParameterList{}
	{

		var tmp []innerFabricApplicationParameter

		for _, item := range obj.DefaultParameters {
			var tmpitem innerFabricApplicationParameter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_160.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_160.Items = &tmp[0]
		}

	}
	dst.DefaultParameters = lst_160
	return &dst
}

type innerFabricApplicationTypeQueryResultItem struct {
	ApplicationTypeName    *uint16
	ApplicationTypeVersion *uint16
	DefaultParameters      *innerFabricApplicationParameterList
	Reserved               unsafe.Pointer
}

func (obj *innerFabricApplicationTypeQueryResultItem) toGoStruct() *FabricApplicationTypeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationTypeQueryResultItem{}
	dst.ApplicationTypeName = windows.UTF16PtrToString(obj.ApplicationTypeName)
	dst.ApplicationTypeVersion = windows.UTF16PtrToString(obj.ApplicationTypeVersion)
	{
		var innerlst []innerFabricApplicationParameter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.DefaultParameters.Items), int(obj.DefaultParameters.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationParameter

			tmpitem = *item.toGoStruct()

			dst.DefaultParameters = append(dst.DefaultParameters, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationTypeQueryResultItemEx1 struct {
	Status        FabricApplicationTypeStatus
	StatusDetails string
}

func (obj *FabricApplicationTypeQueryResultItemEx1) toInnerStruct() *innerFabricApplicationTypeQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationTypeQueryResultItemEx1{}
	dst.Status = obj.Status
	s_161, _ := windows.UTF16PtrFromString(obj.StatusDetails)
	dst.StatusDetails = s_161

	return &dst
}

type innerFabricApplicationTypeQueryResultItemEx1 struct {
	Status        FabricApplicationTypeStatus
	StatusDetails *uint16
	Reserved      unsafe.Pointer
}

func (obj *innerFabricApplicationTypeQueryResultItemEx1) toGoStruct() *FabricApplicationTypeQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationTypeQueryResultItemEx1{}
	dst.Status = obj.Status
	dst.StatusDetails = windows.UTF16PtrToString(obj.StatusDetails)
	return &dst
}

type FabricApplicationTypeQueryResultItemEx2 struct {
	ApplicationTypeDefinitionKind FabricApplicationTypeDefinitionKind
}
type innerFabricApplicationTypeQueryResultItemEx2 struct {
	FabricApplicationTypeQueryResultItemEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricApplicationTypeQueryResultItemEx2) toGoStruct() *FabricApplicationTypeQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricApplicationTypeQueryResultItemEx2
}
func (obj *FabricApplicationTypeQueryResultItemEx2) toInnerStruct() *innerFabricApplicationTypeQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricApplicationTypeQueryResultItemEx2{*obj, nil}
}

type innerFabricApplicationTypeQueryResultList struct {
	Count uint32
	Items *innerFabricApplicationTypeQueryResultItem
}

func (obj *innerFabricApplicationTypeQueryResultList) toGoStruct() []FabricApplicationTypeQueryResultItem {
	var dst []FabricApplicationTypeQueryResultItem
	{
		var innerlst []innerFabricApplicationTypeQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationTypeQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServiceTypeQueryDescription struct {
	ApplicationTypeName    string
	ApplicationTypeVersion string
	ServiceTypeNameFilter  string
}

func (obj *FabricServiceTypeQueryDescription) toInnerStruct() *innerFabricServiceTypeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceTypeQueryDescription{}
	s_162, _ := windows.UTF16PtrFromString(obj.ApplicationTypeName)
	dst.ApplicationTypeName = s_162

	s_163, _ := windows.UTF16PtrFromString(obj.ApplicationTypeVersion)
	dst.ApplicationTypeVersion = s_163

	s_164, _ := windows.UTF16PtrFromString(obj.ServiceTypeNameFilter)
	dst.ServiceTypeNameFilter = s_164

	return &dst
}

type innerFabricServiceTypeQueryDescription struct {
	ApplicationTypeName    *uint16
	ApplicationTypeVersion *uint16
	ServiceTypeNameFilter  *uint16
	Reserved               unsafe.Pointer
}

func (obj *innerFabricServiceTypeQueryDescription) toGoStruct() *FabricServiceTypeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceTypeQueryDescription{}
	dst.ApplicationTypeName = windows.UTF16PtrToString(obj.ApplicationTypeName)
	dst.ApplicationTypeVersion = windows.UTF16PtrToString(obj.ApplicationTypeVersion)
	dst.ServiceTypeNameFilter = windows.UTF16PtrToString(obj.ServiceTypeNameFilter)
	return &dst
}

type FabricServiceGroupMemberTypeQueryDescription struct {
	ApplicationTypeName        string
	ApplicationTypeVersion     string
	ServiceGroupTypeNameFilter string
}

func (obj *FabricServiceGroupMemberTypeQueryDescription) toInnerStruct() *innerFabricServiceGroupMemberTypeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceGroupMemberTypeQueryDescription{}
	s_165, _ := windows.UTF16PtrFromString(obj.ApplicationTypeName)
	dst.ApplicationTypeName = s_165

	s_166, _ := windows.UTF16PtrFromString(obj.ApplicationTypeVersion)
	dst.ApplicationTypeVersion = s_166

	s_167, _ := windows.UTF16PtrFromString(obj.ServiceGroupTypeNameFilter)
	dst.ServiceGroupTypeNameFilter = s_167

	return &dst
}

type innerFabricServiceGroupMemberTypeQueryDescription struct {
	ApplicationTypeName        *uint16
	ApplicationTypeVersion     *uint16
	ServiceGroupTypeNameFilter *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricServiceGroupMemberTypeQueryDescription) toGoStruct() *FabricServiceGroupMemberTypeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceGroupMemberTypeQueryDescription{}
	dst.ApplicationTypeName = windows.UTF16PtrToString(obj.ApplicationTypeName)
	dst.ApplicationTypeVersion = windows.UTF16PtrToString(obj.ApplicationTypeVersion)
	dst.ServiceGroupTypeNameFilter = windows.UTF16PtrToString(obj.ServiceGroupTypeNameFilter)
	return &dst
}

type FabricServiceTypeQueryResultItem struct {
	ServiceTypeDescription *FabricServiceTypeDescription
	ServiceManifestVersion string
}

func (obj *FabricServiceTypeQueryResultItem) toInnerStruct() *innerFabricServiceTypeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceTypeQueryResultItem{}
	dst.ServiceTypeDescription = obj.ServiceTypeDescription.toInnerStruct()
	s_168, _ := windows.UTF16PtrFromString(obj.ServiceManifestVersion)
	dst.ServiceManifestVersion = s_168

	return &dst
}

type innerFabricServiceTypeQueryResultItem struct {
	ServiceTypeDescription *innerFabricServiceTypeDescription
	ServiceManifestVersion *uint16
	Reserved               unsafe.Pointer
}

func (obj *innerFabricServiceTypeQueryResultItem) toGoStruct() *FabricServiceTypeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricServiceTypeQueryResultItem{}
	dst.ServiceTypeDescription = obj.ServiceTypeDescription.toGoStruct()
	dst.ServiceManifestVersion = windows.UTF16PtrToString(obj.ServiceManifestVersion)
	return &dst
}

type FabricServiceTypeQueryResultItemEx1 struct {
	ServiceManifestName string
}

func (obj *FabricServiceTypeQueryResultItemEx1) toInnerStruct() *innerFabricServiceTypeQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceTypeQueryResultItemEx1{}
	s_169, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_169

	return &dst
}

type innerFabricServiceTypeQueryResultItemEx1 struct {
	ServiceManifestName *uint16
	Reserved            unsafe.Pointer
}

func (obj *innerFabricServiceTypeQueryResultItemEx1) toGoStruct() *FabricServiceTypeQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricServiceTypeQueryResultItemEx1{}
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	return &dst
}

type FabricServiceTypeQueryResultItemEx2 struct {
	IsServiceGroup bool
}
type innerFabricServiceTypeQueryResultItemEx2 struct {
	FabricServiceTypeQueryResultItemEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceTypeQueryResultItemEx2) toGoStruct() *FabricServiceTypeQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceTypeQueryResultItemEx2
}
func (obj *FabricServiceTypeQueryResultItemEx2) toInnerStruct() *innerFabricServiceTypeQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceTypeQueryResultItemEx2{*obj, nil}
}

type innerFabricServiceTypeQueryResultList struct {
	Count uint32
	Items *innerFabricServiceTypeQueryResultItem
}

func (obj *innerFabricServiceTypeQueryResultList) toGoStruct() []FabricServiceTypeQueryResultItem {
	var dst []FabricServiceTypeQueryResultItem
	{
		var innerlst []innerFabricServiceTypeQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceTypeQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServiceGroupMemberTypeQueryResultItem struct {
	ServiceGroupMemberTypeDescription []FabricServiceGroupTypeMemberDescription
	ServiceManifestVersion            string
	ServiceManifestName               string
}

func (obj *FabricServiceGroupMemberTypeQueryResultItem) toInnerStruct() *innerFabricServiceGroupMemberTypeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceGroupMemberTypeQueryResultItem{}
	lst_170 := &innerFabricServiceGroupTypeMemberDescriptionList{}
	{

		var tmp []innerFabricServiceGroupTypeMemberDescription

		for _, item := range obj.ServiceGroupMemberTypeDescription {
			var tmpitem innerFabricServiceGroupTypeMemberDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_170.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_170.Items = &tmp[0]
		}

	}
	dst.ServiceGroupMemberTypeDescription = lst_170
	s_171, _ := windows.UTF16PtrFromString(obj.ServiceManifestVersion)
	dst.ServiceManifestVersion = s_171

	s_172, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_172

	return &dst
}

type innerFabricServiceGroupMemberTypeQueryResultItem struct {
	ServiceGroupMemberTypeDescription *innerFabricServiceGroupTypeMemberDescriptionList
	ServiceManifestVersion            *uint16
	ServiceManifestName               *uint16
	Reserved                          unsafe.Pointer
}

func (obj *innerFabricServiceGroupMemberTypeQueryResultItem) toGoStruct() *FabricServiceGroupMemberTypeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricServiceGroupMemberTypeQueryResultItem{}
	{
		var innerlst []innerFabricServiceGroupTypeMemberDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ServiceGroupMemberTypeDescription.Items), int(obj.ServiceGroupMemberTypeDescription.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceGroupTypeMemberDescription

			tmpitem = *item.toGoStruct()

			dst.ServiceGroupMemberTypeDescription = append(dst.ServiceGroupMemberTypeDescription, tmpitem)
		}

	}
	dst.ServiceManifestVersion = windows.UTF16PtrToString(obj.ServiceManifestVersion)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	return &dst
}

type innerFabricServiceGroupMemberTypeQueryResultList struct {
	Count uint32
	Items *innerFabricServiceGroupMemberTypeQueryResultItem
}

func (obj *innerFabricServiceGroupMemberTypeQueryResultList) toGoStruct() []FabricServiceGroupMemberTypeQueryResultItem {
	var dst []FabricServiceGroupMemberTypeQueryResultItem
	{
		var innerlst []innerFabricServiceGroupMemberTypeQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceGroupMemberTypeQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricApplicationQueryDescription struct {
	ApplicationNameFilter string
}

func (obj *FabricApplicationQueryDescription) toInnerStruct() *innerFabricApplicationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationQueryDescription{}
	s_173, _ := windows.UTF16PtrFromString(obj.ApplicationNameFilter)
	dst.ApplicationNameFilter = s_173

	return &dst
}

type innerFabricApplicationQueryDescription struct {
	ApplicationNameFilter *uint16
	Reserved              unsafe.Pointer
}

func (obj *innerFabricApplicationQueryDescription) toGoStruct() *FabricApplicationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationQueryDescription{}
	dst.ApplicationNameFilter = windows.UTF16PtrToString(obj.ApplicationNameFilter)
	return &dst
}

type FabricApplicationQueryDescriptionEx1 struct {
	ContinuationToken string
}

func (obj *FabricApplicationQueryDescriptionEx1) toInnerStruct() *innerFabricApplicationQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationQueryDescriptionEx1{}
	s_174, _ := windows.UTF16PtrFromString(obj.ContinuationToken)
	dst.ContinuationToken = s_174

	return &dst
}

type innerFabricApplicationQueryDescriptionEx1 struct {
	ContinuationToken *uint16
	Reserved          unsafe.Pointer
}

func (obj *innerFabricApplicationQueryDescriptionEx1) toGoStruct() *FabricApplicationQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationQueryDescriptionEx1{}
	dst.ContinuationToken = windows.UTF16PtrToString(obj.ContinuationToken)
	return &dst
}

type FabricApplicationQueryDescriptionEx2 struct {
	ApplicationTypeNameFilter    string
	ExcludeApplicationParameters bool
}

func (obj *FabricApplicationQueryDescriptionEx2) toInnerStruct() *innerFabricApplicationQueryDescriptionEx2 {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationQueryDescriptionEx2{}
	s_175, _ := windows.UTF16PtrFromString(obj.ApplicationTypeNameFilter)
	dst.ApplicationTypeNameFilter = s_175

	dst.ExcludeApplicationParameters = obj.ExcludeApplicationParameters
	return &dst
}

type innerFabricApplicationQueryDescriptionEx2 struct {
	ApplicationTypeNameFilter    *uint16
	ExcludeApplicationParameters bool
	Reserved                     unsafe.Pointer
}

func (obj *innerFabricApplicationQueryDescriptionEx2) toGoStruct() *FabricApplicationQueryDescriptionEx2 {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationQueryDescriptionEx2{}
	dst.ApplicationTypeNameFilter = windows.UTF16PtrToString(obj.ApplicationTypeNameFilter)
	dst.ExcludeApplicationParameters = obj.ExcludeApplicationParameters
	return &dst
}

type FabricApplicationQueryDescriptionEx3 struct {
	ApplicationDefinitionKindFilter uint32
}
type innerFabricApplicationQueryDescriptionEx3 struct {
	FabricApplicationQueryDescriptionEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricApplicationQueryDescriptionEx3) toGoStruct() *FabricApplicationQueryDescriptionEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricApplicationQueryDescriptionEx3
}
func (obj *FabricApplicationQueryDescriptionEx3) toInnerStruct() *innerFabricApplicationQueryDescriptionEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricApplicationQueryDescriptionEx3{*obj, nil}
}

type FabricApplicationQueryDescriptionEx4 struct {
	MaxResults int32
}
type innerFabricApplicationQueryDescriptionEx4 struct {
	FabricApplicationQueryDescriptionEx4
	Reserved unsafe.Pointer
}

func (obj *innerFabricApplicationQueryDescriptionEx4) toGoStruct() *FabricApplicationQueryDescriptionEx4 {
	if obj == nil {
		return nil
	}
	return &obj.FabricApplicationQueryDescriptionEx4
}
func (obj *FabricApplicationQueryDescriptionEx4) toInnerStruct() *innerFabricApplicationQueryDescriptionEx4 {
	if obj == nil {
		return nil
	}
	return &innerFabricApplicationQueryDescriptionEx4{*obj, nil}
}

type FabricApplicationQueryResultItem struct {
	ApplicationName        string
	ApplicationTypeName    string
	ApplicationTypeVersion string
	Status                 FabricApplicationStatus
	HealthState            FabricHealthState
	ApplicationParameters  []FabricApplicationParameter
}

func (obj *FabricApplicationQueryResultItem) toInnerStruct() *innerFabricApplicationQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationQueryResultItem{}
	s_176, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_176

	s_177, _ := windows.UTF16PtrFromString(obj.ApplicationTypeName)
	dst.ApplicationTypeName = s_177

	s_178, _ := windows.UTF16PtrFromString(obj.ApplicationTypeVersion)
	dst.ApplicationTypeVersion = s_178

	dst.Status = obj.Status
	dst.HealthState = obj.HealthState
	lst_179 := &innerFabricApplicationParameterList{}
	{

		var tmp []innerFabricApplicationParameter

		for _, item := range obj.ApplicationParameters {
			var tmpitem innerFabricApplicationParameter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_179.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_179.Items = &tmp[0]
		}

	}
	dst.ApplicationParameters = lst_179
	return &dst
}

type innerFabricApplicationQueryResultItem struct {
	ApplicationName        *uint16
	ApplicationTypeName    *uint16
	ApplicationTypeVersion *uint16
	Status                 FabricApplicationStatus
	HealthState            FabricHealthState
	ApplicationParameters  *innerFabricApplicationParameterList
	Reserved               unsafe.Pointer
}

func (obj *innerFabricApplicationQueryResultItem) toGoStruct() *FabricApplicationQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationQueryResultItem{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ApplicationTypeName = windows.UTF16PtrToString(obj.ApplicationTypeName)
	dst.ApplicationTypeVersion = windows.UTF16PtrToString(obj.ApplicationTypeVersion)
	dst.Status = obj.Status
	dst.HealthState = obj.HealthState
	{
		var innerlst []innerFabricApplicationParameter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationParameters.Items), int(obj.ApplicationParameters.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationParameter

			tmpitem = *item.toGoStruct()

			dst.ApplicationParameters = append(dst.ApplicationParameters, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationQueryResultItemEx1 struct {
	UpgradeTypeVersion string
	UpgradeParameters  []FabricApplicationParameter
}

func (obj *FabricApplicationQueryResultItemEx1) toInnerStruct() *innerFabricApplicationQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationQueryResultItemEx1{}
	s_180, _ := windows.UTF16PtrFromString(obj.UpgradeTypeVersion)
	dst.UpgradeTypeVersion = s_180

	lst_181 := &innerFabricApplicationParameterList{}
	{

		var tmp []innerFabricApplicationParameter

		for _, item := range obj.UpgradeParameters {
			var tmpitem innerFabricApplicationParameter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_181.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_181.Items = &tmp[0]
		}

	}
	dst.UpgradeParameters = lst_181
	return &dst
}

type innerFabricApplicationQueryResultItemEx1 struct {
	UpgradeTypeVersion *uint16
	UpgradeParameters  *innerFabricApplicationParameterList
	Reserved           unsafe.Pointer
}

func (obj *innerFabricApplicationQueryResultItemEx1) toGoStruct() *FabricApplicationQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationQueryResultItemEx1{}
	dst.UpgradeTypeVersion = windows.UTF16PtrToString(obj.UpgradeTypeVersion)
	{
		var innerlst []innerFabricApplicationParameter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UpgradeParameters.Items), int(obj.UpgradeParameters.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationParameter

			tmpitem = *item.toGoStruct()

			dst.UpgradeParameters = append(dst.UpgradeParameters, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationQueryResultItemEx2 struct {
	ApplicationDefinitionKind FabricApplicationDefinitionKind
}
type innerFabricApplicationQueryResultItemEx2 struct {
	FabricApplicationQueryResultItemEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricApplicationQueryResultItemEx2) toGoStruct() *FabricApplicationQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricApplicationQueryResultItemEx2
}
func (obj *FabricApplicationQueryResultItemEx2) toInnerStruct() *innerFabricApplicationQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricApplicationQueryResultItemEx2{*obj, nil}
}

type innerFabricApplicationQueryResultList struct {
	Count uint32
	Items *innerFabricApplicationQueryResultItem
}

func (obj *innerFabricApplicationQueryResultList) toGoStruct() []FabricApplicationQueryResultItem {
	var dst []FabricApplicationQueryResultItem
	{
		var innerlst []innerFabricApplicationQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServiceQueryDescription struct {
	ApplicationName   string
	ServiceNameFilter string
}

func (obj *FabricServiceQueryDescription) toInnerStruct() *innerFabricServiceQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceQueryDescription{}
	s_182, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_182

	s_183, _ := windows.UTF16PtrFromString(obj.ServiceNameFilter)
	dst.ServiceNameFilter = s_183

	return &dst
}

type innerFabricServiceQueryDescription struct {
	ApplicationName   *uint16
	ServiceNameFilter *uint16
	Reserved          unsafe.Pointer
}

func (obj *innerFabricServiceQueryDescription) toGoStruct() *FabricServiceQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceQueryDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceNameFilter = windows.UTF16PtrToString(obj.ServiceNameFilter)
	return &dst
}

type FabricServiceQueryDescriptionEx1 struct {
	ContinuationToken string
}

func (obj *FabricServiceQueryDescriptionEx1) toInnerStruct() *innerFabricServiceQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceQueryDescriptionEx1{}
	s_184, _ := windows.UTF16PtrFromString(obj.ContinuationToken)
	dst.ContinuationToken = s_184

	return &dst
}

type innerFabricServiceQueryDescriptionEx1 struct {
	ContinuationToken *uint16
	Reserved          unsafe.Pointer
}

func (obj *innerFabricServiceQueryDescriptionEx1) toGoStruct() *FabricServiceQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricServiceQueryDescriptionEx1{}
	dst.ContinuationToken = windows.UTF16PtrToString(obj.ContinuationToken)
	return &dst
}

type FabricServiceQueryDescriptionEx2 struct {
	ServiceTypeNameFilter string
}

func (obj *FabricServiceQueryDescriptionEx2) toInnerStruct() *innerFabricServiceQueryDescriptionEx2 {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceQueryDescriptionEx2{}
	s_185, _ := windows.UTF16PtrFromString(obj.ServiceTypeNameFilter)
	dst.ServiceTypeNameFilter = s_185

	return &dst
}

type innerFabricServiceQueryDescriptionEx2 struct {
	ServiceTypeNameFilter *uint16
	Reserved              unsafe.Pointer
}

func (obj *innerFabricServiceQueryDescriptionEx2) toGoStruct() *FabricServiceQueryDescriptionEx2 {
	if obj == nil {
		return nil
	}
	dst := FabricServiceQueryDescriptionEx2{}
	dst.ServiceTypeNameFilter = windows.UTF16PtrToString(obj.ServiceTypeNameFilter)
	return &dst
}

type FabricServiceQueryDescriptionEx3 struct {
	MaxResults int32
}
type innerFabricServiceQueryDescriptionEx3 struct {
	FabricServiceQueryDescriptionEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceQueryDescriptionEx3) toGoStruct() *FabricServiceQueryDescriptionEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceQueryDescriptionEx3
}
func (obj *FabricServiceQueryDescriptionEx3) toInnerStruct() *innerFabricServiceQueryDescriptionEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceQueryDescriptionEx3{*obj, nil}
}

type FabricSystemServiceQueryDescription struct {
	SystemServiceNameFilter string
}

func (obj *FabricSystemServiceQueryDescription) toInnerStruct() *innerFabricSystemServiceQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricSystemServiceQueryDescription{}
	s_186, _ := windows.UTF16PtrFromString(obj.SystemServiceNameFilter)
	dst.SystemServiceNameFilter = s_186

	return &dst
}

type innerFabricSystemServiceQueryDescription struct {
	SystemServiceNameFilter *uint16
	Reserved                unsafe.Pointer
}

func (obj *innerFabricSystemServiceQueryDescription) toGoStruct() *FabricSystemServiceQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricSystemServiceQueryDescription{}
	dst.SystemServiceNameFilter = windows.UTF16PtrToString(obj.SystemServiceNameFilter)
	return &dst
}

type FabricServiceQueryResultItem struct {
	Kind  FabricServiceKind
	Value interface{}
}
type innerFabricServiceQueryResultItem struct {
	FabricServiceQueryResultItem
}

func (obj *innerFabricServiceQueryResultItem) toGoStruct() *FabricServiceQueryResultItem {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceQueryResultItem
}
func (obj *FabricServiceQueryResultItem) toInnerStruct() *innerFabricServiceQueryResultItem {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceQueryResultItem{*obj}
}

type innerFabricServiceQueryResultList struct {
	Count uint32
	Items *innerFabricServiceQueryResultItem
}

func (obj *innerFabricServiceQueryResultList) toGoStruct() []FabricServiceQueryResultItem {
	var dst []FabricServiceQueryResultItem
	{
		var innerlst []innerFabricServiceQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricStatelessServiceQueryResultItem struct {
	ServiceName            string
	ServiceTypeName        string
	ServiceManifestVersion string
	HealthState            FabricHealthState
}

func (obj *FabricStatelessServiceQueryResultItem) toInnerStruct() *innerFabricStatelessServiceQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceQueryResultItem{}
	s_187, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_187

	s_188, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_188

	s_189, _ := windows.UTF16PtrFromString(obj.ServiceManifestVersion)
	dst.ServiceManifestVersion = s_189

	dst.HealthState = obj.HealthState
	return &dst
}

type innerFabricStatelessServiceQueryResultItem struct {
	ServiceName            *uint16
	ServiceTypeName        *uint16
	ServiceManifestVersion *uint16
	HealthState            FabricHealthState
	Reserved               unsafe.Pointer
}

func (obj *innerFabricStatelessServiceQueryResultItem) toGoStruct() *FabricStatelessServiceQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceQueryResultItem{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	dst.ServiceManifestVersion = windows.UTF16PtrToString(obj.ServiceManifestVersion)
	dst.HealthState = obj.HealthState
	return &dst
}

type FabricStatelessServiceQueryResultItemEx1 struct {
	ServiceStatus FabricQueryServiceStatus
}
type innerFabricStatelessServiceQueryResultItemEx1 struct {
	FabricStatelessServiceQueryResultItemEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatelessServiceQueryResultItemEx1) toGoStruct() *FabricStatelessServiceQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatelessServiceQueryResultItemEx1
}
func (obj *FabricStatelessServiceQueryResultItemEx1) toInnerStruct() *innerFabricStatelessServiceQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatelessServiceQueryResultItemEx1{*obj, nil}
}

type FabricStatelessServiceQueryResultItemEx2 struct {
	IsServiceGroup bool
}
type innerFabricStatelessServiceQueryResultItemEx2 struct {
	FabricStatelessServiceQueryResultItemEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatelessServiceQueryResultItemEx2) toGoStruct() *FabricStatelessServiceQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatelessServiceQueryResultItemEx2
}
func (obj *FabricStatelessServiceQueryResultItemEx2) toInnerStruct() *innerFabricStatelessServiceQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatelessServiceQueryResultItemEx2{*obj, nil}
}

type FabricStatefulServiceQueryResultItem struct {
	ServiceName            string
	ServiceTypeName        string
	ServiceManifestVersion string
	HasPersistedState      bool
	HealthState            FabricHealthState
}

func (obj *FabricStatefulServiceQueryResultItem) toInnerStruct() *innerFabricStatefulServiceQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceQueryResultItem{}
	s_190, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_190

	s_191, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_191

	s_192, _ := windows.UTF16PtrFromString(obj.ServiceManifestVersion)
	dst.ServiceManifestVersion = s_192

	dst.HasPersistedState = obj.HasPersistedState
	dst.HealthState = obj.HealthState
	return &dst
}

type innerFabricStatefulServiceQueryResultItem struct {
	ServiceName            *uint16
	ServiceTypeName        *uint16
	ServiceManifestVersion *uint16
	HasPersistedState      bool
	HealthState            FabricHealthState
	Reserved               unsafe.Pointer
}

func (obj *innerFabricStatefulServiceQueryResultItem) toGoStruct() *FabricStatefulServiceQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceQueryResultItem{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	dst.ServiceManifestVersion = windows.UTF16PtrToString(obj.ServiceManifestVersion)
	dst.HasPersistedState = obj.HasPersistedState
	dst.HealthState = obj.HealthState
	return &dst
}

type FabricStatefulServiceQueryResultItemEx1 struct {
	ServiceStatus FabricQueryServiceStatus
}
type innerFabricStatefulServiceQueryResultItemEx1 struct {
	FabricStatefulServiceQueryResultItemEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceQueryResultItemEx1) toGoStruct() *FabricStatefulServiceQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceQueryResultItemEx1
}
func (obj *FabricStatefulServiceQueryResultItemEx1) toInnerStruct() *innerFabricStatefulServiceQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceQueryResultItemEx1{*obj, nil}
}

type FabricStatefulServiceQueryResultItemEx2 struct {
	IsServiceGroup bool
}
type innerFabricStatefulServiceQueryResultItemEx2 struct {
	FabricStatefulServiceQueryResultItemEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceQueryResultItemEx2) toGoStruct() *FabricStatefulServiceQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceQueryResultItemEx2
}
func (obj *FabricStatefulServiceQueryResultItemEx2) toInnerStruct() *innerFabricStatefulServiceQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceQueryResultItemEx2{*obj, nil}
}

type FabricServiceGroupMemberQueryDescription struct {
	ApplicationName   string
	ServiceNameFilter string
}

func (obj *FabricServiceGroupMemberQueryDescription) toInnerStruct() *innerFabricServiceGroupMemberQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceGroupMemberQueryDescription{}
	s_193, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_193

	s_194, _ := windows.UTF16PtrFromString(obj.ServiceNameFilter)
	dst.ServiceNameFilter = s_194

	return &dst
}

type innerFabricServiceGroupMemberQueryDescription struct {
	ApplicationName   *uint16
	ServiceNameFilter *uint16
	Reserved          unsafe.Pointer
}

func (obj *innerFabricServiceGroupMemberQueryDescription) toGoStruct() *FabricServiceGroupMemberQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceGroupMemberQueryDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceNameFilter = windows.UTF16PtrToString(obj.ServiceNameFilter)
	return &dst
}

type FabricServiceGroupMemberMemberQueryResultItem struct {
	ServiceType string
	ServiceName string
}

func (obj *FabricServiceGroupMemberMemberQueryResultItem) toInnerStruct() *innerFabricServiceGroupMemberMemberQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceGroupMemberMemberQueryResultItem{}
	s_195, _ := windows.UTF16PtrFromString(obj.ServiceType)
	dst.ServiceType = s_195

	s_196, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_196

	return &dst
}

type innerFabricServiceGroupMemberMemberQueryResultItem struct {
	ServiceType *uint16
	ServiceName *uint16
	Reserved    unsafe.Pointer
}

func (obj *innerFabricServiceGroupMemberMemberQueryResultItem) toGoStruct() *FabricServiceGroupMemberMemberQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricServiceGroupMemberMemberQueryResultItem{}
	dst.ServiceType = windows.UTF16PtrToString(obj.ServiceType)
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	return &dst
}

type innerFabricServiceGroupMemberMemberQueryResultList struct {
	Count uint32
	Items *innerFabricServiceGroupMemberMemberQueryResultItem
}

func (obj *innerFabricServiceGroupMemberMemberQueryResultList) toGoStruct() []FabricServiceGroupMemberMemberQueryResultItem {
	var dst []FabricServiceGroupMemberMemberQueryResultItem
	{
		var innerlst []innerFabricServiceGroupMemberMemberQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceGroupMemberMemberQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServiceGroupMemberQueryResultItem struct {
	ServiceName string
	Members     []FabricServiceGroupMemberMemberQueryResultItem
}

func (obj *FabricServiceGroupMemberQueryResultItem) toInnerStruct() *innerFabricServiceGroupMemberQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceGroupMemberQueryResultItem{}
	s_197, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_197

	lst_198 := &innerFabricServiceGroupMemberMemberQueryResultList{}
	{

		var tmp []innerFabricServiceGroupMemberMemberQueryResultItem

		for _, item := range obj.Members {
			var tmpitem innerFabricServiceGroupMemberMemberQueryResultItem

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_198.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_198.Items = &tmp[0]
		}

	}
	dst.Members = lst_198
	return &dst
}

type innerFabricServiceGroupMemberQueryResultItem struct {
	ServiceName *uint16
	Members     *innerFabricServiceGroupMemberMemberQueryResultList
	Reserved    unsafe.Pointer
}

func (obj *innerFabricServiceGroupMemberQueryResultItem) toGoStruct() *FabricServiceGroupMemberQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricServiceGroupMemberQueryResultItem{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	{
		var innerlst []innerFabricServiceGroupMemberMemberQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Members.Items), int(obj.Members.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceGroupMemberMemberQueryResultItem

			tmpitem = *item.toGoStruct()

			dst.Members = append(dst.Members, tmpitem)
		}

	}
	return &dst
}

type innerFabricServiceGroupMemberQueryResultList struct {
	Count uint32
	Items *innerFabricServiceGroupMemberQueryResultItem
}

func (obj *innerFabricServiceGroupMemberQueryResultList) toGoStruct() []FabricServiceGroupMemberQueryResultItem {
	var dst []FabricServiceGroupMemberQueryResultItem
	{
		var innerlst []innerFabricServiceGroupMemberQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceGroupMemberQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricPartitionLoadInformationQueryDescription struct {
	PartitionId windows.GUID
}
type innerFabricPartitionLoadInformationQueryDescription struct {
	FabricPartitionLoadInformationQueryDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionLoadInformationQueryDescription) toGoStruct() *FabricPartitionLoadInformationQueryDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionLoadInformationQueryDescription
}
func (obj *FabricPartitionLoadInformationQueryDescription) toInnerStruct() *innerFabricPartitionLoadInformationQueryDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionLoadInformationQueryDescription{*obj, nil}
}

type FabricReplicaLoadInformationQueryDescription struct {
	PartitionId         windows.GUID
	ReplicaOrInstanceId int64
}
type innerFabricReplicaLoadInformationQueryDescription struct {
	FabricReplicaLoadInformationQueryDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicaLoadInformationQueryDescription) toGoStruct() *FabricReplicaLoadInformationQueryDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicaLoadInformationQueryDescription
}
func (obj *FabricReplicaLoadInformationQueryDescription) toInnerStruct() *innerFabricReplicaLoadInformationQueryDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicaLoadInformationQueryDescription{*obj, nil}
}

type FabricUnplacedReplicaInformationQueryDescription struct {
	ServiceName        string
	PartitionId        windows.GUID
	OnlyQueryPrimaries bool
}

func (obj *FabricUnplacedReplicaInformationQueryDescription) toInnerStruct() *innerFabricUnplacedReplicaInformationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricUnplacedReplicaInformationQueryDescription{}
	s_199, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_199

	dst.PartitionId = obj.PartitionId
	dst.OnlyQueryPrimaries = obj.OnlyQueryPrimaries
	return &dst
}

type innerFabricUnplacedReplicaInformationQueryDescription struct {
	ServiceName        *uint16
	PartitionId        windows.GUID
	OnlyQueryPrimaries bool
	Reserved           unsafe.Pointer
}

func (obj *innerFabricUnplacedReplicaInformationQueryDescription) toGoStruct() *FabricUnplacedReplicaInformationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricUnplacedReplicaInformationQueryDescription{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionId = obj.PartitionId
	dst.OnlyQueryPrimaries = obj.OnlyQueryPrimaries
	return &dst
}

type FabricServicePartitionQueryDescription struct {
	ServiceName       string
	PartitionIdFilter windows.GUID
}

func (obj *FabricServicePartitionQueryDescription) toInnerStruct() *innerFabricServicePartitionQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServicePartitionQueryDescription{}
	s_200, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_200

	dst.PartitionIdFilter = obj.PartitionIdFilter
	return &dst
}

type innerFabricServicePartitionQueryDescription struct {
	ServiceName       *uint16
	PartitionIdFilter windows.GUID
	Reserved          unsafe.Pointer
}

func (obj *innerFabricServicePartitionQueryDescription) toGoStruct() *FabricServicePartitionQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServicePartitionQueryDescription{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionIdFilter = obj.PartitionIdFilter
	return &dst
}

type FabricNodeLoadInformationQueryDescription struct {
	NodeName string
}

func (obj *FabricNodeLoadInformationQueryDescription) toInnerStruct() *innerFabricNodeLoadInformationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeLoadInformationQueryDescription{}
	s_201, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_201

	return &dst
}

type innerFabricNodeLoadInformationQueryDescription struct {
	NodeName *uint16
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeLoadInformationQueryDescription) toGoStruct() *FabricNodeLoadInformationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricNodeLoadInformationQueryDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	return &dst
}

type FabricApplicationLoadInformationQueryDescription struct {
	ApplicationName string
}

func (obj *FabricApplicationLoadInformationQueryDescription) toInnerStruct() *innerFabricApplicationLoadInformationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationLoadInformationQueryDescription{}
	s_202, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_202

	return &dst
}

type innerFabricApplicationLoadInformationQueryDescription struct {
	ApplicationName *uint16
	Reserved        unsafe.Pointer
}

func (obj *innerFabricApplicationLoadInformationQueryDescription) toGoStruct() *FabricApplicationLoadInformationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationLoadInformationQueryDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	return &dst
}

type FabricServicePartitionQueryResultItem struct {
	Kind  FabricServiceKind
	Value interface{}
}
type innerFabricServicePartitionQueryResultItem struct {
	FabricServicePartitionQueryResultItem
}

func (obj *innerFabricServicePartitionQueryResultItem) toGoStruct() *FabricServicePartitionQueryResultItem {
	if obj == nil {
		return nil
	}
	return &obj.FabricServicePartitionQueryResultItem
}
func (obj *FabricServicePartitionQueryResultItem) toInnerStruct() *innerFabricServicePartitionQueryResultItem {
	if obj == nil {
		return nil
	}
	return &innerFabricServicePartitionQueryResultItem{*obj}
}

type innerFabricServicePartitionQueryResultList struct {
	Count uint32
	Items *innerFabricServicePartitionQueryResultItem
}

func (obj *innerFabricServicePartitionQueryResultList) toGoStruct() []FabricServicePartitionQueryResultItem {
	var dst []FabricServicePartitionQueryResultItem
	{
		var innerlst []innerFabricServicePartitionQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServicePartitionQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricStatelessServicePartitionQueryResultItem struct {
	PartitionInformation *FabricServicePartitionInformation
	InstanceCount        uint32
	HealthState          FabricHealthState
	PartitionStatus      FabricQueryServicePartitionStatus
}
type innerFabricStatelessServicePartitionQueryResultItem struct {
	FabricStatelessServicePartitionQueryResultItem
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatelessServicePartitionQueryResultItem) toGoStruct() *FabricStatelessServicePartitionQueryResultItem {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatelessServicePartitionQueryResultItem
}
func (obj *FabricStatelessServicePartitionQueryResultItem) toInnerStruct() *innerFabricStatelessServicePartitionQueryResultItem {
	if obj == nil {
		return nil
	}
	return &innerFabricStatelessServicePartitionQueryResultItem{*obj, nil}
}

type FabricStatefulServicePartitionQueryResultItem struct {
	PartitionInformation            *FabricServicePartitionInformation
	TargetReplicaSetSize            uint32
	MinReplicaSetSize               uint32
	HealthState                     FabricHealthState
	PartitionStatus                 FabricQueryServicePartitionStatus
	LastQuorumLossDurationInSeconds int64
}
type innerFabricStatefulServicePartitionQueryResultItem struct {
	FabricStatefulServicePartitionQueryResultItem
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServicePartitionQueryResultItem) toGoStruct() *FabricStatefulServicePartitionQueryResultItem {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServicePartitionQueryResultItem
}
func (obj *FabricStatefulServicePartitionQueryResultItem) toInnerStruct() *innerFabricStatefulServicePartitionQueryResultItem {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServicePartitionQueryResultItem{*obj, nil}
}

type FabricStatefulServicePartitionQueryResultItemEx1 struct {
	PrimaryEpoch FabricEpoch
}
type innerFabricStatefulServicePartitionQueryResultItemEx1 struct {
	FabricStatefulServicePartitionQueryResultItemEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServicePartitionQueryResultItemEx1) toGoStruct() *FabricStatefulServicePartitionQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServicePartitionQueryResultItemEx1
}
func (obj *FabricStatefulServicePartitionQueryResultItemEx1) toInnerStruct() *innerFabricStatefulServicePartitionQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServicePartitionQueryResultItemEx1{*obj, nil}
}

type FabricServiceReplicaQueryDescription struct {
	PartitionId                 windows.GUID
	ReplicaIdOrInstanceIdFilter int64
}
type innerFabricServiceReplicaQueryDescription struct {
	FabricServiceReplicaQueryDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceReplicaQueryDescription) toGoStruct() *FabricServiceReplicaQueryDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceReplicaQueryDescription
}
func (obj *FabricServiceReplicaQueryDescription) toInnerStruct() *innerFabricServiceReplicaQueryDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceReplicaQueryDescription{*obj, nil}
}

type FabricServiceReplicaQueryDescriptionEx1 struct {
	ReplicaStatusFilter uint32
}
type innerFabricServiceReplicaQueryDescriptionEx1 struct {
	FabricServiceReplicaQueryDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceReplicaQueryDescriptionEx1) toGoStruct() *FabricServiceReplicaQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceReplicaQueryDescriptionEx1
}
func (obj *FabricServiceReplicaQueryDescriptionEx1) toInnerStruct() *innerFabricServiceReplicaQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceReplicaQueryDescriptionEx1{*obj, nil}
}

type FabricServiceReplicaQueryResultItem struct {
	Kind  FabricServiceKind
	Value interface{}
}
type innerFabricServiceReplicaQueryResultItem struct {
	FabricServiceReplicaQueryResultItem
}

func (obj *innerFabricServiceReplicaQueryResultItem) toGoStruct() *FabricServiceReplicaQueryResultItem {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceReplicaQueryResultItem
}
func (obj *FabricServiceReplicaQueryResultItem) toInnerStruct() *innerFabricServiceReplicaQueryResultItem {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceReplicaQueryResultItem{*obj}
}

type innerFabricServiceReplicaQueryResultList struct {
	Count uint32
	Items *innerFabricServiceReplicaQueryResultItem
}

func (obj *innerFabricServiceReplicaQueryResultList) toGoStruct() []FabricServiceReplicaQueryResultItem {
	var dst []FabricServiceReplicaQueryResultItem
	{
		var innerlst []innerFabricServiceReplicaQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceReplicaQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricStatefulServiceReplicaQueryResultItem struct {
	ReplicaId                    int64
	ReplicaRole                  FabricReplicaRole
	ReplicaStatus                FabricQueryServiceReplicaStatus
	AggregatedHealthState        FabricHealthState
	ReplicaAddress               string
	NodeName                     string
	LastInBuildDurationInSeconds int64
}

func (obj *FabricStatefulServiceReplicaQueryResultItem) toInnerStruct() *innerFabricStatefulServiceReplicaQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceReplicaQueryResultItem{}
	dst.ReplicaId = obj.ReplicaId
	dst.ReplicaRole = obj.ReplicaRole
	dst.ReplicaStatus = obj.ReplicaStatus
	dst.AggregatedHealthState = obj.AggregatedHealthState
	s_203, _ := windows.UTF16PtrFromString(obj.ReplicaAddress)
	dst.ReplicaAddress = s_203

	s_204, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_204

	dst.LastInBuildDurationInSeconds = obj.LastInBuildDurationInSeconds
	return &dst
}

type innerFabricStatefulServiceReplicaQueryResultItem struct {
	ReplicaId                    int64
	ReplicaRole                  FabricReplicaRole
	ReplicaStatus                FabricQueryServiceReplicaStatus
	AggregatedHealthState        FabricHealthState
	ReplicaAddress               *uint16
	NodeName                     *uint16
	LastInBuildDurationInSeconds int64
	Reserved                     unsafe.Pointer
}

func (obj *innerFabricStatefulServiceReplicaQueryResultItem) toGoStruct() *FabricStatefulServiceReplicaQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceReplicaQueryResultItem{}
	dst.ReplicaId = obj.ReplicaId
	dst.ReplicaRole = obj.ReplicaRole
	dst.ReplicaStatus = obj.ReplicaStatus
	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.ReplicaAddress = windows.UTF16PtrToString(obj.ReplicaAddress)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.LastInBuildDurationInSeconds = obj.LastInBuildDurationInSeconds
	return &dst
}

type FabricStatelessServiceInstanceQueryResultItem struct {
	InstanceId                   int64
	ReplicaStatus                FabricQueryServiceReplicaStatus
	AggregatedHealthState        FabricHealthState
	ReplicaAddress               string
	NodeName                     string
	LastInBuildDurationInSeconds int64
}

func (obj *FabricStatelessServiceInstanceQueryResultItem) toInnerStruct() *innerFabricStatelessServiceInstanceQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceInstanceQueryResultItem{}
	dst.InstanceId = obj.InstanceId
	dst.ReplicaStatus = obj.ReplicaStatus
	dst.AggregatedHealthState = obj.AggregatedHealthState
	s_205, _ := windows.UTF16PtrFromString(obj.ReplicaAddress)
	dst.ReplicaAddress = s_205

	s_206, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_206

	dst.LastInBuildDurationInSeconds = obj.LastInBuildDurationInSeconds
	return &dst
}

type innerFabricStatelessServiceInstanceQueryResultItem struct {
	InstanceId                   int64
	ReplicaStatus                FabricQueryServiceReplicaStatus
	AggregatedHealthState        FabricHealthState
	ReplicaAddress               *uint16
	NodeName                     *uint16
	LastInBuildDurationInSeconds int64
	Reserved                     unsafe.Pointer
}

func (obj *innerFabricStatelessServiceInstanceQueryResultItem) toGoStruct() *FabricStatelessServiceInstanceQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceInstanceQueryResultItem{}
	dst.InstanceId = obj.InstanceId
	dst.ReplicaStatus = obj.ReplicaStatus
	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.ReplicaAddress = windows.UTF16PtrToString(obj.ReplicaAddress)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.LastInBuildDurationInSeconds = obj.LastInBuildDurationInSeconds
	return &dst
}

type FabricDeployedApplicationQueryDescription struct {
	NodeName              string
	ApplicationNameFilter string
}

func (obj *FabricDeployedApplicationQueryDescription) toInnerStruct() *innerFabricDeployedApplicationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationQueryDescription{}
	s_207, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_207

	s_208, _ := windows.UTF16PtrFromString(obj.ApplicationNameFilter)
	dst.ApplicationNameFilter = s_208

	return &dst
}

type innerFabricDeployedApplicationQueryDescription struct {
	NodeName              *uint16
	ApplicationNameFilter *uint16
	Reserved              unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationQueryDescription) toGoStruct() *FabricDeployedApplicationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationQueryDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ApplicationNameFilter = windows.UTF16PtrToString(obj.ApplicationNameFilter)
	return &dst
}

type FabricPagedDeployedApplicationQueryDescription struct {
	NodeName              string
	ApplicationNameFilter string
	IncludeHealthState    bool
	PagingDescription     *FabricQueryPagingDescription
}

func (obj *FabricPagedDeployedApplicationQueryDescription) toInnerStruct() *innerFabricPagedDeployedApplicationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricPagedDeployedApplicationQueryDescription{}
	s_209, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_209

	s_210, _ := windows.UTF16PtrFromString(obj.ApplicationNameFilter)
	dst.ApplicationNameFilter = s_210

	dst.IncludeHealthState = obj.IncludeHealthState
	dst.PagingDescription = obj.PagingDescription.toInnerStruct()
	return &dst
}

type innerFabricPagedDeployedApplicationQueryDescription struct {
	NodeName              *uint16
	ApplicationNameFilter *uint16
	IncludeHealthState    bool
	PagingDescription     *innerFabricQueryPagingDescription
	Reserved              unsafe.Pointer
}

func (obj *innerFabricPagedDeployedApplicationQueryDescription) toGoStruct() *FabricPagedDeployedApplicationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricPagedDeployedApplicationQueryDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ApplicationNameFilter = windows.UTF16PtrToString(obj.ApplicationNameFilter)
	dst.IncludeHealthState = obj.IncludeHealthState
	dst.PagingDescription = obj.PagingDescription.toGoStruct()
	return &dst
}

type FabricDeployedApplicationQueryResultItem struct {
	ApplicationName           string
	ApplicationTypeName       string
	DeployedApplicationStatus FabricDeploymentStatus
}

func (obj *FabricDeployedApplicationQueryResultItem) toInnerStruct() *innerFabricDeployedApplicationQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationQueryResultItem{}
	s_211, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_211

	s_212, _ := windows.UTF16PtrFromString(obj.ApplicationTypeName)
	dst.ApplicationTypeName = s_212

	dst.DeployedApplicationStatus = obj.DeployedApplicationStatus
	return &dst
}

type innerFabricDeployedApplicationQueryResultItem struct {
	ApplicationName           *uint16
	ApplicationTypeName       *uint16
	DeployedApplicationStatus FabricDeploymentStatus
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationQueryResultItem) toGoStruct() *FabricDeployedApplicationQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationQueryResultItem{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ApplicationTypeName = windows.UTF16PtrToString(obj.ApplicationTypeName)
	dst.DeployedApplicationStatus = obj.DeployedApplicationStatus
	return &dst
}

type FabricDeployedApplicationQueryResultItemEx struct {
	WorkDirectory string
	LogDirectory  string
	TempDirectory string
}

func (obj *FabricDeployedApplicationQueryResultItemEx) toInnerStruct() *innerFabricDeployedApplicationQueryResultItemEx {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationQueryResultItemEx{}
	s_213, _ := windows.UTF16PtrFromString(obj.WorkDirectory)
	dst.WorkDirectory = s_213

	s_214, _ := windows.UTF16PtrFromString(obj.LogDirectory)
	dst.LogDirectory = s_214

	s_215, _ := windows.UTF16PtrFromString(obj.TempDirectory)
	dst.TempDirectory = s_215

	return &dst
}

type innerFabricDeployedApplicationQueryResultItemEx struct {
	WorkDirectory *uint16
	LogDirectory  *uint16
	TempDirectory *uint16
	Reserved      unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationQueryResultItemEx) toGoStruct() *FabricDeployedApplicationQueryResultItemEx {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationQueryResultItemEx{}
	dst.WorkDirectory = windows.UTF16PtrToString(obj.WorkDirectory)
	dst.LogDirectory = windows.UTF16PtrToString(obj.LogDirectory)
	dst.TempDirectory = windows.UTF16PtrToString(obj.TempDirectory)
	return &dst
}

type FabricDeployedApplicationQueryResultItemEx2 struct {
	HealthState FabricHealthState
}
type innerFabricDeployedApplicationQueryResultItemEx2 struct {
	FabricDeployedApplicationQueryResultItemEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationQueryResultItemEx2) toGoStruct() *FabricDeployedApplicationQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedApplicationQueryResultItemEx2
}
func (obj *FabricDeployedApplicationQueryResultItemEx2) toInnerStruct() *innerFabricDeployedApplicationQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedApplicationQueryResultItemEx2{*obj, nil}
}

type innerFabricDeployedApplicationQueryResultList struct {
	Count uint32
	Items *innerFabricDeployedApplicationQueryResultItem
}

func (obj *innerFabricDeployedApplicationQueryResultList) toGoStruct() []FabricDeployedApplicationQueryResultItem {
	var dst []FabricDeployedApplicationQueryResultItem
	{
		var innerlst []innerFabricDeployedApplicationQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedApplicationQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedServicePackageQueryDescription struct {
	NodeName                  string
	ApplicationName           string
	ServiceManifestNameFilter string
}

func (obj *FabricDeployedServicePackageQueryDescription) toInnerStruct() *innerFabricDeployedServicePackageQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageQueryDescription{}
	s_216, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_216

	s_217, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_217

	s_218, _ := windows.UTF16PtrFromString(obj.ServiceManifestNameFilter)
	dst.ServiceManifestNameFilter = s_218

	return &dst
}

type innerFabricDeployedServicePackageQueryDescription struct {
	NodeName                  *uint16
	ApplicationName           *uint16
	ServiceManifestNameFilter *uint16
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageQueryDescription) toGoStruct() *FabricDeployedServicePackageQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageQueryDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceManifestNameFilter = windows.UTF16PtrToString(obj.ServiceManifestNameFilter)
	return &dst
}

type FabricDeployedServicePackageQueryResultItem struct {
	ServiceManifestName          string
	ServiceManifestVersion       string
	DeployedServicePackageStatus FabricDeploymentStatus
}

func (obj *FabricDeployedServicePackageQueryResultItem) toInnerStruct() *innerFabricDeployedServicePackageQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageQueryResultItem{}
	s_219, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_219

	s_220, _ := windows.UTF16PtrFromString(obj.ServiceManifestVersion)
	dst.ServiceManifestVersion = s_220

	dst.DeployedServicePackageStatus = obj.DeployedServicePackageStatus
	return &dst
}

type innerFabricDeployedServicePackageQueryResultItem struct {
	ServiceManifestName          *uint16
	ServiceManifestVersion       *uint16
	DeployedServicePackageStatus FabricDeploymentStatus
	Reserved                     unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageQueryResultItem) toGoStruct() *FabricDeployedServicePackageQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageQueryResultItem{}
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.ServiceManifestVersion = windows.UTF16PtrToString(obj.ServiceManifestVersion)
	dst.DeployedServicePackageStatus = obj.DeployedServicePackageStatus
	return &dst
}

type FabricDeployedServicePackageQueryResultItemEx1 struct {
	ServicePackageActivationId string
}

func (obj *FabricDeployedServicePackageQueryResultItemEx1) toInnerStruct() *innerFabricDeployedServicePackageQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageQueryResultItemEx1{}
	s_221, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_221

	return &dst
}

type innerFabricDeployedServicePackageQueryResultItemEx1 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageQueryResultItemEx1) toGoStruct() *FabricDeployedServicePackageQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageQueryResultItemEx1{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type innerFabricDeployedServicePackageQueryResultList struct {
	Count uint32
	Items *innerFabricDeployedServicePackageQueryResultItem
}

func (obj *innerFabricDeployedServicePackageQueryResultList) toGoStruct() []FabricDeployedServicePackageQueryResultItem {
	var dst []FabricDeployedServicePackageQueryResultItem
	{
		var innerlst []innerFabricDeployedServicePackageQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedServicePackageQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedServiceTypeQueryDescription struct {
	NodeName                  string
	ApplicationName           string
	ServiceManifestNameFilter string
	ServiceTypeNameFilter     string
}

func (obj *FabricDeployedServiceTypeQueryDescription) toInnerStruct() *innerFabricDeployedServiceTypeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServiceTypeQueryDescription{}
	s_222, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_222

	s_223, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_223

	s_224, _ := windows.UTF16PtrFromString(obj.ServiceManifestNameFilter)
	dst.ServiceManifestNameFilter = s_224

	s_225, _ := windows.UTF16PtrFromString(obj.ServiceTypeNameFilter)
	dst.ServiceTypeNameFilter = s_225

	return &dst
}

type innerFabricDeployedServiceTypeQueryDescription struct {
	NodeName                  *uint16
	ApplicationName           *uint16
	ServiceManifestNameFilter *uint16
	ServiceTypeNameFilter     *uint16
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricDeployedServiceTypeQueryDescription) toGoStruct() *FabricDeployedServiceTypeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServiceTypeQueryDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceManifestNameFilter = windows.UTF16PtrToString(obj.ServiceManifestNameFilter)
	dst.ServiceTypeNameFilter = windows.UTF16PtrToString(obj.ServiceTypeNameFilter)
	return &dst
}

type FabricDeployedServiceTypeQueryResultItem struct {
	ServiceTypeName     string
	CodePackageName     string
	ServiceManifestName string
	Status              FabricServiceTypeRegistrationStatus
}

func (obj *FabricDeployedServiceTypeQueryResultItem) toInnerStruct() *innerFabricDeployedServiceTypeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServiceTypeQueryResultItem{}
	s_226, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_226

	s_227, _ := windows.UTF16PtrFromString(obj.CodePackageName)
	dst.CodePackageName = s_227

	s_228, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_228

	dst.Status = obj.Status
	return &dst
}

type innerFabricDeployedServiceTypeQueryResultItem struct {
	ServiceTypeName     *uint16
	CodePackageName     *uint16
	ServiceManifestName *uint16
	Status              FabricServiceTypeRegistrationStatus
	Reserved            unsafe.Pointer
}

func (obj *innerFabricDeployedServiceTypeQueryResultItem) toGoStruct() *FabricDeployedServiceTypeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServiceTypeQueryResultItem{}
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	dst.CodePackageName = windows.UTF16PtrToString(obj.CodePackageName)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.Status = obj.Status
	return &dst
}

type FabricDeployedServiceTypeQueryResultItemEx1 struct {
	ServicePackageActivationId string
}

func (obj *FabricDeployedServiceTypeQueryResultItemEx1) toInnerStruct() *innerFabricDeployedServiceTypeQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServiceTypeQueryResultItemEx1{}
	s_229, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_229

	return &dst
}

type innerFabricDeployedServiceTypeQueryResultItemEx1 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedServiceTypeQueryResultItemEx1) toGoStruct() *FabricDeployedServiceTypeQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServiceTypeQueryResultItemEx1{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type innerFabricDeployedServiceTypeQueryResultList struct {
	Count uint32
	Items *innerFabricDeployedServiceTypeQueryResultItem
}

func (obj *innerFabricDeployedServiceTypeQueryResultList) toGoStruct() []FabricDeployedServiceTypeQueryResultItem {
	var dst []FabricDeployedServiceTypeQueryResultItem
	{
		var innerlst []innerFabricDeployedServiceTypeQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedServiceTypeQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricCodePackageEntryPointStatistics struct {
	LastExitCode                     uint32
	LastActivationUtc                time.Time
	LastExitUtc                      time.Time
	LastSuccessfulActivationUtc      time.Time
	LastSuccessfulExitUtc            time.Time
	ActivationCount                  uint32
	ActivationFailureCount           uint32
	ContinuousActivationFailureCount uint32
	ExitCount                        uint32
	ExitFailureCount                 uint32
	ContinuousExitFailureCount       uint32
}

func (obj *FabricCodePackageEntryPointStatistics) toInnerStruct() *innerFabricCodePackageEntryPointStatistics {
	if obj == nil {
		return nil
	}
	dst := innerFabricCodePackageEntryPointStatistics{}
	dst.LastExitCode = obj.LastExitCode
	dst.LastActivationUtc = windows.NsecToFiletime(obj.LastActivationUtc.UnixNano())
	dst.LastExitUtc = windows.NsecToFiletime(obj.LastExitUtc.UnixNano())
	dst.LastSuccessfulActivationUtc = windows.NsecToFiletime(obj.LastSuccessfulActivationUtc.UnixNano())
	dst.LastSuccessfulExitUtc = windows.NsecToFiletime(obj.LastSuccessfulExitUtc.UnixNano())
	dst.ActivationCount = obj.ActivationCount
	dst.ActivationFailureCount = obj.ActivationFailureCount
	dst.ContinuousActivationFailureCount = obj.ContinuousActivationFailureCount
	dst.ExitCount = obj.ExitCount
	dst.ExitFailureCount = obj.ExitFailureCount
	dst.ContinuousExitFailureCount = obj.ContinuousExitFailureCount
	return &dst
}

type innerFabricCodePackageEntryPointStatistics struct {
	LastExitCode                     uint32
	LastActivationUtc                windows.Filetime
	LastExitUtc                      windows.Filetime
	LastSuccessfulActivationUtc      windows.Filetime
	LastSuccessfulExitUtc            windows.Filetime
	ActivationCount                  uint32
	ActivationFailureCount           uint32
	ContinuousActivationFailureCount uint32
	ExitCount                        uint32
	ExitFailureCount                 uint32
	ContinuousExitFailureCount       uint32
	Reserved                         unsafe.Pointer
}

func (obj *innerFabricCodePackageEntryPointStatistics) toGoStruct() *FabricCodePackageEntryPointStatistics {
	if obj == nil {
		return nil
	}
	dst := FabricCodePackageEntryPointStatistics{}
	dst.LastExitCode = obj.LastExitCode
	dst.LastActivationUtc = time.Unix(0, obj.LastActivationUtc.Nanoseconds())
	dst.LastExitUtc = time.Unix(0, obj.LastExitUtc.Nanoseconds())
	dst.LastSuccessfulActivationUtc = time.Unix(0, obj.LastSuccessfulActivationUtc.Nanoseconds())
	dst.LastSuccessfulExitUtc = time.Unix(0, obj.LastSuccessfulExitUtc.Nanoseconds())
	dst.ActivationCount = obj.ActivationCount
	dst.ActivationFailureCount = obj.ActivationFailureCount
	dst.ContinuousActivationFailureCount = obj.ContinuousActivationFailureCount
	dst.ExitCount = obj.ExitCount
	dst.ExitFailureCount = obj.ExitFailureCount
	dst.ContinuousExitFailureCount = obj.ContinuousExitFailureCount
	return &dst
}

type FabricCodePackageEntryPoint struct {
	EntryPointLocation string
	ProcessId          int64
	RunAsUserName      string
	EntryPointStatus   FabricErrorntryPointStatus
	NextActivationUtc  time.Time
	Statistics         *FabricCodePackageEntryPointStatistics
}

func (obj *FabricCodePackageEntryPoint) toInnerStruct() *innerFabricCodePackageEntryPoint {
	if obj == nil {
		return nil
	}
	dst := innerFabricCodePackageEntryPoint{}
	s_230, _ := windows.UTF16PtrFromString(obj.EntryPointLocation)
	dst.EntryPointLocation = s_230

	dst.ProcessId = obj.ProcessId
	s_231, _ := windows.UTF16PtrFromString(obj.RunAsUserName)
	dst.RunAsUserName = s_231

	dst.EntryPointStatus = obj.EntryPointStatus
	dst.NextActivationUtc = windows.NsecToFiletime(obj.NextActivationUtc.UnixNano())
	dst.Statistics = obj.Statistics.toInnerStruct()
	return &dst
}

type innerFabricCodePackageEntryPoint struct {
	EntryPointLocation *uint16
	ProcessId          int64
	RunAsUserName      *uint16
	EntryPointStatus   FabricErrorntryPointStatus
	NextActivationUtc  windows.Filetime
	Statistics         *innerFabricCodePackageEntryPointStatistics
	Reserved           unsafe.Pointer
}

func (obj *innerFabricCodePackageEntryPoint) toGoStruct() *FabricCodePackageEntryPoint {
	if obj == nil {
		return nil
	}
	dst := FabricCodePackageEntryPoint{}
	dst.EntryPointLocation = windows.UTF16PtrToString(obj.EntryPointLocation)
	dst.ProcessId = obj.ProcessId
	dst.RunAsUserName = windows.UTF16PtrToString(obj.RunAsUserName)
	dst.EntryPointStatus = obj.EntryPointStatus
	dst.NextActivationUtc = time.Unix(0, obj.NextActivationUtc.Nanoseconds())
	dst.Statistics = obj.Statistics.toGoStruct()
	return &dst
}

type FabricCodePackageEntryPointEx1 struct {
	CodePackageInstanceId int64
}
type innerFabricCodePackageEntryPointEx1 struct {
	FabricCodePackageEntryPointEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricCodePackageEntryPointEx1) toGoStruct() *FabricCodePackageEntryPointEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricCodePackageEntryPointEx1
}
func (obj *FabricCodePackageEntryPointEx1) toInnerStruct() *innerFabricCodePackageEntryPointEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricCodePackageEntryPointEx1{*obj, nil}
}

type FabricDeployedCodePackageQueryDescription struct {
	NodeName                  string
	ApplicationName           string
	ServiceManifestNameFilter string
	CodePackageNameFilter     string
}

func (obj *FabricDeployedCodePackageQueryDescription) toInnerStruct() *innerFabricDeployedCodePackageQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedCodePackageQueryDescription{}
	s_232, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_232

	s_233, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_233

	s_234, _ := windows.UTF16PtrFromString(obj.ServiceManifestNameFilter)
	dst.ServiceManifestNameFilter = s_234

	s_235, _ := windows.UTF16PtrFromString(obj.CodePackageNameFilter)
	dst.CodePackageNameFilter = s_235

	return &dst
}

type innerFabricDeployedCodePackageQueryDescription struct {
	NodeName                  *uint16
	ApplicationName           *uint16
	ServiceManifestNameFilter *uint16
	CodePackageNameFilter     *uint16
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricDeployedCodePackageQueryDescription) toGoStruct() *FabricDeployedCodePackageQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedCodePackageQueryDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceManifestNameFilter = windows.UTF16PtrToString(obj.ServiceManifestNameFilter)
	dst.CodePackageNameFilter = windows.UTF16PtrToString(obj.CodePackageNameFilter)
	return &dst
}

type FabricDeployedCodePackageQueryResultItem struct {
	CodePackageName           string
	CodePackageVersion        string
	ServiceManifestName       string
	RunFrequencyInterval      uint32
	DeployedCodePackageStatus FabricDeploymentStatus
	SetupEntryPoint           *FabricCodePackageEntryPoint
	EntryPoint                *FabricCodePackageEntryPoint
}

func (obj *FabricDeployedCodePackageQueryResultItem) toInnerStruct() *innerFabricDeployedCodePackageQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedCodePackageQueryResultItem{}
	s_236, _ := windows.UTF16PtrFromString(obj.CodePackageName)
	dst.CodePackageName = s_236

	s_237, _ := windows.UTF16PtrFromString(obj.CodePackageVersion)
	dst.CodePackageVersion = s_237

	s_238, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_238

	dst.RunFrequencyInterval = obj.RunFrequencyInterval
	dst.DeployedCodePackageStatus = obj.DeployedCodePackageStatus
	dst.SetupEntryPoint = obj.SetupEntryPoint.toInnerStruct()
	dst.EntryPoint = obj.EntryPoint.toInnerStruct()
	return &dst
}

type innerFabricDeployedCodePackageQueryResultItem struct {
	CodePackageName           *uint16
	CodePackageVersion        *uint16
	ServiceManifestName       *uint16
	RunFrequencyInterval      uint32
	DeployedCodePackageStatus FabricDeploymentStatus
	SetupEntryPoint           *innerFabricCodePackageEntryPoint
	EntryPoint                *innerFabricCodePackageEntryPoint
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricDeployedCodePackageQueryResultItem) toGoStruct() *FabricDeployedCodePackageQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedCodePackageQueryResultItem{}
	dst.CodePackageName = windows.UTF16PtrToString(obj.CodePackageName)
	dst.CodePackageVersion = windows.UTF16PtrToString(obj.CodePackageVersion)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.RunFrequencyInterval = obj.RunFrequencyInterval
	dst.DeployedCodePackageStatus = obj.DeployedCodePackageStatus
	dst.SetupEntryPoint = obj.SetupEntryPoint.toGoStruct()
	dst.EntryPoint = obj.EntryPoint.toGoStruct()
	return &dst
}

type FabricDeployedCodePackageQueryResultItemEx1 struct {
	ServicePackageActivationId string
	HostType                   FabricHostType
	HostIsolationMode          FabricHostIsolationMode
}

func (obj *FabricDeployedCodePackageQueryResultItemEx1) toInnerStruct() *innerFabricDeployedCodePackageQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedCodePackageQueryResultItemEx1{}
	s_239, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_239

	dst.HostType = obj.HostType
	dst.HostIsolationMode = obj.HostIsolationMode
	return &dst
}

type innerFabricDeployedCodePackageQueryResultItemEx1 struct {
	ServicePackageActivationId *uint16
	HostType                   FabricHostType
	HostIsolationMode          FabricHostIsolationMode
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedCodePackageQueryResultItemEx1) toGoStruct() *FabricDeployedCodePackageQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedCodePackageQueryResultItemEx1{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	dst.HostType = obj.HostType
	dst.HostIsolationMode = obj.HostIsolationMode
	return &dst
}

type innerFabricDeployedCodePackageQueryResultList struct {
	Count uint32
	Items *innerFabricDeployedCodePackageQueryResultItem
}

func (obj *innerFabricDeployedCodePackageQueryResultList) toGoStruct() []FabricDeployedCodePackageQueryResultItem {
	var dst []FabricDeployedCodePackageQueryResultItem
	{
		var innerlst []innerFabricDeployedCodePackageQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedCodePackageQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedServiceReplicaQueryDescription struct {
	NodeName                  string
	ApplicationName           string
	ServiceManifestNameFilter string
	PartitionIdFilter         windows.GUID
}

func (obj *FabricDeployedServiceReplicaQueryDescription) toInnerStruct() *innerFabricDeployedServiceReplicaQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServiceReplicaQueryDescription{}
	s_240, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_240

	s_241, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_241

	s_242, _ := windows.UTF16PtrFromString(obj.ServiceManifestNameFilter)
	dst.ServiceManifestNameFilter = s_242

	dst.PartitionIdFilter = obj.PartitionIdFilter
	return &dst
}

type innerFabricDeployedServiceReplicaQueryDescription struct {
	NodeName                  *uint16
	ApplicationName           *uint16
	ServiceManifestNameFilter *uint16
	PartitionIdFilter         windows.GUID
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricDeployedServiceReplicaQueryDescription) toGoStruct() *FabricDeployedServiceReplicaQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServiceReplicaQueryDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceManifestNameFilter = windows.UTF16PtrToString(obj.ServiceManifestNameFilter)
	dst.PartitionIdFilter = obj.PartitionIdFilter
	return &dst
}

type FabricReconfigurationInformationQueryResult struct {
	PreviousConfigurationRole   FabricReplicaRole
	ReconfigurationPhase        FabricReconfigurationPhase
	ReconfigurationType         FabricReconfigurationType
	ReconfigurationStartTimeUtc time.Time
}

func (obj *FabricReconfigurationInformationQueryResult) toInnerStruct() *innerFabricReconfigurationInformationQueryResult {
	if obj == nil {
		return nil
	}
	dst := innerFabricReconfigurationInformationQueryResult{}
	dst.PreviousConfigurationRole = obj.PreviousConfigurationRole
	dst.ReconfigurationPhase = obj.ReconfigurationPhase
	dst.ReconfigurationType = obj.ReconfigurationType
	dst.ReconfigurationStartTimeUtc = windows.NsecToFiletime(obj.ReconfigurationStartTimeUtc.UnixNano())
	return &dst
}

type innerFabricReconfigurationInformationQueryResult struct {
	PreviousConfigurationRole   FabricReplicaRole
	ReconfigurationPhase        FabricReconfigurationPhase
	ReconfigurationType         FabricReconfigurationType
	ReconfigurationStartTimeUtc windows.Filetime
	Reserved                    unsafe.Pointer
}

func (obj *innerFabricReconfigurationInformationQueryResult) toGoStruct() *FabricReconfigurationInformationQueryResult {
	if obj == nil {
		return nil
	}
	dst := FabricReconfigurationInformationQueryResult{}
	dst.PreviousConfigurationRole = obj.PreviousConfigurationRole
	dst.ReconfigurationPhase = obj.ReconfigurationPhase
	dst.ReconfigurationType = obj.ReconfigurationType
	dst.ReconfigurationStartTimeUtc = time.Unix(0, obj.ReconfigurationStartTimeUtc.Nanoseconds())
	return &dst
}

type FabricDeployedServiceReplicaQueryResultItem struct {
	Kind  FabricServiceKind
	Value interface{}
}
type innerFabricDeployedServiceReplicaQueryResultItem struct {
	FabricDeployedServiceReplicaQueryResultItem
}

func (obj *innerFabricDeployedServiceReplicaQueryResultItem) toGoStruct() *FabricDeployedServiceReplicaQueryResultItem {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedServiceReplicaQueryResultItem
}
func (obj *FabricDeployedServiceReplicaQueryResultItem) toInnerStruct() *innerFabricDeployedServiceReplicaQueryResultItem {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedServiceReplicaQueryResultItem{*obj}
}

type innerFabricDeployedServiceReplicaQueryResultList struct {
	Count uint32
	Items *innerFabricDeployedServiceReplicaQueryResultItem
}

func (obj *innerFabricDeployedServiceReplicaQueryResultList) toGoStruct() []FabricDeployedServiceReplicaQueryResultItem {
	var dst []FabricDeployedServiceReplicaQueryResultItem
	{
		var innerlst []innerFabricDeployedServiceReplicaQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedServiceReplicaQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedStatefulServiceReplicaQueryResultItem struct {
	ServiceName            string
	ServiceTypeName        string
	ServiceManifestVersion string
	CodePackageName        string
	PartitionId            windows.GUID
	ReplicaId              int64
	ReplicaRole            FabricReplicaRole
	ReplicaStatus          FabricQueryServiceReplicaStatus
	Address                string
}

func (obj *FabricDeployedStatefulServiceReplicaQueryResultItem) toInnerStruct() *innerFabricDeployedStatefulServiceReplicaQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedStatefulServiceReplicaQueryResultItem{}
	s_243, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_243

	s_244, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_244

	s_245, _ := windows.UTF16PtrFromString(obj.ServiceManifestVersion)
	dst.ServiceManifestVersion = s_245

	s_246, _ := windows.UTF16PtrFromString(obj.CodePackageName)
	dst.CodePackageName = s_246

	dst.PartitionId = obj.PartitionId
	dst.ReplicaId = obj.ReplicaId
	dst.ReplicaRole = obj.ReplicaRole
	dst.ReplicaStatus = obj.ReplicaStatus
	s_247, _ := windows.UTF16PtrFromString(obj.Address)
	dst.Address = s_247

	return &dst
}

type innerFabricDeployedStatefulServiceReplicaQueryResultItem struct {
	ServiceName            *uint16
	ServiceTypeName        *uint16
	ServiceManifestVersion *uint16
	CodePackageName        *uint16
	PartitionId            windows.GUID
	ReplicaId              int64
	ReplicaRole            FabricReplicaRole
	ReplicaStatus          FabricQueryServiceReplicaStatus
	Address                *uint16
	Reserved               unsafe.Pointer
}

func (obj *innerFabricDeployedStatefulServiceReplicaQueryResultItem) toGoStruct() *FabricDeployedStatefulServiceReplicaQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedStatefulServiceReplicaQueryResultItem{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	dst.ServiceManifestVersion = windows.UTF16PtrToString(obj.ServiceManifestVersion)
	dst.CodePackageName = windows.UTF16PtrToString(obj.CodePackageName)
	dst.PartitionId = obj.PartitionId
	dst.ReplicaId = obj.ReplicaId
	dst.ReplicaRole = obj.ReplicaRole
	dst.ReplicaStatus = obj.ReplicaStatus
	dst.Address = windows.UTF16PtrToString(obj.Address)
	return &dst
}

type FabricDeployedStatefulServiceReplicaQueryResultItemEx1 struct {
	ServiceManifestName string
}

func (obj *FabricDeployedStatefulServiceReplicaQueryResultItemEx1) toInnerStruct() *innerFabricDeployedStatefulServiceReplicaQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedStatefulServiceReplicaQueryResultItemEx1{}
	s_248, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_248

	return &dst
}

type innerFabricDeployedStatefulServiceReplicaQueryResultItemEx1 struct {
	ServiceManifestName *uint16
	Reserved            unsafe.Pointer
}

func (obj *innerFabricDeployedStatefulServiceReplicaQueryResultItemEx1) toGoStruct() *FabricDeployedStatefulServiceReplicaQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedStatefulServiceReplicaQueryResultItemEx1{}
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	return &dst
}

type FabricDeployedStatefulServiceReplicaQueryResultItemEx2 struct {
	ServicePackageActivationId string
}

func (obj *FabricDeployedStatefulServiceReplicaQueryResultItemEx2) toInnerStruct() *innerFabricDeployedStatefulServiceReplicaQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedStatefulServiceReplicaQueryResultItemEx2{}
	s_249, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_249

	return &dst
}

type innerFabricDeployedStatefulServiceReplicaQueryResultItemEx2 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedStatefulServiceReplicaQueryResultItemEx2) toGoStruct() *FabricDeployedStatefulServiceReplicaQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedStatefulServiceReplicaQueryResultItemEx2{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type FabricDeployedStatefulServiceReplicaQueryResultItemEx3 struct {
	HostProcessId              int64
	ReconfigurationInformation *FabricReconfigurationInformationQueryResult
}
type innerFabricDeployedStatefulServiceReplicaQueryResultItemEx3 struct {
	FabricDeployedStatefulServiceReplicaQueryResultItemEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricDeployedStatefulServiceReplicaQueryResultItemEx3) toGoStruct() *FabricDeployedStatefulServiceReplicaQueryResultItemEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedStatefulServiceReplicaQueryResultItemEx3
}
func (obj *FabricDeployedStatefulServiceReplicaQueryResultItemEx3) toInnerStruct() *innerFabricDeployedStatefulServiceReplicaQueryResultItemEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedStatefulServiceReplicaQueryResultItemEx3{*obj, nil}
}

type FabricDeployedStatelessServiceInstanceQueryResultItem struct {
	ServiceName            string
	ServiceTypeName        string
	ServiceManifestVersion string
	CodePackageName        string
	PartitionId            windows.GUID
	InstanceId             int64
	ReplicaStatus          FabricQueryServiceReplicaStatus
	Address                string
}

func (obj *FabricDeployedStatelessServiceInstanceQueryResultItem) toInnerStruct() *innerFabricDeployedStatelessServiceInstanceQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedStatelessServiceInstanceQueryResultItem{}
	s_250, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_250

	s_251, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_251

	s_252, _ := windows.UTF16PtrFromString(obj.ServiceManifestVersion)
	dst.ServiceManifestVersion = s_252

	s_253, _ := windows.UTF16PtrFromString(obj.CodePackageName)
	dst.CodePackageName = s_253

	dst.PartitionId = obj.PartitionId
	dst.InstanceId = obj.InstanceId
	dst.ReplicaStatus = obj.ReplicaStatus
	s_254, _ := windows.UTF16PtrFromString(obj.Address)
	dst.Address = s_254

	return &dst
}

type innerFabricDeployedStatelessServiceInstanceQueryResultItem struct {
	ServiceName            *uint16
	ServiceTypeName        *uint16
	ServiceManifestVersion *uint16
	CodePackageName        *uint16
	PartitionId            windows.GUID
	InstanceId             int64
	ReplicaStatus          FabricQueryServiceReplicaStatus
	Address                *uint16
	Reserved               unsafe.Pointer
}

func (obj *innerFabricDeployedStatelessServiceInstanceQueryResultItem) toGoStruct() *FabricDeployedStatelessServiceInstanceQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedStatelessServiceInstanceQueryResultItem{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	dst.ServiceManifestVersion = windows.UTF16PtrToString(obj.ServiceManifestVersion)
	dst.CodePackageName = windows.UTF16PtrToString(obj.CodePackageName)
	dst.PartitionId = obj.PartitionId
	dst.InstanceId = obj.InstanceId
	dst.ReplicaStatus = obj.ReplicaStatus
	dst.Address = windows.UTF16PtrToString(obj.Address)
	return &dst
}

type FabricDeployedStatelessServiceInstanceQueryResultItemEx1 struct {
	ServiceManifestName string
}

func (obj *FabricDeployedStatelessServiceInstanceQueryResultItemEx1) toInnerStruct() *innerFabricDeployedStatelessServiceInstanceQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedStatelessServiceInstanceQueryResultItemEx1{}
	s_255, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_255

	return &dst
}

type innerFabricDeployedStatelessServiceInstanceQueryResultItemEx1 struct {
	ServiceManifestName *uint16
	Reserved            unsafe.Pointer
}

func (obj *innerFabricDeployedStatelessServiceInstanceQueryResultItemEx1) toGoStruct() *FabricDeployedStatelessServiceInstanceQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedStatelessServiceInstanceQueryResultItemEx1{}
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	return &dst
}

type FabricDeployedStatelessServiceInstanceQueryResultItemEx2 struct {
	ServicePackageActivationId string
}

func (obj *FabricDeployedStatelessServiceInstanceQueryResultItemEx2) toInnerStruct() *innerFabricDeployedStatelessServiceInstanceQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedStatelessServiceInstanceQueryResultItemEx2{}
	s_256, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_256

	return &dst
}

type innerFabricDeployedStatelessServiceInstanceQueryResultItemEx2 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedStatelessServiceInstanceQueryResultItemEx2) toGoStruct() *FabricDeployedStatelessServiceInstanceQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedStatelessServiceInstanceQueryResultItemEx2{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type FabricDeployedStatelessServiceInstanceQueryResultItemEx3 struct {
	HostProcessId int64
}
type innerFabricDeployedStatelessServiceInstanceQueryResultItemEx3 struct {
	FabricDeployedStatelessServiceInstanceQueryResultItemEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricDeployedStatelessServiceInstanceQueryResultItemEx3) toGoStruct() *FabricDeployedStatelessServiceInstanceQueryResultItemEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedStatelessServiceInstanceQueryResultItemEx3
}
func (obj *FabricDeployedStatelessServiceInstanceQueryResultItemEx3) toInnerStruct() *innerFabricDeployedStatelessServiceInstanceQueryResultItemEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedStatelessServiceInstanceQueryResultItemEx3{*obj, nil}
}

type FabricLoadMetricReport struct {
	Name            string
	Value           uint32
	LastReportedUtc time.Time
}

func (obj *FabricLoadMetricReport) toInnerStruct() *innerFabricLoadMetricReport {
	if obj == nil {
		return nil
	}
	dst := innerFabricLoadMetricReport{}
	s_257, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_257

	dst.Value = obj.Value
	dst.LastReportedUtc = windows.NsecToFiletime(obj.LastReportedUtc.UnixNano())
	return &dst
}

type innerFabricLoadMetricReport struct {
	Name            *uint16
	Value           uint32
	LastReportedUtc windows.Filetime
	Reserved        unsafe.Pointer
}

func (obj *innerFabricLoadMetricReport) toGoStruct() *FabricLoadMetricReport {
	if obj == nil {
		return nil
	}
	dst := FabricLoadMetricReport{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Value = obj.Value
	dst.LastReportedUtc = time.Unix(0, obj.LastReportedUtc.Nanoseconds())
	return &dst
}

type FabricLoadMetricReportEx1 struct {
	CurrentValue float64
}
type innerFabricLoadMetricReportEx1 struct {
	FabricLoadMetricReportEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricLoadMetricReportEx1) toGoStruct() *FabricLoadMetricReportEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricLoadMetricReportEx1
}
func (obj *FabricLoadMetricReportEx1) toInnerStruct() *innerFabricLoadMetricReportEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricLoadMetricReportEx1{*obj, nil}
}

type innerFabricLoadMetricReportList struct {
	Count uint32
	Items *innerFabricLoadMetricReport
}

func (obj *innerFabricLoadMetricReportList) toGoStruct() []FabricLoadMetricReport {
	var dst []FabricLoadMetricReport
	{
		var innerlst []innerFabricLoadMetricReport
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricLoadMetricReport

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type innerFabricUnplacedReplicaInformationList struct {
	Count uint32
	Items **uint16
}

func (obj *innerFabricUnplacedReplicaInformationList) toGoStruct() []string {
	var dst []string
	{
		var innerlst []*uint16
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem string

			tmpitem = windows.UTF16PtrToString(item)

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedServiceReplicaDetailQueryDescription struct {
	NodeName    string
	PartitionId windows.GUID
	ReplicaId   int64
}

func (obj *FabricDeployedServiceReplicaDetailQueryDescription) toInnerStruct() *innerFabricDeployedServiceReplicaDetailQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServiceReplicaDetailQueryDescription{}
	s_258, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_258

	dst.PartitionId = obj.PartitionId
	dst.ReplicaId = obj.ReplicaId
	return &dst
}

type innerFabricDeployedServiceReplicaDetailQueryDescription struct {
	NodeName    *uint16
	PartitionId windows.GUID
	ReplicaId   int64
	Reserved    unsafe.Pointer
}

func (obj *innerFabricDeployedServiceReplicaDetailQueryDescription) toGoStruct() *FabricDeployedServiceReplicaDetailQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServiceReplicaDetailQueryDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.PartitionId = obj.PartitionId
	dst.ReplicaId = obj.ReplicaId
	return &dst
}

type FabricDeployedServiceReplicaDetailQueryResultItem struct {
	Kind  FabricServiceKind
	Value interface{}
}
type innerFabricDeployedServiceReplicaDetailQueryResultItem struct {
	FabricDeployedServiceReplicaDetailQueryResultItem
}

func (obj *innerFabricDeployedServiceReplicaDetailQueryResultItem) toGoStruct() *FabricDeployedServiceReplicaDetailQueryResultItem {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedServiceReplicaDetailQueryResultItem
}
func (obj *FabricDeployedServiceReplicaDetailQueryResultItem) toInnerStruct() *innerFabricDeployedServiceReplicaDetailQueryResultItem {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedServiceReplicaDetailQueryResultItem{*obj}
}

type FabricDeployedStatelessServiceInstanceDetailQueryResultItem struct {
	ServiceName                         string
	PartitionId                         windows.GUID
	InstanceId                          int64
	CurrentServiceOperation             FabricQueryServiceOperationName
	CurrentServiceOperationStartTimeUtc time.Time
	ReportedLoad                        []FabricLoadMetricReport
}

func (obj *FabricDeployedStatelessServiceInstanceDetailQueryResultItem) toInnerStruct() *innerFabricDeployedStatelessServiceInstanceDetailQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedStatelessServiceInstanceDetailQueryResultItem{}
	s_259, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_259

	dst.PartitionId = obj.PartitionId
	dst.InstanceId = obj.InstanceId
	dst.CurrentServiceOperation = obj.CurrentServiceOperation
	dst.CurrentServiceOperationStartTimeUtc = windows.NsecToFiletime(obj.CurrentServiceOperationStartTimeUtc.UnixNano())
	lst_260 := &innerFabricLoadMetricReportList{}
	{

		var tmp []innerFabricLoadMetricReport

		for _, item := range obj.ReportedLoad {
			var tmpitem innerFabricLoadMetricReport

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_260.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_260.Items = &tmp[0]
		}

	}
	dst.ReportedLoad = lst_260
	return &dst
}

type innerFabricDeployedStatelessServiceInstanceDetailQueryResultItem struct {
	ServiceName                         *uint16
	PartitionId                         windows.GUID
	InstanceId                          int64
	CurrentServiceOperation             FabricQueryServiceOperationName
	CurrentServiceOperationStartTimeUtc windows.Filetime
	ReportedLoad                        *innerFabricLoadMetricReportList
	Reserved                            unsafe.Pointer
}

func (obj *innerFabricDeployedStatelessServiceInstanceDetailQueryResultItem) toGoStruct() *FabricDeployedStatelessServiceInstanceDetailQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedStatelessServiceInstanceDetailQueryResultItem{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionId = obj.PartitionId
	dst.InstanceId = obj.InstanceId
	dst.CurrentServiceOperation = obj.CurrentServiceOperation
	dst.CurrentServiceOperationStartTimeUtc = time.Unix(0, obj.CurrentServiceOperationStartTimeUtc.Nanoseconds())
	{
		var innerlst []innerFabricLoadMetricReport
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ReportedLoad.Items), int(obj.ReportedLoad.Count))

		for _, item := range innerlst {
			var tmpitem FabricLoadMetricReport

			tmpitem = *item.toGoStruct()

			dst.ReportedLoad = append(dst.ReportedLoad, tmpitem)
		}

	}
	return &dst
}

type FabricDeployedStatelessServiceInstanceDetailQueryResultItemEx1 struct {
	DeployedServiceReplica *FabricDeployedStatelessServiceInstanceQueryResultItem
}
type innerFabricDeployedStatelessServiceInstanceDetailQueryResultItemEx1 struct {
	FabricDeployedStatelessServiceInstanceDetailQueryResultItemEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricDeployedStatelessServiceInstanceDetailQueryResultItemEx1) toGoStruct() *FabricDeployedStatelessServiceInstanceDetailQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedStatelessServiceInstanceDetailQueryResultItemEx1
}
func (obj *FabricDeployedStatelessServiceInstanceDetailQueryResultItemEx1) toInnerStruct() *innerFabricDeployedStatelessServiceInstanceDetailQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedStatelessServiceInstanceDetailQueryResultItemEx1{*obj, nil}
}

type FabricRemoteReplicatorStatus struct {
	ReplicaId                             int64
	LastAcknowledgementProcessedTimeUtc   time.Time
	LastReceivedReplicationSequenceNumber int64
	LastAppliedReplicationSequenceNumber  int64
	IsInBuild                             bool
	LastReceivedCopySequenceNumber        int64
	LastAppliedCopySequenceNumber         int64
}

func (obj *FabricRemoteReplicatorStatus) toInnerStruct() *innerFabricRemoteReplicatorStatus {
	if obj == nil {
		return nil
	}
	dst := innerFabricRemoteReplicatorStatus{}
	dst.ReplicaId = obj.ReplicaId
	dst.LastAcknowledgementProcessedTimeUtc = windows.NsecToFiletime(obj.LastAcknowledgementProcessedTimeUtc.UnixNano())
	dst.LastReceivedReplicationSequenceNumber = obj.LastReceivedReplicationSequenceNumber
	dst.LastAppliedReplicationSequenceNumber = obj.LastAppliedReplicationSequenceNumber
	dst.IsInBuild = obj.IsInBuild
	dst.LastReceivedCopySequenceNumber = obj.LastReceivedCopySequenceNumber
	dst.LastAppliedCopySequenceNumber = obj.LastAppliedCopySequenceNumber
	return &dst
}

type innerFabricRemoteReplicatorStatus struct {
	ReplicaId                             int64
	LastAcknowledgementProcessedTimeUtc   windows.Filetime
	LastReceivedReplicationSequenceNumber int64
	LastAppliedReplicationSequenceNumber  int64
	IsInBuild                             bool
	LastReceivedCopySequenceNumber        int64
	LastAppliedCopySequenceNumber         int64
	Reserved                              unsafe.Pointer
}

func (obj *innerFabricRemoteReplicatorStatus) toGoStruct() *FabricRemoteReplicatorStatus {
	if obj == nil {
		return nil
	}
	dst := FabricRemoteReplicatorStatus{}
	dst.ReplicaId = obj.ReplicaId
	dst.LastAcknowledgementProcessedTimeUtc = time.Unix(0, obj.LastAcknowledgementProcessedTimeUtc.Nanoseconds())
	dst.LastReceivedReplicationSequenceNumber = obj.LastReceivedReplicationSequenceNumber
	dst.LastAppliedReplicationSequenceNumber = obj.LastAppliedReplicationSequenceNumber
	dst.IsInBuild = obj.IsInBuild
	dst.LastReceivedCopySequenceNumber = obj.LastReceivedCopySequenceNumber
	dst.LastAppliedCopySequenceNumber = obj.LastAppliedCopySequenceNumber
	return &dst
}

type FabricRemoteReplicatorAcknowledgementDetail struct {
	AverageReceiveDurationMilliseconds int64
	AverageApplyDurationMilliseconds   int64
	NotReceivedCount                   int64
	ReceivedAndNotAppliedCount         int64
}
type innerFabricRemoteReplicatorAcknowledgementDetail struct {
	FabricRemoteReplicatorAcknowledgementDetail
	Reserved unsafe.Pointer
}

func (obj *innerFabricRemoteReplicatorAcknowledgementDetail) toGoStruct() *FabricRemoteReplicatorAcknowledgementDetail {
	if obj == nil {
		return nil
	}
	return &obj.FabricRemoteReplicatorAcknowledgementDetail
}
func (obj *FabricRemoteReplicatorAcknowledgementDetail) toInnerStruct() *innerFabricRemoteReplicatorAcknowledgementDetail {
	if obj == nil {
		return nil
	}
	return &innerFabricRemoteReplicatorAcknowledgementDetail{*obj, nil}
}

type FabricRemoteReplicatorAcknowledgementStatus struct {
	CopyStreamAcknowledgementDetails        *FabricRemoteReplicatorAcknowledgementDetail
	ReplicationStreamAcknowledgementDetails *FabricRemoteReplicatorAcknowledgementDetail
}
type innerFabricRemoteReplicatorAcknowledgementStatus struct {
	FabricRemoteReplicatorAcknowledgementStatus
	Reserved unsafe.Pointer
}

func (obj *innerFabricRemoteReplicatorAcknowledgementStatus) toGoStruct() *FabricRemoteReplicatorAcknowledgementStatus {
	if obj == nil {
		return nil
	}
	return &obj.FabricRemoteReplicatorAcknowledgementStatus
}
func (obj *FabricRemoteReplicatorAcknowledgementStatus) toInnerStruct() *innerFabricRemoteReplicatorAcknowledgementStatus {
	if obj == nil {
		return nil
	}
	return &innerFabricRemoteReplicatorAcknowledgementStatus{*obj, nil}
}

type innerFabricRemoteReplicatorStatusList struct {
	Count uint32
	Items *innerFabricRemoteReplicatorStatus
}

func (obj *innerFabricRemoteReplicatorStatusList) toGoStruct() []FabricRemoteReplicatorStatus {
	var dst []FabricRemoteReplicatorStatus
	{
		var innerlst []innerFabricRemoteReplicatorStatus
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricRemoteReplicatorStatus

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricReplicatorQueueStatus struct {
	QueueUtilizationPercentage uint32
	QueueMemorySize            int64
	FirstSequenceNumber        int64
	CompletedSequenceNumber    int64
	CommittedSequenceNumber    int64
	LastSequenceNumber         int64
}
type innerFabricReplicatorQueueStatus struct {
	FabricReplicatorQueueStatus
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicatorQueueStatus) toGoStruct() *FabricReplicatorQueueStatus {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicatorQueueStatus
}
func (obj *FabricReplicatorQueueStatus) toInnerStruct() *innerFabricReplicatorQueueStatus {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicatorQueueStatus{*obj, nil}
}

type FabricPrimaryReplicatorStatusQueryResult struct {
	ReplicationQueueStatus *FabricReplicatorQueueStatus
	RemoteReplicators      []FabricRemoteReplicatorStatus
}

func (obj *FabricPrimaryReplicatorStatusQueryResult) toInnerStruct() *innerFabricPrimaryReplicatorStatusQueryResult {
	if obj == nil {
		return nil
	}
	dst := innerFabricPrimaryReplicatorStatusQueryResult{}
	dst.ReplicationQueueStatus = obj.ReplicationQueueStatus.toInnerStruct()
	lst_261 := &innerFabricRemoteReplicatorStatusList{}
	{

		var tmp []innerFabricRemoteReplicatorStatus

		for _, item := range obj.RemoteReplicators {
			var tmpitem innerFabricRemoteReplicatorStatus

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_261.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_261.Items = &tmp[0]
		}

	}
	dst.RemoteReplicators = lst_261
	return &dst
}

type innerFabricPrimaryReplicatorStatusQueryResult struct {
	ReplicationQueueStatus *innerFabricReplicatorQueueStatus
	RemoteReplicators      *innerFabricRemoteReplicatorStatusList
	Reserved               unsafe.Pointer
}

func (obj *innerFabricPrimaryReplicatorStatusQueryResult) toGoStruct() *FabricPrimaryReplicatorStatusQueryResult {
	if obj == nil {
		return nil
	}
	dst := FabricPrimaryReplicatorStatusQueryResult{}
	dst.ReplicationQueueStatus = obj.ReplicationQueueStatus.toGoStruct()
	{
		var innerlst []innerFabricRemoteReplicatorStatus
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.RemoteReplicators.Items), int(obj.RemoteReplicators.Count))

		for _, item := range innerlst {
			var tmpitem FabricRemoteReplicatorStatus

			tmpitem = *item.toGoStruct()

			dst.RemoteReplicators = append(dst.RemoteReplicators, tmpitem)
		}

	}
	return &dst
}

type FabricSecondaryReplicatorStatusQueryResult struct {
	ReplicationQueueStatus                  *FabricReplicatorQueueStatus
	LastReplicationOperationReceivedTimeUtc time.Time
	IsInBuild                               bool
	CopyQueueStatus                         *FabricReplicatorQueueStatus
	LastCopyOperationReceivedTimeUtc        time.Time
	LastAcknowledgementSentTimeUtc          time.Time
}

func (obj *FabricSecondaryReplicatorStatusQueryResult) toInnerStruct() *innerFabricSecondaryReplicatorStatusQueryResult {
	if obj == nil {
		return nil
	}
	dst := innerFabricSecondaryReplicatorStatusQueryResult{}
	dst.ReplicationQueueStatus = obj.ReplicationQueueStatus.toInnerStruct()
	dst.LastReplicationOperationReceivedTimeUtc = windows.NsecToFiletime(obj.LastReplicationOperationReceivedTimeUtc.UnixNano())
	dst.IsInBuild = obj.IsInBuild
	dst.CopyQueueStatus = obj.CopyQueueStatus.toInnerStruct()
	dst.LastCopyOperationReceivedTimeUtc = windows.NsecToFiletime(obj.LastCopyOperationReceivedTimeUtc.UnixNano())
	dst.LastAcknowledgementSentTimeUtc = windows.NsecToFiletime(obj.LastAcknowledgementSentTimeUtc.UnixNano())
	return &dst
}

type innerFabricSecondaryReplicatorStatusQueryResult struct {
	ReplicationQueueStatus                  *innerFabricReplicatorQueueStatus
	LastReplicationOperationReceivedTimeUtc windows.Filetime
	IsInBuild                               bool
	CopyQueueStatus                         *innerFabricReplicatorQueueStatus
	LastCopyOperationReceivedTimeUtc        windows.Filetime
	LastAcknowledgementSentTimeUtc          windows.Filetime
	Reserved                                unsafe.Pointer
}

func (obj *innerFabricSecondaryReplicatorStatusQueryResult) toGoStruct() *FabricSecondaryReplicatorStatusQueryResult {
	if obj == nil {
		return nil
	}
	dst := FabricSecondaryReplicatorStatusQueryResult{}
	dst.ReplicationQueueStatus = obj.ReplicationQueueStatus.toGoStruct()
	dst.LastReplicationOperationReceivedTimeUtc = time.Unix(0, obj.LastReplicationOperationReceivedTimeUtc.Nanoseconds())
	dst.IsInBuild = obj.IsInBuild
	dst.CopyQueueStatus = obj.CopyQueueStatus.toGoStruct()
	dst.LastCopyOperationReceivedTimeUtc = time.Unix(0, obj.LastCopyOperationReceivedTimeUtc.Nanoseconds())
	dst.LastAcknowledgementSentTimeUtc = time.Unix(0, obj.LastAcknowledgementSentTimeUtc.Nanoseconds())
	return &dst
}

type FabricReplicatorStatusQueryResult struct {
	Role  FabricReplicaRole
	Value interface{}
}
type innerFabricReplicatorStatusQueryResult struct {
	FabricReplicatorStatusQueryResult
}

func (obj *innerFabricReplicatorStatusQueryResult) toGoStruct() *FabricReplicatorStatusQueryResult {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicatorStatusQueryResult
}
func (obj *FabricReplicatorStatusQueryResult) toInnerStruct() *innerFabricReplicatorStatusQueryResult {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicatorStatusQueryResult{*obj}
}

type FabricReplicaStatusQueryResult struct {
	Kind  FabricServiceReplicaKind
	Value interface{}
}

func (obj *FabricReplicaStatusQueryResult) toInnerStruct() *innerFabricReplicaStatusQueryResult {
	if obj == nil {
		return nil
	}
	dst := innerFabricReplicaStatusQueryResult{}
	dst.Kind = obj.Kind
	dst.Value = toUnsafePointer(obj.Value)
	return &dst
}

type innerFabricReplicaStatusQueryResult struct {
	Kind     FabricServiceReplicaKind
	Value    unsafe.Pointer
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicaStatusQueryResult) toGoStruct() *FabricReplicaStatusQueryResult {
	if obj == nil {
		return nil
	}
	dst := FabricReplicaStatusQueryResult{}
	dst.Kind = obj.Kind
	dst.Value = fromUnsafePointer(obj.Value)
	return &dst
}

type FabricDeployedStatefulServiceReplicaDetailQueryResultItem struct {
	ServiceName                         string
	PartitionId                         windows.GUID
	ReplicaId                           int64
	CurrentServiceOperation             FabricQueryServiceOperationName
	CurrentServiceOperationStartTimeUtc time.Time
	CurrentReplicatorOperation          FabricQueryReplicatorOperationName
	ReadStatus                          FabricServicePartitionAccessStatus
	WriteStatus                         FabricServicePartitionAccessStatus
	ReportedLoad                        []FabricLoadMetricReport
	ReplicatorStatus                    *FabricReplicatorStatusQueryResult
}

func (obj *FabricDeployedStatefulServiceReplicaDetailQueryResultItem) toInnerStruct() *innerFabricDeployedStatefulServiceReplicaDetailQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedStatefulServiceReplicaDetailQueryResultItem{}
	s_262, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_262

	dst.PartitionId = obj.PartitionId
	dst.ReplicaId = obj.ReplicaId
	dst.CurrentServiceOperation = obj.CurrentServiceOperation
	dst.CurrentServiceOperationStartTimeUtc = windows.NsecToFiletime(obj.CurrentServiceOperationStartTimeUtc.UnixNano())
	dst.CurrentReplicatorOperation = obj.CurrentReplicatorOperation
	dst.ReadStatus = obj.ReadStatus
	dst.WriteStatus = obj.WriteStatus
	lst_263 := &innerFabricLoadMetricReportList{}
	{

		var tmp []innerFabricLoadMetricReport

		for _, item := range obj.ReportedLoad {
			var tmpitem innerFabricLoadMetricReport

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_263.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_263.Items = &tmp[0]
		}

	}
	dst.ReportedLoad = lst_263
	dst.ReplicatorStatus = obj.ReplicatorStatus.toInnerStruct()
	return &dst
}

type innerFabricDeployedStatefulServiceReplicaDetailQueryResultItem struct {
	ServiceName                         *uint16
	PartitionId                         windows.GUID
	ReplicaId                           int64
	CurrentServiceOperation             FabricQueryServiceOperationName
	CurrentServiceOperationStartTimeUtc windows.Filetime
	CurrentReplicatorOperation          FabricQueryReplicatorOperationName
	ReadStatus                          FabricServicePartitionAccessStatus
	WriteStatus                         FabricServicePartitionAccessStatus
	ReportedLoad                        *innerFabricLoadMetricReportList
	ReplicatorStatus                    *innerFabricReplicatorStatusQueryResult
	Reserved                            unsafe.Pointer
}

func (obj *innerFabricDeployedStatefulServiceReplicaDetailQueryResultItem) toGoStruct() *FabricDeployedStatefulServiceReplicaDetailQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedStatefulServiceReplicaDetailQueryResultItem{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionId = obj.PartitionId
	dst.ReplicaId = obj.ReplicaId
	dst.CurrentServiceOperation = obj.CurrentServiceOperation
	dst.CurrentServiceOperationStartTimeUtc = time.Unix(0, obj.CurrentServiceOperationStartTimeUtc.Nanoseconds())
	dst.CurrentReplicatorOperation = obj.CurrentReplicatorOperation
	dst.ReadStatus = obj.ReadStatus
	dst.WriteStatus = obj.WriteStatus
	{
		var innerlst []innerFabricLoadMetricReport
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ReportedLoad.Items), int(obj.ReportedLoad.Count))

		for _, item := range innerlst {
			var tmpitem FabricLoadMetricReport

			tmpitem = *item.toGoStruct()

			dst.ReportedLoad = append(dst.ReportedLoad, tmpitem)
		}

	}
	dst.ReplicatorStatus = obj.ReplicatorStatus.toGoStruct()
	return &dst
}

type FabricDeployedStatefulServiceReplicaDetailQueryResultItemEx1 struct {
	ReplicaStatus *FabricReplicaStatusQueryResult
}
type innerFabricDeployedStatefulServiceReplicaDetailQueryResultItemEx1 struct {
	FabricDeployedStatefulServiceReplicaDetailQueryResultItemEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricDeployedStatefulServiceReplicaDetailQueryResultItemEx1) toGoStruct() *FabricDeployedStatefulServiceReplicaDetailQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedStatefulServiceReplicaDetailQueryResultItemEx1
}
func (obj *FabricDeployedStatefulServiceReplicaDetailQueryResultItemEx1) toInnerStruct() *innerFabricDeployedStatefulServiceReplicaDetailQueryResultItemEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedStatefulServiceReplicaDetailQueryResultItemEx1{*obj, nil}
}

type FabricDeployedStatefulServiceReplicaDetailQueryResultItemEx2 struct {
	DeployedServiceReplica *FabricDeployedStatefulServiceReplicaQueryResultItem
}
type innerFabricDeployedStatefulServiceReplicaDetailQueryResultItemEx2 struct {
	FabricDeployedStatefulServiceReplicaDetailQueryResultItemEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricDeployedStatefulServiceReplicaDetailQueryResultItemEx2) toGoStruct() *FabricDeployedStatefulServiceReplicaDetailQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedStatefulServiceReplicaDetailQueryResultItemEx2
}
func (obj *FabricDeployedStatefulServiceReplicaDetailQueryResultItemEx2) toInnerStruct() *innerFabricDeployedStatefulServiceReplicaDetailQueryResultItemEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedStatefulServiceReplicaDetailQueryResultItemEx2{*obj, nil}
}

type FabricKeyValueStoreMigrationQueryResult struct {
	CurrentPhase FabricKeyValueStoreMigrationPhase
	State        FabricKeyValueStoreMigrationState
	NextPhase    FabricKeyValueStoreMigrationPhase
}
type innerFabricKeyValueStoreMigrationQueryResult struct {
	FabricKeyValueStoreMigrationQueryResult
	Reserved unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreMigrationQueryResult) toGoStruct() *FabricKeyValueStoreMigrationQueryResult {
	if obj == nil {
		return nil
	}
	return &obj.FabricKeyValueStoreMigrationQueryResult
}
func (obj *FabricKeyValueStoreMigrationQueryResult) toInnerStruct() *innerFabricKeyValueStoreMigrationQueryResult {
	if obj == nil {
		return nil
	}
	return &innerFabricKeyValueStoreMigrationQueryResult{*obj, nil}
}

type FabricKeyValueStoreStatusQueryResult struct {
	DatabaseRowCountEstimate         int64
	DatabaseLogicalSizeEstimate      int64
	CopyNotificationCurrentKeyFilter string
	CopyNotificationCurrentProgress  int64
	StatusDetails                    string
}

func (obj *FabricKeyValueStoreStatusQueryResult) toInnerStruct() *innerFabricKeyValueStoreStatusQueryResult {
	if obj == nil {
		return nil
	}
	dst := innerFabricKeyValueStoreStatusQueryResult{}
	dst.DatabaseRowCountEstimate = obj.DatabaseRowCountEstimate
	dst.DatabaseLogicalSizeEstimate = obj.DatabaseLogicalSizeEstimate
	s_264, _ := windows.UTF16PtrFromString(obj.CopyNotificationCurrentKeyFilter)
	dst.CopyNotificationCurrentKeyFilter = s_264

	dst.CopyNotificationCurrentProgress = obj.CopyNotificationCurrentProgress
	s_265, _ := windows.UTF16PtrFromString(obj.StatusDetails)
	dst.StatusDetails = s_265

	return &dst
}

type innerFabricKeyValueStoreStatusQueryResult struct {
	DatabaseRowCountEstimate         int64
	DatabaseLogicalSizeEstimate      int64
	CopyNotificationCurrentKeyFilter *uint16
	CopyNotificationCurrentProgress  int64
	StatusDetails                    *uint16
	Reserved                         unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreStatusQueryResult) toGoStruct() *FabricKeyValueStoreStatusQueryResult {
	if obj == nil {
		return nil
	}
	dst := FabricKeyValueStoreStatusQueryResult{}
	dst.DatabaseRowCountEstimate = obj.DatabaseRowCountEstimate
	dst.DatabaseLogicalSizeEstimate = obj.DatabaseLogicalSizeEstimate
	dst.CopyNotificationCurrentKeyFilter = windows.UTF16PtrToString(obj.CopyNotificationCurrentKeyFilter)
	dst.CopyNotificationCurrentProgress = obj.CopyNotificationCurrentProgress
	dst.StatusDetails = windows.UTF16PtrToString(obj.StatusDetails)
	return &dst
}

type FabricKeyValueStoreStatusQueryResultEx1 struct {
	ProviderKind    FabricKeyValueStoreProviderKind
	MigrationStatus *FabricKeyValueStoreMigrationQueryResult
}
type innerFabricKeyValueStoreStatusQueryResultEx1 struct {
	FabricKeyValueStoreStatusQueryResultEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricKeyValueStoreStatusQueryResultEx1) toGoStruct() *FabricKeyValueStoreStatusQueryResultEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricKeyValueStoreStatusQueryResultEx1
}
func (obj *FabricKeyValueStoreStatusQueryResultEx1) toInnerStruct() *innerFabricKeyValueStoreStatusQueryResultEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricKeyValueStoreStatusQueryResultEx1{*obj, nil}
}

type FabricProvisionedCodeVersionQueryDescription struct {
	CodeVersionFilter string
}

func (obj *FabricProvisionedCodeVersionQueryDescription) toInnerStruct() *innerFabricProvisionedCodeVersionQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricProvisionedCodeVersionQueryDescription{}
	s_266, _ := windows.UTF16PtrFromString(obj.CodeVersionFilter)
	dst.CodeVersionFilter = s_266

	return &dst
}

type innerFabricProvisionedCodeVersionQueryDescription struct {
	CodeVersionFilter *uint16
	Reserved          unsafe.Pointer
}

func (obj *innerFabricProvisionedCodeVersionQueryDescription) toGoStruct() *FabricProvisionedCodeVersionQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricProvisionedCodeVersionQueryDescription{}
	dst.CodeVersionFilter = windows.UTF16PtrToString(obj.CodeVersionFilter)
	return &dst
}

type FabricProvisionedCodeVersionQueryResultItem struct {
	CodeVersion string
}

func (obj *FabricProvisionedCodeVersionQueryResultItem) toInnerStruct() *innerFabricProvisionedCodeVersionQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricProvisionedCodeVersionQueryResultItem{}
	s_267, _ := windows.UTF16PtrFromString(obj.CodeVersion)
	dst.CodeVersion = s_267

	return &dst
}

type innerFabricProvisionedCodeVersionQueryResultItem struct {
	CodeVersion *uint16
	Reserved    unsafe.Pointer
}

func (obj *innerFabricProvisionedCodeVersionQueryResultItem) toGoStruct() *FabricProvisionedCodeVersionQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricProvisionedCodeVersionQueryResultItem{}
	dst.CodeVersion = windows.UTF16PtrToString(obj.CodeVersion)
	return &dst
}

type innerFabricProvisionedCodeVersionQueryResultList struct {
	Count uint32
	Items *innerFabricProvisionedCodeVersionQueryResultItem
}

func (obj *innerFabricProvisionedCodeVersionQueryResultList) toGoStruct() []FabricProvisionedCodeVersionQueryResultItem {
	var dst []FabricProvisionedCodeVersionQueryResultItem
	{
		var innerlst []innerFabricProvisionedCodeVersionQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricProvisionedCodeVersionQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricProvisionedConfigVersionQueryDescription struct {
	ConfigVersionFilter string
}

func (obj *FabricProvisionedConfigVersionQueryDescription) toInnerStruct() *innerFabricProvisionedConfigVersionQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricProvisionedConfigVersionQueryDescription{}
	s_268, _ := windows.UTF16PtrFromString(obj.ConfigVersionFilter)
	dst.ConfigVersionFilter = s_268

	return &dst
}

type innerFabricProvisionedConfigVersionQueryDescription struct {
	ConfigVersionFilter *uint16
	Reserved            unsafe.Pointer
}

func (obj *innerFabricProvisionedConfigVersionQueryDescription) toGoStruct() *FabricProvisionedConfigVersionQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricProvisionedConfigVersionQueryDescription{}
	dst.ConfigVersionFilter = windows.UTF16PtrToString(obj.ConfigVersionFilter)
	return &dst
}

type FabricProvisionedConfigVersionQueryResultItem struct {
	ConfigVersion string
}

func (obj *FabricProvisionedConfigVersionQueryResultItem) toInnerStruct() *innerFabricProvisionedConfigVersionQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricProvisionedConfigVersionQueryResultItem{}
	s_269, _ := windows.UTF16PtrFromString(obj.ConfigVersion)
	dst.ConfigVersion = s_269

	return &dst
}

type innerFabricProvisionedConfigVersionQueryResultItem struct {
	ConfigVersion *uint16
	Reserved      unsafe.Pointer
}

func (obj *innerFabricProvisionedConfigVersionQueryResultItem) toGoStruct() *FabricProvisionedConfigVersionQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricProvisionedConfigVersionQueryResultItem{}
	dst.ConfigVersion = windows.UTF16PtrToString(obj.ConfigVersion)
	return &dst
}

type innerFabricProvisionedConfigVersionQueryResultList struct {
	Count uint32
	Items *innerFabricProvisionedConfigVersionQueryResultItem
}

func (obj *innerFabricProvisionedConfigVersionQueryResultList) toGoStruct() []FabricProvisionedConfigVersionQueryResultItem {
	var dst []FabricProvisionedConfigVersionQueryResultItem
	{
		var innerlst []innerFabricProvisionedConfigVersionQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricProvisionedConfigVersionQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServiceNameQueryDescription struct {
	PartitionId windows.GUID
}
type innerFabricServiceNameQueryDescription struct {
	FabricServiceNameQueryDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceNameQueryDescription) toGoStruct() *FabricServiceNameQueryDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceNameQueryDescription
}
func (obj *FabricServiceNameQueryDescription) toInnerStruct() *innerFabricServiceNameQueryDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceNameQueryDescription{*obj, nil}
}

type FabricServiceNameQueryResult struct {
	ServiceName string
}

func (obj *FabricServiceNameQueryResult) toInnerStruct() *innerFabricServiceNameQueryResult {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceNameQueryResult{}
	s_270, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_270

	return &dst
}

type innerFabricServiceNameQueryResult struct {
	ServiceName *uint16
	Reserved    unsafe.Pointer
}

func (obj *innerFabricServiceNameQueryResult) toGoStruct() *FabricServiceNameQueryResult {
	if obj == nil {
		return nil
	}
	dst := FabricServiceNameQueryResult{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	return &dst
}

type FabricApplicationNameQueryDescription struct {
	ServiceName string
}

func (obj *FabricApplicationNameQueryDescription) toInnerStruct() *innerFabricApplicationNameQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationNameQueryDescription{}
	s_271, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_271

	return &dst
}

type innerFabricApplicationNameQueryDescription struct {
	ServiceName *uint16
	Reserved    unsafe.Pointer
}

func (obj *innerFabricApplicationNameQueryDescription) toGoStruct() *FabricApplicationNameQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationNameQueryDescription{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	return &dst
}

type FabricApplicationNameQueryResult struct {
	ApplicationName string
}

func (obj *FabricApplicationNameQueryResult) toInnerStruct() *innerFabricApplicationNameQueryResult {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationNameQueryResult{}
	s_272, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_272

	return &dst
}

type innerFabricApplicationNameQueryResult struct {
	ApplicationName *uint16
	Reserved        unsafe.Pointer
}

func (obj *innerFabricApplicationNameQueryResult) toGoStruct() *FabricApplicationNameQueryResult {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationNameQueryResult{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	return &dst
}

type FabricRestartDeployedCodePackageDescription struct {
	NodeName              string
	ApplicationName       string
	ServiceManifestName   string
	CodePackageName       string
	CodePackageInstanceId int64
}

func (obj *FabricRestartDeployedCodePackageDescription) toInnerStruct() *innerFabricRestartDeployedCodePackageDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricRestartDeployedCodePackageDescription{}
	s_273, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_273

	s_274, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_274

	s_275, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_275

	s_276, _ := windows.UTF16PtrFromString(obj.CodePackageName)
	dst.CodePackageName = s_276

	dst.CodePackageInstanceId = obj.CodePackageInstanceId
	return &dst
}

type innerFabricRestartDeployedCodePackageDescription struct {
	NodeName              *uint16
	ApplicationName       *uint16
	ServiceManifestName   *uint16
	CodePackageName       *uint16
	CodePackageInstanceId int64
	Reserved              unsafe.Pointer
}

func (obj *innerFabricRestartDeployedCodePackageDescription) toGoStruct() *FabricRestartDeployedCodePackageDescription {
	if obj == nil {
		return nil
	}
	dst := FabricRestartDeployedCodePackageDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.CodePackageName = windows.UTF16PtrToString(obj.CodePackageName)
	dst.CodePackageInstanceId = obj.CodePackageInstanceId
	return &dst
}

type FabricRestartNodeDescription struct {
	NodeName       string
	NodeInstanceId uint64
}

func (obj *FabricRestartNodeDescription) toInnerStruct() *innerFabricRestartNodeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricRestartNodeDescription{}
	s_277, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_277

	dst.NodeInstanceId = obj.NodeInstanceId
	return &dst
}

type innerFabricRestartNodeDescription struct {
	NodeName       *uint16
	NodeInstanceId uint64
	Reserved       unsafe.Pointer
}

func (obj *innerFabricRestartNodeDescription) toGoStruct() *FabricRestartNodeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricRestartNodeDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.NodeInstanceId = obj.NodeInstanceId
	return &dst
}

type FabricRestartNodeDescriptionUsingNodeName struct {
	NodeName               string
	NodeInstanceId         uint64
	ShouldCreateFabricDump bool
}

func (obj *FabricRestartNodeDescriptionUsingNodeName) toInnerStruct() *innerFabricRestartNodeDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := innerFabricRestartNodeDescriptionUsingNodeName{}
	s_278, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_278

	dst.NodeInstanceId = obj.NodeInstanceId
	dst.ShouldCreateFabricDump = obj.ShouldCreateFabricDump
	return &dst
}

type innerFabricRestartNodeDescriptionUsingNodeName struct {
	NodeName               *uint16
	NodeInstanceId         uint64
	ShouldCreateFabricDump bool
	Reserved               unsafe.Pointer
}

func (obj *innerFabricRestartNodeDescriptionUsingNodeName) toGoStruct() *FabricRestartNodeDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := FabricRestartNodeDescriptionUsingNodeName{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.NodeInstanceId = obj.NodeInstanceId
	dst.ShouldCreateFabricDump = obj.ShouldCreateFabricDump
	return &dst
}

type FabricRestartNodeDescription2 struct {
	Kind  FabricRestartNodeDescriptionKind
	Value interface{}
}
type innerFabricRestartNodeDescription2 struct {
	FabricRestartNodeDescription2
}

func (obj *innerFabricRestartNodeDescription2) toGoStruct() *FabricRestartNodeDescription2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricRestartNodeDescription2
}
func (obj *FabricRestartNodeDescription2) toInnerStruct() *innerFabricRestartNodeDescription2 {
	if obj == nil {
		return nil
	}
	return &innerFabricRestartNodeDescription2{*obj}
}

type FabricRestartNodeDescriptionEx1 struct {
	CreateFabricDump bool
}
type innerFabricRestartNodeDescriptionEx1 struct {
	FabricRestartNodeDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricRestartNodeDescriptionEx1) toGoStruct() *FabricRestartNodeDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricRestartNodeDescriptionEx1
}
func (obj *FabricRestartNodeDescriptionEx1) toInnerStruct() *innerFabricRestartNodeDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricRestartNodeDescriptionEx1{*obj, nil}
}

type FabricStopNodeDescription struct {
	NodeName       string
	NodeInstanceId uint64
}

func (obj *FabricStopNodeDescription) toInnerStruct() *innerFabricStopNodeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricStopNodeDescription{}
	s_279, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_279

	dst.NodeInstanceId = obj.NodeInstanceId
	return &dst
}

type innerFabricStopNodeDescription struct {
	NodeName       *uint16
	NodeInstanceId uint64
	Reserved       unsafe.Pointer
}

func (obj *innerFabricStopNodeDescription) toGoStruct() *FabricStopNodeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricStopNodeDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.NodeInstanceId = obj.NodeInstanceId
	return &dst
}

type FabricStartNodeDescription struct {
	NodeName              string
	NodeInstanceId        uint64
	IPAddressOrFQDN       string
	ClusterConnectionPort uint32
}

func (obj *FabricStartNodeDescription) toInnerStruct() *innerFabricStartNodeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricStartNodeDescription{}
	s_280, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_280

	dst.NodeInstanceId = obj.NodeInstanceId
	s_281, _ := windows.UTF16PtrFromString(obj.IPAddressOrFQDN)
	dst.IPAddressOrFQDN = s_281

	dst.ClusterConnectionPort = obj.ClusterConnectionPort
	return &dst
}

type innerFabricStartNodeDescription struct {
	NodeName              *uint16
	NodeInstanceId        uint64
	IPAddressOrFQDN       *uint16
	ClusterConnectionPort uint32
	Reserved              unsafe.Pointer
}

func (obj *innerFabricStartNodeDescription) toGoStruct() *FabricStartNodeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricStartNodeDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.NodeInstanceId = obj.NodeInstanceId
	dst.IPAddressOrFQDN = windows.UTF16PtrToString(obj.IPAddressOrFQDN)
	dst.ClusterConnectionPort = obj.ClusterConnectionPort
	return &dst
}

type FabricStartNodeDescription2 struct {
	Kind  FabricStartNodeDescriptionKind
	Value interface{}
}
type innerFabricStartNodeDescription2 struct {
	FabricStartNodeDescription2
}

func (obj *innerFabricStartNodeDescription2) toGoStruct() *FabricStartNodeDescription2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStartNodeDescription2
}
func (obj *FabricStartNodeDescription2) toInnerStruct() *innerFabricStartNodeDescription2 {
	if obj == nil {
		return nil
	}
	return &innerFabricStartNodeDescription2{*obj}
}

type FabricStartNodeDescriptionUsingNodeName struct {
	NodeName              string
	NodeInstanceId        uint64
	IPAddressOrFQDN       string
	ClusterConnectionPort uint32
}

func (obj *FabricStartNodeDescriptionUsingNodeName) toInnerStruct() *innerFabricStartNodeDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := innerFabricStartNodeDescriptionUsingNodeName{}
	s_282, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_282

	dst.NodeInstanceId = obj.NodeInstanceId
	s_283, _ := windows.UTF16PtrFromString(obj.IPAddressOrFQDN)
	dst.IPAddressOrFQDN = s_283

	dst.ClusterConnectionPort = obj.ClusterConnectionPort
	return &dst
}

type innerFabricStartNodeDescriptionUsingNodeName struct {
	NodeName              *uint16
	NodeInstanceId        uint64
	IPAddressOrFQDN       *uint16
	ClusterConnectionPort uint32
	Reserved              unsafe.Pointer
}

func (obj *innerFabricStartNodeDescriptionUsingNodeName) toGoStruct() *FabricStartNodeDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := FabricStartNodeDescriptionUsingNodeName{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.NodeInstanceId = obj.NodeInstanceId
	dst.IPAddressOrFQDN = windows.UTF16PtrToString(obj.IPAddressOrFQDN)
	dst.ClusterConnectionPort = obj.ClusterConnectionPort
	return &dst
}

type FabricStopNodeDescription2 struct {
	Kind  FabricStopNodeDescriptionKind
	Value interface{}
}
type innerFabricStopNodeDescription2 struct {
	FabricStopNodeDescription2
}

func (obj *innerFabricStopNodeDescription2) toGoStruct() *FabricStopNodeDescription2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStopNodeDescription2
}
func (obj *FabricStopNodeDescription2) toInnerStruct() *innerFabricStopNodeDescription2 {
	if obj == nil {
		return nil
	}
	return &innerFabricStopNodeDescription2{*obj}
}

type FabricStopNodeDescriptionUsingNodeName struct {
	NodeName       string
	NodeInstanceId uint64
}

func (obj *FabricStopNodeDescriptionUsingNodeName) toInnerStruct() *innerFabricStopNodeDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := innerFabricStopNodeDescriptionUsingNodeName{}
	s_284, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_284

	dst.NodeInstanceId = obj.NodeInstanceId
	return &dst
}

type innerFabricStopNodeDescriptionUsingNodeName struct {
	NodeName       *uint16
	NodeInstanceId uint64
	Reserved       unsafe.Pointer
}

func (obj *innerFabricStopNodeDescriptionUsingNodeName) toGoStruct() *FabricStopNodeDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := FabricStopNodeDescriptionUsingNodeName{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.NodeInstanceId = obj.NodeInstanceId
	return &dst
}

type FabricRestartDeployedCodePackageDescription2 struct {
	Kind  FabricRestartDeployedCodePackageDescriptionKind
	Value interface{}
}
type innerFabricRestartDeployedCodePackageDescription2 struct {
	FabricRestartDeployedCodePackageDescription2
}

func (obj *innerFabricRestartDeployedCodePackageDescription2) toGoStruct() *FabricRestartDeployedCodePackageDescription2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricRestartDeployedCodePackageDescription2
}
func (obj *FabricRestartDeployedCodePackageDescription2) toInnerStruct() *innerFabricRestartDeployedCodePackageDescription2 {
	if obj == nil {
		return nil
	}
	return &innerFabricRestartDeployedCodePackageDescription2{*obj}
}

type FabricRestartDeployedCodePackageDescriptionUsingNodeName struct {
	NodeName              string
	ApplicationName       string
	ServiceManifestName   string
	CodePackageName       string
	CodePackageInstanceId int64
}

func (obj *FabricRestartDeployedCodePackageDescriptionUsingNodeName) toInnerStruct() *innerFabricRestartDeployedCodePackageDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := innerFabricRestartDeployedCodePackageDescriptionUsingNodeName{}
	s_285, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_285

	s_286, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_286

	s_287, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_287

	s_288, _ := windows.UTF16PtrFromString(obj.CodePackageName)
	dst.CodePackageName = s_288

	dst.CodePackageInstanceId = obj.CodePackageInstanceId
	return &dst
}

type innerFabricRestartDeployedCodePackageDescriptionUsingNodeName struct {
	NodeName              *uint16
	ApplicationName       *uint16
	ServiceManifestName   *uint16
	CodePackageName       *uint16
	CodePackageInstanceId int64
	Reserved              unsafe.Pointer
}

func (obj *innerFabricRestartDeployedCodePackageDescriptionUsingNodeName) toGoStruct() *FabricRestartDeployedCodePackageDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := FabricRestartDeployedCodePackageDescriptionUsingNodeName{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.CodePackageName = windows.UTF16PtrToString(obj.CodePackageName)
	dst.CodePackageInstanceId = obj.CodePackageInstanceId
	return &dst
}

type FabricRestartDeployedCodePackageDescriptionUsingNodeNameEx1 struct {
	ServicePackageActivationId string
}

func (obj *FabricRestartDeployedCodePackageDescriptionUsingNodeNameEx1) toInnerStruct() *innerFabricRestartDeployedCodePackageDescriptionUsingNodeNameEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricRestartDeployedCodePackageDescriptionUsingNodeNameEx1{}
	s_289, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_289

	return &dst
}

type innerFabricRestartDeployedCodePackageDescriptionUsingNodeNameEx1 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricRestartDeployedCodePackageDescriptionUsingNodeNameEx1) toGoStruct() *FabricRestartDeployedCodePackageDescriptionUsingNodeNameEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricRestartDeployedCodePackageDescriptionUsingNodeNameEx1{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type FabricDeployedCodePackageResult struct {
	NodeName              string
	ApplicationName       string
	ServiceManifestName   string
	CodePackageName       string
	CodePackageInstanceId int64
}

func (obj *FabricDeployedCodePackageResult) toInnerStruct() *innerFabricDeployedCodePackageResult {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedCodePackageResult{}
	s_290, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_290

	s_291, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_291

	s_292, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_292

	s_293, _ := windows.UTF16PtrFromString(obj.CodePackageName)
	dst.CodePackageName = s_293

	dst.CodePackageInstanceId = obj.CodePackageInstanceId
	return &dst
}

type innerFabricDeployedCodePackageResult struct {
	NodeName              *uint16
	ApplicationName       *uint16
	ServiceManifestName   *uint16
	CodePackageName       *uint16
	CodePackageInstanceId int64
	Reserved              unsafe.Pointer
}

func (obj *innerFabricDeployedCodePackageResult) toGoStruct() *FabricDeployedCodePackageResult {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedCodePackageResult{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.CodePackageName = windows.UTF16PtrToString(obj.CodePackageName)
	dst.CodePackageInstanceId = obj.CodePackageInstanceId
	return &dst
}

type FabricDeployedCodePackageResultEx1 struct {
	ServicePackageActivationId string
}

func (obj *FabricDeployedCodePackageResultEx1) toInnerStruct() *innerFabricDeployedCodePackageResultEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedCodePackageResultEx1{}
	s_294, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_294

	return &dst
}

type innerFabricDeployedCodePackageResultEx1 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedCodePackageResultEx1) toGoStruct() *FabricDeployedCodePackageResultEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedCodePackageResultEx1{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type FabricMovePrimaryDescription2 struct {
	Kind  FabricMovePrimaryDescriptionKind
	Value interface{}
}
type innerFabricMovePrimaryDescription2 struct {
	FabricMovePrimaryDescription2
}

func (obj *innerFabricMovePrimaryDescription2) toGoStruct() *FabricMovePrimaryDescription2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricMovePrimaryDescription2
}
func (obj *FabricMovePrimaryDescription2) toInnerStruct() *innerFabricMovePrimaryDescription2 {
	if obj == nil {
		return nil
	}
	return &innerFabricMovePrimaryDescription2{*obj}
}

type FabricMovePrimaryDescriptionUsingNodeName struct {
	NodeName          string
	ServiceName       string
	PartitionId       windows.GUID
	IgnoreConstraints bool
}

func (obj *FabricMovePrimaryDescriptionUsingNodeName) toInnerStruct() *innerFabricMovePrimaryDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := innerFabricMovePrimaryDescriptionUsingNodeName{}
	s_295, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_295

	s_296, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_296

	dst.PartitionId = obj.PartitionId
	dst.IgnoreConstraints = obj.IgnoreConstraints
	return &dst
}

type innerFabricMovePrimaryDescriptionUsingNodeName struct {
	NodeName          *uint16
	ServiceName       *uint16
	PartitionId       windows.GUID
	IgnoreConstraints bool
	Reserved          unsafe.Pointer
}

func (obj *innerFabricMovePrimaryDescriptionUsingNodeName) toGoStruct() *FabricMovePrimaryDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := FabricMovePrimaryDescriptionUsingNodeName{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionId = obj.PartitionId
	dst.IgnoreConstraints = obj.IgnoreConstraints
	return &dst
}

type FabricMovePrimaryResult struct {
	NodeName    string
	ServiceName string
	PartitionId windows.GUID
}

func (obj *FabricMovePrimaryResult) toInnerStruct() *innerFabricMovePrimaryResult {
	if obj == nil {
		return nil
	}
	dst := innerFabricMovePrimaryResult{}
	s_297, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_297

	s_298, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_298

	dst.PartitionId = obj.PartitionId
	return &dst
}

type innerFabricMovePrimaryResult struct {
	NodeName    *uint16
	ServiceName *uint16
	PartitionId windows.GUID
	Reserved    unsafe.Pointer
}

func (obj *innerFabricMovePrimaryResult) toGoStruct() *FabricMovePrimaryResult {
	if obj == nil {
		return nil
	}
	dst := FabricMovePrimaryResult{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionId = obj.PartitionId
	return &dst
}

type FabricMoveSecondaryDescription2 struct {
	Kind  FabricMoveSecondaryDescriptionKind
	Value interface{}
}
type innerFabricMoveSecondaryDescription2 struct {
	FabricMoveSecondaryDescription2
}

func (obj *innerFabricMoveSecondaryDescription2) toGoStruct() *FabricMoveSecondaryDescription2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricMoveSecondaryDescription2
}
func (obj *FabricMoveSecondaryDescription2) toInnerStruct() *innerFabricMoveSecondaryDescription2 {
	if obj == nil {
		return nil
	}
	return &innerFabricMoveSecondaryDescription2{*obj}
}

type FabricMoveSecondaryDescriptionUsingNodeName struct {
	CurrentNodeName   string
	NewNodeName       string
	ServiceName       string
	PartitionId       windows.GUID
	IgnoreConstraints bool
}

func (obj *FabricMoveSecondaryDescriptionUsingNodeName) toInnerStruct() *innerFabricMoveSecondaryDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := innerFabricMoveSecondaryDescriptionUsingNodeName{}
	s_299, _ := windows.UTF16PtrFromString(obj.CurrentNodeName)
	dst.CurrentNodeName = s_299

	s_300, _ := windows.UTF16PtrFromString(obj.NewNodeName)
	dst.NewNodeName = s_300

	s_301, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_301

	dst.PartitionId = obj.PartitionId
	dst.IgnoreConstraints = obj.IgnoreConstraints
	return &dst
}

type innerFabricMoveSecondaryDescriptionUsingNodeName struct {
	CurrentNodeName   *uint16
	NewNodeName       *uint16
	ServiceName       *uint16
	PartitionId       windows.GUID
	IgnoreConstraints bool
	Reserved          unsafe.Pointer
}

func (obj *innerFabricMoveSecondaryDescriptionUsingNodeName) toGoStruct() *FabricMoveSecondaryDescriptionUsingNodeName {
	if obj == nil {
		return nil
	}
	dst := FabricMoveSecondaryDescriptionUsingNodeName{}
	dst.CurrentNodeName = windows.UTF16PtrToString(obj.CurrentNodeName)
	dst.NewNodeName = windows.UTF16PtrToString(obj.NewNodeName)
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionId = obj.PartitionId
	dst.IgnoreConstraints = obj.IgnoreConstraints
	return &dst
}

type FabricMoveSecondaryResult struct {
	CurrentNodeName string
	NewNodeName     string
	ServiceName     string
	PartitionId     windows.GUID
}

func (obj *FabricMoveSecondaryResult) toInnerStruct() *innerFabricMoveSecondaryResult {
	if obj == nil {
		return nil
	}
	dst := innerFabricMoveSecondaryResult{}
	s_302, _ := windows.UTF16PtrFromString(obj.CurrentNodeName)
	dst.CurrentNodeName = s_302

	s_303, _ := windows.UTF16PtrFromString(obj.NewNodeName)
	dst.NewNodeName = s_303

	s_304, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_304

	dst.PartitionId = obj.PartitionId
	return &dst
}

type innerFabricMoveSecondaryResult struct {
	CurrentNodeName *uint16
	NewNodeName     *uint16
	ServiceName     *uint16
	PartitionId     windows.GUID
	Reserved        unsafe.Pointer
}

func (obj *innerFabricMoveSecondaryResult) toGoStruct() *FabricMoveSecondaryResult {
	if obj == nil {
		return nil
	}
	dst := FabricMoveSecondaryResult{}
	dst.CurrentNodeName = windows.UTF16PtrToString(obj.CurrentNodeName)
	dst.NewNodeName = windows.UTF16PtrToString(obj.NewNodeName)
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionId = obj.PartitionId
	return &dst
}

type FabricRestartReplicaDescription struct {
	NodeName            string
	PartitionId         windows.GUID
	ReplicaOrInstanceId int64
}

func (obj *FabricRestartReplicaDescription) toInnerStruct() *innerFabricRestartReplicaDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricRestartReplicaDescription{}
	s_305, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_305

	dst.PartitionId = obj.PartitionId
	dst.ReplicaOrInstanceId = obj.ReplicaOrInstanceId
	return &dst
}

type innerFabricRestartReplicaDescription struct {
	NodeName            *uint16
	PartitionId         windows.GUID
	ReplicaOrInstanceId int64
	Reserved            unsafe.Pointer
}

func (obj *innerFabricRestartReplicaDescription) toGoStruct() *FabricRestartReplicaDescription {
	if obj == nil {
		return nil
	}
	dst := FabricRestartReplicaDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.PartitionId = obj.PartitionId
	dst.ReplicaOrInstanceId = obj.ReplicaOrInstanceId
	return &dst
}

type FabricRemoveReplicaDescription struct {
	NodeName            string
	PartitionId         windows.GUID
	ReplicaOrInstanceId int64
}

func (obj *FabricRemoveReplicaDescription) toInnerStruct() *innerFabricRemoveReplicaDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricRemoveReplicaDescription{}
	s_306, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_306

	dst.PartitionId = obj.PartitionId
	dst.ReplicaOrInstanceId = obj.ReplicaOrInstanceId
	return &dst
}

type innerFabricRemoveReplicaDescription struct {
	NodeName            *uint16
	PartitionId         windows.GUID
	ReplicaOrInstanceId int64
	Reserved            unsafe.Pointer
}

func (obj *innerFabricRemoveReplicaDescription) toGoStruct() *FabricRemoveReplicaDescription {
	if obj == nil {
		return nil
	}
	dst := FabricRemoveReplicaDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.PartitionId = obj.PartitionId
	dst.ReplicaOrInstanceId = obj.ReplicaOrInstanceId
	return &dst
}

type FabricRemoveReplicaDescriptionEx1 struct {
	ForceRemove bool
}
type innerFabricRemoveReplicaDescriptionEx1 struct {
	FabricRemoveReplicaDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricRemoveReplicaDescriptionEx1) toGoStruct() *FabricRemoveReplicaDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricRemoveReplicaDescriptionEx1
}
func (obj *FabricRemoveReplicaDescriptionEx1) toInnerStruct() *innerFabricRemoveReplicaDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricRemoveReplicaDescriptionEx1{*obj, nil}
}

type FabricHealthReportSendOptions struct {
	Immediate bool
}
type innerFabricHealthReportSendOptions struct {
	FabricHealthReportSendOptions
	Reserved unsafe.Pointer
}

func (obj *innerFabricHealthReportSendOptions) toGoStruct() *FabricHealthReportSendOptions {
	if obj == nil {
		return nil
	}
	return &obj.FabricHealthReportSendOptions
}
func (obj *FabricHealthReportSendOptions) toInnerStruct() *innerFabricHealthReportSendOptions {
	if obj == nil {
		return nil
	}
	return &innerFabricHealthReportSendOptions{*obj, nil}
}

type FabricHealthInformation struct {
	SourceId          string
	Property          string
	TimeToLiveSeconds uint32
	State             FabricHealthState
	Description       string
	SequenceNumber    int64
	RemoveWhenExpired bool
}

func (obj *FabricHealthInformation) toInnerStruct() *innerFabricHealthInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricHealthInformation{}
	s_307, _ := windows.UTF16PtrFromString(obj.SourceId)
	dst.SourceId = s_307

	s_308, _ := windows.UTF16PtrFromString(obj.Property)
	dst.Property = s_308

	dst.TimeToLiveSeconds = obj.TimeToLiveSeconds
	dst.State = obj.State
	s_309, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_309

	dst.SequenceNumber = obj.SequenceNumber
	dst.RemoveWhenExpired = obj.RemoveWhenExpired
	return &dst
}

type innerFabricHealthInformation struct {
	SourceId          *uint16
	Property          *uint16
	TimeToLiveSeconds uint32
	State             FabricHealthState
	Description       *uint16
	SequenceNumber    int64
	RemoveWhenExpired bool
	Reserved          unsafe.Pointer
}

func (obj *innerFabricHealthInformation) toGoStruct() *FabricHealthInformation {
	if obj == nil {
		return nil
	}
	dst := FabricHealthInformation{}
	dst.SourceId = windows.UTF16PtrToString(obj.SourceId)
	dst.Property = windows.UTF16PtrToString(obj.Property)
	dst.TimeToLiveSeconds = obj.TimeToLiveSeconds
	dst.State = obj.State
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.SequenceNumber = obj.SequenceNumber
	dst.RemoveWhenExpired = obj.RemoveWhenExpired
	return &dst
}

type FabricHealthReport struct {
	Kind  FabricHealthReportKind
	Value interface{}
}
type innerFabricHealthReport struct {
	FabricHealthReport
}

func (obj *innerFabricHealthReport) toGoStruct() *FabricHealthReport {
	if obj == nil {
		return nil
	}
	return &obj.FabricHealthReport
}
func (obj *FabricHealthReport) toInnerStruct() *innerFabricHealthReport {
	if obj == nil {
		return nil
	}
	return &innerFabricHealthReport{*obj}
}

type FabricClusterHealthReport struct {
	HealthInformation *FabricHealthInformation
}
type innerFabricClusterHealthReport struct {
	FabricClusterHealthReport
	Reserved unsafe.Pointer
}

func (obj *innerFabricClusterHealthReport) toGoStruct() *FabricClusterHealthReport {
	if obj == nil {
		return nil
	}
	return &obj.FabricClusterHealthReport
}
func (obj *FabricClusterHealthReport) toInnerStruct() *innerFabricClusterHealthReport {
	if obj == nil {
		return nil
	}
	return &innerFabricClusterHealthReport{*obj, nil}
}

type FabricStatelessServiceInstanceHealthReport struct {
	PartitionId       windows.GUID
	InstanceId        int64
	HealthInformation *FabricHealthInformation
}
type innerFabricStatelessServiceInstanceHealthReport struct {
	FabricStatelessServiceInstanceHealthReport
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatelessServiceInstanceHealthReport) toGoStruct() *FabricStatelessServiceInstanceHealthReport {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatelessServiceInstanceHealthReport
}
func (obj *FabricStatelessServiceInstanceHealthReport) toInnerStruct() *innerFabricStatelessServiceInstanceHealthReport {
	if obj == nil {
		return nil
	}
	return &innerFabricStatelessServiceInstanceHealthReport{*obj, nil}
}

type FabricStatefulServiceReplicaHealthReport struct {
	PartitionId       windows.GUID
	ReplicaId         int64
	HealthInformation *FabricHealthInformation
}
type innerFabricStatefulServiceReplicaHealthReport struct {
	FabricStatefulServiceReplicaHealthReport
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceReplicaHealthReport) toGoStruct() *FabricStatefulServiceReplicaHealthReport {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceReplicaHealthReport
}
func (obj *FabricStatefulServiceReplicaHealthReport) toInnerStruct() *innerFabricStatefulServiceReplicaHealthReport {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceReplicaHealthReport{*obj, nil}
}

type FabricPartitionHealthReport struct {
	PartitionId       windows.GUID
	HealthInformation *FabricHealthInformation
}
type innerFabricPartitionHealthReport struct {
	FabricPartitionHealthReport
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionHealthReport) toGoStruct() *FabricPartitionHealthReport {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionHealthReport
}
func (obj *FabricPartitionHealthReport) toInnerStruct() *innerFabricPartitionHealthReport {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionHealthReport{*obj, nil}
}

type FabricNodeHealthReport struct {
	NodeName          string
	HealthInformation *FabricHealthInformation
}

func (obj *FabricNodeHealthReport) toInnerStruct() *innerFabricNodeHealthReport {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeHealthReport{}
	s_310, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_310

	dst.HealthInformation = obj.HealthInformation.toInnerStruct()
	return &dst
}

type innerFabricNodeHealthReport struct {
	NodeName          *uint16
	HealthInformation *innerFabricHealthInformation
	Reserved          unsafe.Pointer
}

func (obj *innerFabricNodeHealthReport) toGoStruct() *FabricNodeHealthReport {
	if obj == nil {
		return nil
	}
	dst := FabricNodeHealthReport{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.HealthInformation = obj.HealthInformation.toGoStruct()
	return &dst
}

type FabricApplicationHealthReport struct {
	ApplicationName   string
	HealthInformation *FabricHealthInformation
}

func (obj *FabricApplicationHealthReport) toInnerStruct() *innerFabricApplicationHealthReport {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealthReport{}
	s_311, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_311

	dst.HealthInformation = obj.HealthInformation.toInnerStruct()
	return &dst
}

type innerFabricApplicationHealthReport struct {
	ApplicationName   *uint16
	HealthInformation *innerFabricHealthInformation
	Reserved          unsafe.Pointer
}

func (obj *innerFabricApplicationHealthReport) toGoStruct() *FabricApplicationHealthReport {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealthReport{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.HealthInformation = obj.HealthInformation.toGoStruct()
	return &dst
}

type FabricServiceHealthReport struct {
	ServiceName       string
	HealthInformation *FabricHealthInformation
}

func (obj *FabricServiceHealthReport) toInnerStruct() *innerFabricServiceHealthReport {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceHealthReport{}
	s_312, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_312

	dst.HealthInformation = obj.HealthInformation.toInnerStruct()
	return &dst
}

type innerFabricServiceHealthReport struct {
	ServiceName       *uint16
	HealthInformation *innerFabricHealthInformation
	Reserved          unsafe.Pointer
}

func (obj *innerFabricServiceHealthReport) toGoStruct() *FabricServiceHealthReport {
	if obj == nil {
		return nil
	}
	dst := FabricServiceHealthReport{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.HealthInformation = obj.HealthInformation.toGoStruct()
	return &dst
}

type FabricDeployedServicePackageHealthReport struct {
	ApplicationName     string
	ServiceManifestName string
	NodeName            string
	HealthInformation   *FabricHealthInformation
}

func (obj *FabricDeployedServicePackageHealthReport) toInnerStruct() *innerFabricDeployedServicePackageHealthReport {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthReport{}
	s_313, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_313

	s_314, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_314

	s_315, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_315

	dst.HealthInformation = obj.HealthInformation.toInnerStruct()
	return &dst
}

type innerFabricDeployedServicePackageHealthReport struct {
	ApplicationName     *uint16
	ServiceManifestName *uint16
	NodeName            *uint16
	HealthInformation   *innerFabricHealthInformation
	Reserved            unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthReport) toGoStruct() *FabricDeployedServicePackageHealthReport {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthReport{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.HealthInformation = obj.HealthInformation.toGoStruct()
	return &dst
}

type FabricDeployedServicePackageHealthReportEx1 struct {
	ServicePackageActivationId string
}

func (obj *FabricDeployedServicePackageHealthReportEx1) toInnerStruct() *innerFabricDeployedServicePackageHealthReportEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthReportEx1{}
	s_316, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_316

	return &dst
}

type innerFabricDeployedServicePackageHealthReportEx1 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthReportEx1) toGoStruct() *FabricDeployedServicePackageHealthReportEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthReportEx1{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type FabricDeployedApplicationHealthReport struct {
	ApplicationName   string
	NodeName          string
	HealthInformation *FabricHealthInformation
}

func (obj *FabricDeployedApplicationHealthReport) toInnerStruct() *innerFabricDeployedApplicationHealthReport {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationHealthReport{}
	s_317, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_317

	s_318, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_318

	dst.HealthInformation = obj.HealthInformation.toInnerStruct()
	return &dst
}

type innerFabricDeployedApplicationHealthReport struct {
	ApplicationName   *uint16
	NodeName          *uint16
	HealthInformation *innerFabricHealthInformation
	Reserved          unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthReport) toGoStruct() *FabricDeployedApplicationHealthReport {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationHealthReport{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.HealthInformation = obj.HealthInformation.toGoStruct()
	return &dst
}

type FabricServiceTypeHealthPolicy struct {
	MaxPercentUnhealthyServices             byte
	MaxPercentUnhealthyPartitionsPerService byte
	MaxPercentUnhealthyReplicasPerPartition byte
}
type innerFabricServiceTypeHealthPolicy struct {
	FabricServiceTypeHealthPolicy
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceTypeHealthPolicy) toGoStruct() *FabricServiceTypeHealthPolicy {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceTypeHealthPolicy
}
func (obj *FabricServiceTypeHealthPolicy) toInnerStruct() *innerFabricServiceTypeHealthPolicy {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceTypeHealthPolicy{*obj, nil}
}

type FabricServiceTypeHealthPolicyMapItem struct {
	ServiceTypeName         string
	ServiceTypeHealthPolicy *FabricServiceTypeHealthPolicy
}

func (obj *FabricServiceTypeHealthPolicyMapItem) toInnerStruct() *innerFabricServiceTypeHealthPolicyMapItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceTypeHealthPolicyMapItem{}
	s_319, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_319

	dst.ServiceTypeHealthPolicy = obj.ServiceTypeHealthPolicy.toInnerStruct()
	return &dst
}

type innerFabricServiceTypeHealthPolicyMapItem struct {
	ServiceTypeName         *uint16
	ServiceTypeHealthPolicy *innerFabricServiceTypeHealthPolicy
}

func (obj *innerFabricServiceTypeHealthPolicyMapItem) toGoStruct() *FabricServiceTypeHealthPolicyMapItem {
	if obj == nil {
		return nil
	}
	dst := FabricServiceTypeHealthPolicyMapItem{}
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	dst.ServiceTypeHealthPolicy = obj.ServiceTypeHealthPolicy.toGoStruct()
	return &dst
}

type innerFabricServiceTypeHealthPolicyMap struct {
	Count uint32
	Items *innerFabricServiceTypeHealthPolicyMapItem
}

func (obj *innerFabricServiceTypeHealthPolicyMap) toGoStruct() map[string]FabricServiceTypeHealthPolicy {
	var dst = make(map[string]FabricServiceTypeHealthPolicy)
	{
		var mapvar = make(map[string]FabricServiceTypeHealthPolicy)

		var innerlst []innerFabricServiceTypeHealthPolicyMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, kv := range innerlst {
			var k string
			var v *FabricServiceTypeHealthPolicy

			k = windows.UTF16PtrToString(kv.ServiceTypeName)
			v = kv.ServiceTypeHealthPolicy.toGoStruct()
			mapvar[k] = *v

		}

		dst = mapvar
	}
	return dst
}

type FabricApplicationHealthPolicy struct {
	ConsiderWarningAsError                  bool
	MaxPercentUnhealthyDeployedApplications byte
	DefaultServiceTypeHealthPolicy          *FabricServiceTypeHealthPolicy
	ServiceTypeHealthPolicyMap              map[string]FabricServiceTypeHealthPolicy
}

func (obj *FabricApplicationHealthPolicy) toInnerStruct() *innerFabricApplicationHealthPolicy {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealthPolicy{}
	dst.ConsiderWarningAsError = obj.ConsiderWarningAsError
	dst.MaxPercentUnhealthyDeployedApplications = obj.MaxPercentUnhealthyDeployedApplications
	dst.DefaultServiceTypeHealthPolicy = obj.DefaultServiceTypeHealthPolicy.toInnerStruct()
	{
		mapobj := &innerFabricServiceTypeHealthPolicyMap{}

		var tmp []innerFabricServiceTypeHealthPolicyMapItem

		for k, v := range obj.ServiceTypeHealthPolicyMap {
			kv := innerFabricServiceTypeHealthPolicyMapItem{}

			s_322, _ := windows.UTF16PtrFromString(k)
			kv.ServiceTypeName = s_322

			kv.ServiceTypeHealthPolicy = v.toInnerStruct()

			tmp = append(tmp, kv)
		}

		mapobj.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			mapobj.Items = &tmp[0]
		}

		dst.ServiceTypeHealthPolicyMap = mapobj
	}
	return &dst
}

type innerFabricApplicationHealthPolicy struct {
	ConsiderWarningAsError                  bool
	MaxPercentUnhealthyDeployedApplications byte
	DefaultServiceTypeHealthPolicy          *innerFabricServiceTypeHealthPolicy
	ServiceTypeHealthPolicyMap              *innerFabricServiceTypeHealthPolicyMap
	Reserved                                unsafe.Pointer
}

func (obj *innerFabricApplicationHealthPolicy) toGoStruct() *FabricApplicationHealthPolicy {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealthPolicy{}
	dst.ConsiderWarningAsError = obj.ConsiderWarningAsError
	dst.MaxPercentUnhealthyDeployedApplications = obj.MaxPercentUnhealthyDeployedApplications
	dst.DefaultServiceTypeHealthPolicy = obj.DefaultServiceTypeHealthPolicy.toGoStruct()
	{
		var mapvar = make(map[string]FabricServiceTypeHealthPolicy)

		var innerlst []innerFabricServiceTypeHealthPolicyMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ServiceTypeHealthPolicyMap.Items), int(obj.ServiceTypeHealthPolicyMap.Count))

		for _, kv := range innerlst {
			var k string
			var v *FabricServiceTypeHealthPolicy

			k = windows.UTF16PtrToString(kv.ServiceTypeName)
			v = kv.ServiceTypeHealthPolicy.toGoStruct()
			mapvar[k] = *v

		}

		dst.ServiceTypeHealthPolicyMap = mapvar
	}
	return &dst
}

type FabricApplicationHealthPolicyMapItem struct {
	ApplicationName string
	HealthPolicy    *FabricApplicationHealthPolicy
}

func (obj *FabricApplicationHealthPolicyMapItem) toInnerStruct() *innerFabricApplicationHealthPolicyMapItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealthPolicyMapItem{}
	s_324, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_324

	dst.HealthPolicy = obj.HealthPolicy.toInnerStruct()
	return &dst
}

type innerFabricApplicationHealthPolicyMapItem struct {
	ApplicationName *uint16
	HealthPolicy    *innerFabricApplicationHealthPolicy
}

func (obj *innerFabricApplicationHealthPolicyMapItem) toGoStruct() *FabricApplicationHealthPolicyMapItem {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealthPolicyMapItem{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.HealthPolicy = obj.HealthPolicy.toGoStruct()
	return &dst
}

type innerFabricApplicationHealthPolicyMap struct {
	Count uint32
	Items *innerFabricApplicationHealthPolicyMapItem
}

func (obj *innerFabricApplicationHealthPolicyMap) toGoStruct() map[string]FabricApplicationHealthPolicy {
	var dst = make(map[string]FabricApplicationHealthPolicy)
	{
		var mapvar = make(map[string]FabricApplicationHealthPolicy)

		var innerlst []innerFabricApplicationHealthPolicyMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, kv := range innerlst {
			var k string
			var v *FabricApplicationHealthPolicy

			k = windows.UTF16PtrToString(kv.ApplicationName)
			v = kv.HealthPolicy.toGoStruct()
			mapvar[k] = *v

		}

		dst = mapvar
	}
	return dst
}

type FabricClusterHealthPolicy struct {
	ConsiderWarningAsError          bool
	MaxPercentUnhealthyNodes        byte
	MaxPercentUnhealthyApplications byte
}
type innerFabricClusterHealthPolicy struct {
	FabricClusterHealthPolicy
	Reserved unsafe.Pointer
}

func (obj *innerFabricClusterHealthPolicy) toGoStruct() *FabricClusterHealthPolicy {
	if obj == nil {
		return nil
	}
	return &obj.FabricClusterHealthPolicy
}
func (obj *FabricClusterHealthPolicy) toInnerStruct() *innerFabricClusterHealthPolicy {
	if obj == nil {
		return nil
	}
	return &innerFabricClusterHealthPolicy{*obj, nil}
}

type FabricClusterUpgradeHealthPolicy struct {
	MaxPercentDeltaUnhealthyNodes              byte
	MaxPercentUpgradeDomainDeltaUnhealthyNodes byte
}
type innerFabricClusterUpgradeHealthPolicy struct {
	FabricClusterUpgradeHealthPolicy
	Reserved unsafe.Pointer
}

func (obj *innerFabricClusterUpgradeHealthPolicy) toGoStruct() *FabricClusterUpgradeHealthPolicy {
	if obj == nil {
		return nil
	}
	return &obj.FabricClusterUpgradeHealthPolicy
}
func (obj *FabricClusterUpgradeHealthPolicy) toInnerStruct() *innerFabricClusterUpgradeHealthPolicy {
	if obj == nil {
		return nil
	}
	return &innerFabricClusterUpgradeHealthPolicy{*obj, nil}
}

type FabricLoadMetricInformation struct {
	Name               string
	IsBalancedBefore   bool
	IsBalancedAfter    bool
	DeviationBefore    float64
	DeviationAfter     float64
	BalancingThreshold float64
	Action             string
}

func (obj *FabricLoadMetricInformation) toInnerStruct() *innerFabricLoadMetricInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricLoadMetricInformation{}
	s_326, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_326

	dst.IsBalancedBefore = obj.IsBalancedBefore
	dst.IsBalancedAfter = obj.IsBalancedAfter
	dst.DeviationBefore = obj.DeviationBefore
	dst.DeviationAfter = obj.DeviationAfter
	dst.BalancingThreshold = obj.BalancingThreshold
	s_327, _ := windows.UTF16PtrFromString(obj.Action)
	dst.Action = s_327

	return &dst
}

type innerFabricLoadMetricInformation struct {
	Name               *uint16
	IsBalancedBefore   bool
	IsBalancedAfter    bool
	DeviationBefore    float64
	DeviationAfter     float64
	BalancingThreshold float64
	Action             *uint16
	Reserved           unsafe.Pointer
}

func (obj *innerFabricLoadMetricInformation) toGoStruct() *FabricLoadMetricInformation {
	if obj == nil {
		return nil
	}
	dst := FabricLoadMetricInformation{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.IsBalancedBefore = obj.IsBalancedBefore
	dst.IsBalancedAfter = obj.IsBalancedAfter
	dst.DeviationBefore = obj.DeviationBefore
	dst.DeviationAfter = obj.DeviationAfter
	dst.BalancingThreshold = obj.BalancingThreshold
	dst.Action = windows.UTF16PtrToString(obj.Action)
	return &dst
}

type FabricLoadMetricInformationEx1 struct {
	ActivityThreshold uint32
	ClusterCapacity   int64
	ClusterLoad       int64
}
type innerFabricLoadMetricInformationEx1 struct {
	FabricLoadMetricInformationEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricLoadMetricInformationEx1) toGoStruct() *FabricLoadMetricInformationEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricLoadMetricInformationEx1
}
func (obj *FabricLoadMetricInformationEx1) toInnerStruct() *innerFabricLoadMetricInformationEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricLoadMetricInformationEx1{*obj, nil}
}

type FabricLoadMetricInformationEx2 struct {
	RemainingUnbufferedCapacity int64
	NodeBufferPercentage        float64
	BufferedCapacity            int64
	RemainingBufferedCapacity   int64
	IsClusterCapacityViolation  bool
	MinNodeLoadValue            int64
	MinNodeLoadNodeId           FabricNodeId
	MaxNodeLoadValue            int64
	MaxNodeLoadNodeId           FabricNodeId
}
type innerFabricLoadMetricInformationEx2 struct {
	FabricLoadMetricInformationEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricLoadMetricInformationEx2) toGoStruct() *FabricLoadMetricInformationEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricLoadMetricInformationEx2
}
func (obj *FabricLoadMetricInformationEx2) toInnerStruct() *innerFabricLoadMetricInformationEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricLoadMetricInformationEx2{*obj, nil}
}

type FabricLoadMetricInformationEx3 struct {
	CurrentClusterLoad               float64
	BufferedClusterCapacityRemaining float64
	ClusterCapacityRemaining         float64
	MaximumNodeLoad                  float64
	MinimumNodeLoad                  float64
}
type innerFabricLoadMetricInformationEx3 struct {
	FabricLoadMetricInformationEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricLoadMetricInformationEx3) toGoStruct() *FabricLoadMetricInformationEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricLoadMetricInformationEx3
}
func (obj *FabricLoadMetricInformationEx3) toInnerStruct() *innerFabricLoadMetricInformationEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricLoadMetricInformationEx3{*obj, nil}
}

type innerFabricLoadMetricInformationList struct {
	Count uint32
	Items *innerFabricLoadMetricInformation
}

func (obj *innerFabricLoadMetricInformationList) toGoStruct() []FabricLoadMetricInformation {
	var dst []FabricLoadMetricInformation
	{
		var innerlst []innerFabricLoadMetricInformation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricLoadMetricInformation

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricClusterLoadInformation struct {
	LastBalancingStartTimeUtc time.Time
	LastBalancingEndTimeUtc   time.Time
	LoadMetricInformation     []FabricLoadMetricInformation
}

func (obj *FabricClusterLoadInformation) toInnerStruct() *innerFabricClusterLoadInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricClusterLoadInformation{}
	dst.LastBalancingStartTimeUtc = windows.NsecToFiletime(obj.LastBalancingStartTimeUtc.UnixNano())
	dst.LastBalancingEndTimeUtc = windows.NsecToFiletime(obj.LastBalancingEndTimeUtc.UnixNano())
	lst_328 := &innerFabricLoadMetricInformationList{}
	{

		var tmp []innerFabricLoadMetricInformation

		for _, item := range obj.LoadMetricInformation {
			var tmpitem innerFabricLoadMetricInformation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_328.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_328.Items = &tmp[0]
		}

	}
	dst.LoadMetricInformation = lst_328
	return &dst
}

type innerFabricClusterLoadInformation struct {
	LastBalancingStartTimeUtc windows.Filetime
	LastBalancingEndTimeUtc   windows.Filetime
	LoadMetricInformation     *innerFabricLoadMetricInformationList
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricClusterLoadInformation) toGoStruct() *FabricClusterLoadInformation {
	if obj == nil {
		return nil
	}
	dst := FabricClusterLoadInformation{}
	dst.LastBalancingStartTimeUtc = time.Unix(0, obj.LastBalancingStartTimeUtc.Nanoseconds())
	dst.LastBalancingEndTimeUtc = time.Unix(0, obj.LastBalancingEndTimeUtc.Nanoseconds())
	{
		var innerlst []innerFabricLoadMetricInformation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.LoadMetricInformation.Items), int(obj.LoadMetricInformation.Count))

		for _, item := range innerlst {
			var tmpitem FabricLoadMetricInformation

			tmpitem = *item.toGoStruct()

			dst.LoadMetricInformation = append(dst.LoadMetricInformation, tmpitem)
		}

	}
	return &dst
}

type FabricPartitionLoadInformation struct {
	PartitionId                windows.GUID
	PrimaryLoadMetricReports   []FabricLoadMetricReport
	SecondaryLoadMetricReports []FabricLoadMetricReport
}

func (obj *FabricPartitionLoadInformation) toInnerStruct() *innerFabricPartitionLoadInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricPartitionLoadInformation{}
	dst.PartitionId = obj.PartitionId
	lst_329 := &innerFabricLoadMetricReportList{}
	{

		var tmp []innerFabricLoadMetricReport

		for _, item := range obj.PrimaryLoadMetricReports {
			var tmpitem innerFabricLoadMetricReport

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_329.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_329.Items = &tmp[0]
		}

	}
	dst.PrimaryLoadMetricReports = lst_329
	lst_330 := &innerFabricLoadMetricReportList{}
	{

		var tmp []innerFabricLoadMetricReport

		for _, item := range obj.SecondaryLoadMetricReports {
			var tmpitem innerFabricLoadMetricReport

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_330.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_330.Items = &tmp[0]
		}

	}
	dst.SecondaryLoadMetricReports = lst_330
	return &dst
}

type innerFabricPartitionLoadInformation struct {
	PartitionId                windows.GUID
	PrimaryLoadMetricReports   *innerFabricLoadMetricReportList
	SecondaryLoadMetricReports *innerFabricLoadMetricReportList
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricPartitionLoadInformation) toGoStruct() *FabricPartitionLoadInformation {
	if obj == nil {
		return nil
	}
	dst := FabricPartitionLoadInformation{}
	dst.PartitionId = obj.PartitionId
	{
		var innerlst []innerFabricLoadMetricReport
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PrimaryLoadMetricReports.Items), int(obj.PrimaryLoadMetricReports.Count))

		for _, item := range innerlst {
			var tmpitem FabricLoadMetricReport

			tmpitem = *item.toGoStruct()

			dst.PrimaryLoadMetricReports = append(dst.PrimaryLoadMetricReports, tmpitem)
		}

	}
	{
		var innerlst []innerFabricLoadMetricReport
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.SecondaryLoadMetricReports.Items), int(obj.SecondaryLoadMetricReports.Count))

		for _, item := range innerlst {
			var tmpitem FabricLoadMetricReport

			tmpitem = *item.toGoStruct()

			dst.SecondaryLoadMetricReports = append(dst.SecondaryLoadMetricReports, tmpitem)
		}

	}
	return &dst
}

type FabricReplicaLoadInformation struct {
	PartitionId         windows.GUID
	ReplicaOrInstanceId int64
	LoadMetricReports   []FabricLoadMetricReport
}

func (obj *FabricReplicaLoadInformation) toInnerStruct() *innerFabricReplicaLoadInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricReplicaLoadInformation{}
	dst.PartitionId = obj.PartitionId
	dst.ReplicaOrInstanceId = obj.ReplicaOrInstanceId
	lst_331 := &innerFabricLoadMetricReportList{}
	{

		var tmp []innerFabricLoadMetricReport

		for _, item := range obj.LoadMetricReports {
			var tmpitem innerFabricLoadMetricReport

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_331.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_331.Items = &tmp[0]
		}

	}
	dst.LoadMetricReports = lst_331
	return &dst
}

type innerFabricReplicaLoadInformation struct {
	PartitionId         windows.GUID
	ReplicaOrInstanceId int64
	LoadMetricReports   *innerFabricLoadMetricReportList
	Reserved            unsafe.Pointer
}

func (obj *innerFabricReplicaLoadInformation) toGoStruct() *FabricReplicaLoadInformation {
	if obj == nil {
		return nil
	}
	dst := FabricReplicaLoadInformation{}
	dst.PartitionId = obj.PartitionId
	dst.ReplicaOrInstanceId = obj.ReplicaOrInstanceId
	{
		var innerlst []innerFabricLoadMetricReport
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.LoadMetricReports.Items), int(obj.LoadMetricReports.Count))

		for _, item := range innerlst {
			var tmpitem FabricLoadMetricReport

			tmpitem = *item.toGoStruct()

			dst.LoadMetricReports = append(dst.LoadMetricReports, tmpitem)
		}

	}
	return &dst
}

type FabricUnplacedReplicaInformation struct {
	ServiceName            string
	PartitionId            windows.GUID
	UnplacedReplicaReasons []string
}

func (obj *FabricUnplacedReplicaInformation) toInnerStruct() *innerFabricUnplacedReplicaInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricUnplacedReplicaInformation{}
	s_332, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_332

	dst.PartitionId = obj.PartitionId
	lst_333 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range obj.UnplacedReplicaReasons {
			var tmpitem *uint16

			s_334, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_334

			tmp = append(tmp, tmpitem)
		}

		lst_333.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_333.Items = &tmp[0]
		}

	}
	dst.UnplacedReplicaReasons = lst_333
	return &dst
}

type innerFabricUnplacedReplicaInformation struct {
	ServiceName            *uint16
	PartitionId            windows.GUID
	UnplacedReplicaReasons *innerFabricStringList
	Reserved               unsafe.Pointer
}

func (obj *innerFabricUnplacedReplicaInformation) toGoStruct() *FabricUnplacedReplicaInformation {
	if obj == nil {
		return nil
	}
	dst := FabricUnplacedReplicaInformation{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.PartitionId = obj.PartitionId
	{
		var innerlst []*uint16
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnplacedReplicaReasons.Items), int(obj.UnplacedReplicaReasons.Count))

		for _, item := range innerlst {
			var tmpitem string

			tmpitem = windows.UTF16PtrToString(item)

			dst.UnplacedReplicaReasons = append(dst.UnplacedReplicaReasons, tmpitem)
		}

	}
	return &dst
}

type FabricNodeLoadMetricInformation struct {
	Name                  string
	NodeCapacity          int64
	NodeLoad              int64
	NodeRemainingCapacity int64
	IsCapacityViolation   bool
}

func (obj *FabricNodeLoadMetricInformation) toInnerStruct() *innerFabricNodeLoadMetricInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeLoadMetricInformation{}
	s_335, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_335

	dst.NodeCapacity = obj.NodeCapacity
	dst.NodeLoad = obj.NodeLoad
	dst.NodeRemainingCapacity = obj.NodeRemainingCapacity
	dst.IsCapacityViolation = obj.IsCapacityViolation
	return &dst
}

type innerFabricNodeLoadMetricInformation struct {
	Name                  *uint16
	NodeCapacity          int64
	NodeLoad              int64
	NodeRemainingCapacity int64
	IsCapacityViolation   bool
	Reserved              unsafe.Pointer
}

func (obj *innerFabricNodeLoadMetricInformation) toGoStruct() *FabricNodeLoadMetricInformation {
	if obj == nil {
		return nil
	}
	dst := FabricNodeLoadMetricInformation{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.NodeCapacity = obj.NodeCapacity
	dst.NodeLoad = obj.NodeLoad
	dst.NodeRemainingCapacity = obj.NodeRemainingCapacity
	dst.IsCapacityViolation = obj.IsCapacityViolation
	return &dst
}

type FabricNodeLoadMetricInformationEx1 struct {
	NodeBufferedCapacity          int64
	NodeRemainingBufferedCapacity int64
}
type innerFabricNodeLoadMetricInformationEx1 struct {
	FabricNodeLoadMetricInformationEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeLoadMetricInformationEx1) toGoStruct() *FabricNodeLoadMetricInformationEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeLoadMetricInformationEx1
}
func (obj *FabricNodeLoadMetricInformationEx1) toInnerStruct() *innerFabricNodeLoadMetricInformationEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeLoadMetricInformationEx1{*obj, nil}
}

type FabricNodeLoadMetricInformationEx2 struct {
	CurrentNodeLoad               float64
	NodeCapacityRemaining         float64
	BufferedNodeCapacityRemaining float64
}
type innerFabricNodeLoadMetricInformationEx2 struct {
	FabricNodeLoadMetricInformationEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeLoadMetricInformationEx2) toGoStruct() *FabricNodeLoadMetricInformationEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeLoadMetricInformationEx2
}
func (obj *FabricNodeLoadMetricInformationEx2) toInnerStruct() *innerFabricNodeLoadMetricInformationEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeLoadMetricInformationEx2{*obj, nil}
}

type innerFabricNodeLoadMetricInformationList struct {
	Count uint32
	Items *innerFabricNodeLoadMetricInformation
}

func (obj *innerFabricNodeLoadMetricInformationList) toGoStruct() []FabricNodeLoadMetricInformation {
	var dst []FabricNodeLoadMetricInformation
	{
		var innerlst []innerFabricNodeLoadMetricInformation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeLoadMetricInformation

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricNodeLoadInformation struct {
	NodeName                  string
	NodeLoadMetricInformation []FabricNodeLoadMetricInformation
}

func (obj *FabricNodeLoadInformation) toInnerStruct() *innerFabricNodeLoadInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeLoadInformation{}
	s_336, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_336

	lst_337 := &innerFabricNodeLoadMetricInformationList{}
	{

		var tmp []innerFabricNodeLoadMetricInformation

		for _, item := range obj.NodeLoadMetricInformation {
			var tmpitem innerFabricNodeLoadMetricInformation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_337.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_337.Items = &tmp[0]
		}

	}
	dst.NodeLoadMetricInformation = lst_337
	return &dst
}

type innerFabricNodeLoadInformation struct {
	NodeName                  *uint16
	NodeLoadMetricInformation *innerFabricNodeLoadMetricInformationList
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricNodeLoadInformation) toGoStruct() *FabricNodeLoadInformation {
	if obj == nil {
		return nil
	}
	dst := FabricNodeLoadInformation{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	{
		var innerlst []innerFabricNodeLoadMetricInformation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.NodeLoadMetricInformation.Items), int(obj.NodeLoadMetricInformation.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeLoadMetricInformation

			tmpitem = *item.toGoStruct()

			dst.NodeLoadMetricInformation = append(dst.NodeLoadMetricInformation, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationLoadMetricInformation struct {
	Name                string
	ReservationCapacity int64
	ApplicationCapacity int64
	ApplicationLoad     int64
}

func (obj *FabricApplicationLoadMetricInformation) toInnerStruct() *innerFabricApplicationLoadMetricInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationLoadMetricInformation{}
	s_338, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_338

	dst.ReservationCapacity = obj.ReservationCapacity
	dst.ApplicationCapacity = obj.ApplicationCapacity
	dst.ApplicationLoad = obj.ApplicationLoad
	return &dst
}

type innerFabricApplicationLoadMetricInformation struct {
	Name                *uint16
	ReservationCapacity int64
	ApplicationCapacity int64
	ApplicationLoad     int64
	Reserved            unsafe.Pointer
}

func (obj *innerFabricApplicationLoadMetricInformation) toGoStruct() *FabricApplicationLoadMetricInformation {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationLoadMetricInformation{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.ReservationCapacity = obj.ReservationCapacity
	dst.ApplicationCapacity = obj.ApplicationCapacity
	dst.ApplicationLoad = obj.ApplicationLoad
	return &dst
}

type innerFabricApplicationLoadMetricInformationList struct {
	Count       uint32
	LoadMetrics *innerFabricApplicationLoadMetricInformation
	Reserved    unsafe.Pointer
}

func (obj *innerFabricApplicationLoadMetricInformationList) toGoStruct() []FabricApplicationLoadMetricInformation {
	var dst []FabricApplicationLoadMetricInformation
	{
		var innerlst []innerFabricApplicationLoadMetricInformation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.LoadMetrics), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationLoadMetricInformation

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricApplicationLoadInformation struct {
	Name                             string
	MinimumNodes                     uint32
	MaximumNodes                     uint32
	NodeCount                        uint32
	ApplicationLoadMetricInformation []FabricApplicationLoadMetricInformation
}

func (obj *FabricApplicationLoadInformation) toInnerStruct() *innerFabricApplicationLoadInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationLoadInformation{}
	s_339, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_339

	dst.MinimumNodes = obj.MinimumNodes
	dst.MaximumNodes = obj.MaximumNodes
	dst.NodeCount = obj.NodeCount
	lst_340 := &innerFabricApplicationLoadMetricInformationList{}
	{

		var tmp []innerFabricApplicationLoadMetricInformation

		for _, item := range obj.ApplicationLoadMetricInformation {
			var tmpitem innerFabricApplicationLoadMetricInformation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_340.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_340.LoadMetrics = &tmp[0]
		}

	}
	dst.ApplicationLoadMetricInformation = lst_340
	return &dst
}

type innerFabricApplicationLoadInformation struct {
	Name                             *uint16
	MinimumNodes                     uint32
	MaximumNodes                     uint32
	NodeCount                        uint32
	ApplicationLoadMetricInformation *innerFabricApplicationLoadMetricInformationList
	Reserved                         unsafe.Pointer
}

func (obj *innerFabricApplicationLoadInformation) toGoStruct() *FabricApplicationLoadInformation {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationLoadInformation{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.MinimumNodes = obj.MinimumNodes
	dst.MaximumNodes = obj.MaximumNodes
	dst.NodeCount = obj.NodeCount
	{
		var innerlst []innerFabricApplicationLoadMetricInformation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationLoadMetricInformation.LoadMetrics), int(obj.ApplicationLoadMetricInformation.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationLoadMetricInformation

			tmpitem = *item.toGoStruct()

			dst.ApplicationLoadMetricInformation = append(dst.ApplicationLoadMetricInformation, tmpitem)
		}

	}
	return &dst
}

type FabricGatewayInformation struct {
	NodeAddress    string
	NodeId         FabricNodeId
	NodeInstanceId uint64
	NodeName       string
}

func (obj *FabricGatewayInformation) toInnerStruct() *innerFabricGatewayInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricGatewayInformation{}
	s_341, _ := windows.UTF16PtrFromString(obj.NodeAddress)
	dst.NodeAddress = s_341

	dst.NodeId = *obj.NodeId.toInnerStruct()
	dst.NodeInstanceId = obj.NodeInstanceId
	s_342, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_342

	return &dst
}

type innerFabricGatewayInformation struct {
	NodeAddress    *uint16
	NodeId         innerFabricNodeId
	NodeInstanceId uint64
	NodeName       *uint16
	Reserved       unsafe.Pointer
}

func (obj *innerFabricGatewayInformation) toGoStruct() *FabricGatewayInformation {
	if obj == nil {
		return nil
	}
	dst := FabricGatewayInformation{}
	dst.NodeAddress = windows.UTF16PtrToString(obj.NodeAddress)
	dst.NodeId = *obj.NodeId.toGoStruct()
	dst.NodeInstanceId = obj.NodeInstanceId
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	return &dst
}

type FabricStartApprovedUpgradesDescription struct {
	OperationId       windows.GUID
	ClusterConfigPath string
	RollbackOnFailure bool
}

func (obj *FabricStartApprovedUpgradesDescription) toInnerStruct() *innerFabricStartApprovedUpgradesDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricStartApprovedUpgradesDescription{}
	dst.OperationId = obj.OperationId
	s_343, _ := windows.UTF16PtrFromString(obj.ClusterConfigPath)
	dst.ClusterConfigPath = s_343

	dst.RollbackOnFailure = obj.RollbackOnFailure
	return &dst
}

type innerFabricStartApprovedUpgradesDescription struct {
	OperationId       windows.GUID
	ClusterConfigPath *uint16
	RollbackOnFailure bool
	Reserved          unsafe.Pointer
}

func (obj *innerFabricStartApprovedUpgradesDescription) toGoStruct() *FabricStartApprovedUpgradesDescription {
	if obj == nil {
		return nil
	}
	dst := FabricStartApprovedUpgradesDescription{}
	dst.OperationId = obj.OperationId
	dst.ClusterConfigPath = windows.UTF16PtrToString(obj.ClusterConfigPath)
	dst.RollbackOnFailure = obj.RollbackOnFailure
	return &dst
}

type FabricStartUpgradeDescription struct {
	ClusterConfig                              string
	HealthCheckRetryTimeoutInSeconds           uint32
	HealthCheckWaitDurationInSeconds           uint32
	HealthCheckStableDurationInSeconds         uint32
	UpgradeDomainTimeoutInSeconds              uint32
	UpgradeTimeoutInSeconds                    uint32
	MaxPercentUnhealthyApplications            byte
	MaxPercentUnhealthyNodes                   byte
	MaxPercentDeltaUnhealthyNodes              byte
	MaxPercentUpgradeDomainDeltaUnhealthyNodes byte
}

func (obj *FabricStartUpgradeDescription) toInnerStruct() *innerFabricStartUpgradeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricStartUpgradeDescription{}
	s_344, _ := windows.UTF16PtrFromString(obj.ClusterConfig)
	dst.ClusterConfig = s_344

	dst.HealthCheckRetryTimeoutInSeconds = obj.HealthCheckRetryTimeoutInSeconds
	dst.HealthCheckWaitDurationInSeconds = obj.HealthCheckWaitDurationInSeconds
	dst.HealthCheckStableDurationInSeconds = obj.HealthCheckStableDurationInSeconds
	dst.UpgradeDomainTimeoutInSeconds = obj.UpgradeDomainTimeoutInSeconds
	dst.UpgradeTimeoutInSeconds = obj.UpgradeTimeoutInSeconds
	dst.MaxPercentUnhealthyApplications = obj.MaxPercentUnhealthyApplications
	dst.MaxPercentUnhealthyNodes = obj.MaxPercentUnhealthyNodes
	dst.MaxPercentDeltaUnhealthyNodes = obj.MaxPercentDeltaUnhealthyNodes
	dst.MaxPercentUpgradeDomainDeltaUnhealthyNodes = obj.MaxPercentUpgradeDomainDeltaUnhealthyNodes
	return &dst
}

type innerFabricStartUpgradeDescription struct {
	ClusterConfig                              *uint16
	HealthCheckRetryTimeoutInSeconds           uint32
	HealthCheckWaitDurationInSeconds           uint32
	HealthCheckStableDurationInSeconds         uint32
	UpgradeDomainTimeoutInSeconds              uint32
	UpgradeTimeoutInSeconds                    uint32
	MaxPercentUnhealthyApplications            byte
	MaxPercentUnhealthyNodes                   byte
	MaxPercentDeltaUnhealthyNodes              byte
	MaxPercentUpgradeDomainDeltaUnhealthyNodes byte
	Reserved                                   unsafe.Pointer
}

func (obj *innerFabricStartUpgradeDescription) toGoStruct() *FabricStartUpgradeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricStartUpgradeDescription{}
	dst.ClusterConfig = windows.UTF16PtrToString(obj.ClusterConfig)
	dst.HealthCheckRetryTimeoutInSeconds = obj.HealthCheckRetryTimeoutInSeconds
	dst.HealthCheckWaitDurationInSeconds = obj.HealthCheckWaitDurationInSeconds
	dst.HealthCheckStableDurationInSeconds = obj.HealthCheckStableDurationInSeconds
	dst.UpgradeDomainTimeoutInSeconds = obj.UpgradeDomainTimeoutInSeconds
	dst.UpgradeTimeoutInSeconds = obj.UpgradeTimeoutInSeconds
	dst.MaxPercentUnhealthyApplications = obj.MaxPercentUnhealthyApplications
	dst.MaxPercentUnhealthyNodes = obj.MaxPercentUnhealthyNodes
	dst.MaxPercentDeltaUnhealthyNodes = obj.MaxPercentDeltaUnhealthyNodes
	dst.MaxPercentUpgradeDomainDeltaUnhealthyNodes = obj.MaxPercentUpgradeDomainDeltaUnhealthyNodes
	return &dst
}

type FabricStartUpgradeDescriptionEx1 struct {
	ApplicationHealthPolicyMap map[string]FabricApplicationHealthPolicy
}

func (obj *FabricStartUpgradeDescriptionEx1) toInnerStruct() *innerFabricStartUpgradeDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStartUpgradeDescriptionEx1{}
	{
		mapobj := &innerFabricApplicationHealthPolicyMap{}

		var tmp []innerFabricApplicationHealthPolicyMapItem

		for k, v := range obj.ApplicationHealthPolicyMap {
			kv := innerFabricApplicationHealthPolicyMapItem{}

			s_346, _ := windows.UTF16PtrFromString(k)
			kv.ApplicationName = s_346

			kv.HealthPolicy = v.toInnerStruct()

			tmp = append(tmp, kv)
		}

		mapobj.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			mapobj.Items = &tmp[0]
		}

		dst.ApplicationHealthPolicyMap = mapobj
	}
	return &dst
}

type innerFabricStartUpgradeDescriptionEx1 struct {
	ApplicationHealthPolicyMap *innerFabricApplicationHealthPolicyMap
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricStartUpgradeDescriptionEx1) toGoStruct() *FabricStartUpgradeDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricStartUpgradeDescriptionEx1{}
	{
		var mapvar = make(map[string]FabricApplicationHealthPolicy)

		var innerlst []innerFabricApplicationHealthPolicyMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationHealthPolicyMap.Items), int(obj.ApplicationHealthPolicyMap.Count))

		for _, kv := range innerlst {
			var k string
			var v *FabricApplicationHealthPolicy

			k = windows.UTF16PtrToString(kv.ApplicationName)
			v = kv.HealthPolicy.toGoStruct()
			mapvar[k] = *v

		}

		dst.ApplicationHealthPolicyMap = mapvar
	}
	return &dst
}

type FabricUpgradeOrchestrationServiceState struct {
	CurrentCodeVersion     string
	CurrentManifestVersion string
	TargetCodeVersion      string
	TargetManifestVersion  string
	PendingUpgradeType     string
}

func (obj *FabricUpgradeOrchestrationServiceState) toInnerStruct() *innerFabricUpgradeOrchestrationServiceState {
	if obj == nil {
		return nil
	}
	dst := innerFabricUpgradeOrchestrationServiceState{}
	s_348, _ := windows.UTF16PtrFromString(obj.CurrentCodeVersion)
	dst.CurrentCodeVersion = s_348

	s_349, _ := windows.UTF16PtrFromString(obj.CurrentManifestVersion)
	dst.CurrentManifestVersion = s_349

	s_350, _ := windows.UTF16PtrFromString(obj.TargetCodeVersion)
	dst.TargetCodeVersion = s_350

	s_351, _ := windows.UTF16PtrFromString(obj.TargetManifestVersion)
	dst.TargetManifestVersion = s_351

	s_352, _ := windows.UTF16PtrFromString(obj.PendingUpgradeType)
	dst.PendingUpgradeType = s_352

	return &dst
}

type innerFabricUpgradeOrchestrationServiceState struct {
	CurrentCodeVersion     *uint16
	CurrentManifestVersion *uint16
	TargetCodeVersion      *uint16
	TargetManifestVersion  *uint16
	PendingUpgradeType     *uint16
	Reserved               unsafe.Pointer
}

func (obj *innerFabricUpgradeOrchestrationServiceState) toGoStruct() *FabricUpgradeOrchestrationServiceState {
	if obj == nil {
		return nil
	}
	dst := FabricUpgradeOrchestrationServiceState{}
	dst.CurrentCodeVersion = windows.UTF16PtrToString(obj.CurrentCodeVersion)
	dst.CurrentManifestVersion = windows.UTF16PtrToString(obj.CurrentManifestVersion)
	dst.TargetCodeVersion = windows.UTF16PtrToString(obj.TargetCodeVersion)
	dst.TargetManifestVersion = windows.UTF16PtrToString(obj.TargetManifestVersion)
	dst.PendingUpgradeType = windows.UTF16PtrToString(obj.PendingUpgradeType)
	return &dst
}

type FabricHealthEvent struct {
	HealthInformation        *FabricHealthInformation
	SourceUtcTimestamp       time.Time
	LastModifiedUtcTimestamp time.Time
	IsExpired                bool
}

func (obj *FabricHealthEvent) toInnerStruct() *innerFabricHealthEvent {
	if obj == nil {
		return nil
	}
	dst := innerFabricHealthEvent{}
	dst.HealthInformation = obj.HealthInformation.toInnerStruct()
	dst.SourceUtcTimestamp = windows.NsecToFiletime(obj.SourceUtcTimestamp.UnixNano())
	dst.LastModifiedUtcTimestamp = windows.NsecToFiletime(obj.LastModifiedUtcTimestamp.UnixNano())
	dst.IsExpired = obj.IsExpired
	return &dst
}

type innerFabricHealthEvent struct {
	HealthInformation        *innerFabricHealthInformation
	SourceUtcTimestamp       windows.Filetime
	LastModifiedUtcTimestamp windows.Filetime
	IsExpired                bool
	Reserved                 unsafe.Pointer
}

func (obj *innerFabricHealthEvent) toGoStruct() *FabricHealthEvent {
	if obj == nil {
		return nil
	}
	dst := FabricHealthEvent{}
	dst.HealthInformation = obj.HealthInformation.toGoStruct()
	dst.SourceUtcTimestamp = time.Unix(0, obj.SourceUtcTimestamp.Nanoseconds())
	dst.LastModifiedUtcTimestamp = time.Unix(0, obj.LastModifiedUtcTimestamp.Nanoseconds())
	dst.IsExpired = obj.IsExpired
	return &dst
}

type FabricHealthEventEx1 struct {
	LastOkTransitionAt      time.Time
	LastWarningTransitionAt time.Time
	LastErrorTransitionAt   time.Time
}

func (obj *FabricHealthEventEx1) toInnerStruct() *innerFabricHealthEventEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricHealthEventEx1{}
	dst.LastOkTransitionAt = windows.NsecToFiletime(obj.LastOkTransitionAt.UnixNano())
	dst.LastWarningTransitionAt = windows.NsecToFiletime(obj.LastWarningTransitionAt.UnixNano())
	dst.LastErrorTransitionAt = windows.NsecToFiletime(obj.LastErrorTransitionAt.UnixNano())
	return &dst
}

type innerFabricHealthEventEx1 struct {
	LastOkTransitionAt      windows.Filetime
	LastWarningTransitionAt windows.Filetime
	LastErrorTransitionAt   windows.Filetime
	Reserved                unsafe.Pointer
}

func (obj *innerFabricHealthEventEx1) toGoStruct() *FabricHealthEventEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricHealthEventEx1{}
	dst.LastOkTransitionAt = time.Unix(0, obj.LastOkTransitionAt.Nanoseconds())
	dst.LastWarningTransitionAt = time.Unix(0, obj.LastWarningTransitionAt.Nanoseconds())
	dst.LastErrorTransitionAt = time.Unix(0, obj.LastErrorTransitionAt.Nanoseconds())
	return &dst
}

type innerFabricHealthEventList struct {
	Count uint32
	Items *innerFabricHealthEvent
}

func (obj *innerFabricHealthEventList) toGoStruct() []FabricHealthEvent {
	var dst []FabricHealthEvent
	{
		var innerlst []innerFabricHealthEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvent

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricHealthEvaluation struct {
	Kind  FabricHealthEvaluationKind
	Value interface{}
}
type innerFabricHealthEvaluation struct {
	FabricHealthEvaluation
}

func (obj *innerFabricHealthEvaluation) toGoStruct() *FabricHealthEvaluation {
	if obj == nil {
		return nil
	}
	return &obj.FabricHealthEvaluation
}
func (obj *FabricHealthEvaluation) toInnerStruct() *innerFabricHealthEvaluation {
	if obj == nil {
		return nil
	}
	return &innerFabricHealthEvaluation{*obj}
}

type innerFabricHealthEvaluationList struct {
	Count uint32
	Items *innerFabricHealthEvaluation
}

func (obj *innerFabricHealthEvaluationList) toGoStruct() []FabricHealthEvaluation {
	var dst []FabricHealthEvaluation
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricHealthStateCount struct {
	OkCount      uint32
	WarningCount uint32
	ErrorCount   uint32
}
type innerFabricHealthStateCount struct {
	FabricHealthStateCount
	Reserved unsafe.Pointer
}

func (obj *innerFabricHealthStateCount) toGoStruct() *FabricHealthStateCount {
	if obj == nil {
		return nil
	}
	return &obj.FabricHealthStateCount
}
func (obj *FabricHealthStateCount) toInnerStruct() *innerFabricHealthStateCount {
	if obj == nil {
		return nil
	}
	return &innerFabricHealthStateCount{*obj, nil}
}

type FabricEntityKindHealthStateCount struct {
	EntityKind       FabricHealthEntityKind
	HealthStateCount *FabricHealthStateCount
}
type innerFabricEntityKindHealthStateCount struct {
	FabricEntityKindHealthStateCount
	Reserved unsafe.Pointer
}

func (obj *innerFabricEntityKindHealthStateCount) toGoStruct() *FabricEntityKindHealthStateCount {
	if obj == nil {
		return nil
	}
	return &obj.FabricEntityKindHealthStateCount
}
func (obj *FabricEntityKindHealthStateCount) toInnerStruct() *innerFabricEntityKindHealthStateCount {
	if obj == nil {
		return nil
	}
	return &innerFabricEntityKindHealthStateCount{*obj, nil}
}

type FabricHealthStatistics struct {
	Items []FabricEntityKindHealthStateCount
}
type innerFabricHealthStatistics struct {
	FabricHealthStatistics
	Reserved unsafe.Pointer
}

func (obj *innerFabricHealthStatistics) toGoStruct() *FabricHealthStatistics {
	if obj == nil {
		return nil
	}
	return &obj.FabricHealthStatistics
}
func (obj *FabricHealthStatistics) toInnerStruct() *innerFabricHealthStatistics {
	if obj == nil {
		return nil
	}
	return &innerFabricHealthStatistics{*obj, nil}
}

type FabricReplicaHealth struct {
	Kind  FabricServiceKind
	Value interface{}
}
type innerFabricReplicaHealth struct {
	FabricReplicaHealth
}

func (obj *innerFabricReplicaHealth) toGoStruct() *FabricReplicaHealth {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicaHealth
}
func (obj *FabricReplicaHealth) toInnerStruct() *innerFabricReplicaHealth {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicaHealth{*obj}
}

type FabricStatefulServiceReplicaHealth struct {
	PartitionId           windows.GUID
	ReplicaId             int64
	AggregatedHealthState FabricHealthState
	HealthEvents          []FabricHealthEvent
}

func (obj *FabricStatefulServiceReplicaHealth) toInnerStruct() *innerFabricStatefulServiceReplicaHealth {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceReplicaHealth{}
	dst.PartitionId = obj.PartitionId
	dst.ReplicaId = obj.ReplicaId
	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_353 := &innerFabricHealthEventList{}
	{

		var tmp []innerFabricHealthEvent

		for _, item := range obj.HealthEvents {
			var tmpitem innerFabricHealthEvent

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_353.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_353.Items = &tmp[0]
		}

	}
	dst.HealthEvents = lst_353
	return &dst
}

type innerFabricStatefulServiceReplicaHealth struct {
	PartitionId           windows.GUID
	ReplicaId             int64
	AggregatedHealthState FabricHealthState
	HealthEvents          *innerFabricHealthEventList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricStatefulServiceReplicaHealth) toGoStruct() *FabricStatefulServiceReplicaHealth {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceReplicaHealth{}
	dst.PartitionId = obj.PartitionId
	dst.ReplicaId = obj.ReplicaId
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.HealthEvents.Items), int(obj.HealthEvents.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvent

			tmpitem = *item.toGoStruct()

			dst.HealthEvents = append(dst.HealthEvents, tmpitem)
		}

	}
	return &dst
}

type FabricStatefulServiceReplicaHealthEx1 struct {
	UnhealthyEvaluations []FabricHealthEvaluation
}

func (obj *FabricStatefulServiceReplicaHealthEx1) toInnerStruct() *innerFabricStatefulServiceReplicaHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceReplicaHealthEx1{}
	lst_354 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_354.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_354.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_354
	return &dst
}

type innerFabricStatefulServiceReplicaHealthEx1 struct {
	UnhealthyEvaluations *innerFabricHealthEvaluationList
	Reserved             unsafe.Pointer
}

func (obj *innerFabricStatefulServiceReplicaHealthEx1) toGoStruct() *FabricStatefulServiceReplicaHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceReplicaHealthEx1{}
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricStatelessServiceInstanceHealth struct {
	PartitionId           windows.GUID
	InstanceId            int64
	AggregatedHealthState FabricHealthState
	HealthEvents          []FabricHealthEvent
}

func (obj *FabricStatelessServiceInstanceHealth) toInnerStruct() *innerFabricStatelessServiceInstanceHealth {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceInstanceHealth{}
	dst.PartitionId = obj.PartitionId
	dst.InstanceId = obj.InstanceId
	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_355 := &innerFabricHealthEventList{}
	{

		var tmp []innerFabricHealthEvent

		for _, item := range obj.HealthEvents {
			var tmpitem innerFabricHealthEvent

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_355.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_355.Items = &tmp[0]
		}

	}
	dst.HealthEvents = lst_355
	return &dst
}

type innerFabricStatelessServiceInstanceHealth struct {
	PartitionId           windows.GUID
	InstanceId            int64
	AggregatedHealthState FabricHealthState
	HealthEvents          *innerFabricHealthEventList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricStatelessServiceInstanceHealth) toGoStruct() *FabricStatelessServiceInstanceHealth {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceInstanceHealth{}
	dst.PartitionId = obj.PartitionId
	dst.InstanceId = obj.InstanceId
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.HealthEvents.Items), int(obj.HealthEvents.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvent

			tmpitem = *item.toGoStruct()

			dst.HealthEvents = append(dst.HealthEvents, tmpitem)
		}

	}
	return &dst
}

type FabricStatelessServiceInstanceHealthEx1 struct {
	UnhealthyEvaluations []FabricHealthEvaluation
}

func (obj *FabricStatelessServiceInstanceHealthEx1) toInnerStruct() *innerFabricStatelessServiceInstanceHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceInstanceHealthEx1{}
	lst_356 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_356.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_356.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_356
	return &dst
}

type innerFabricStatelessServiceInstanceHealthEx1 struct {
	UnhealthyEvaluations *innerFabricHealthEvaluationList
	Reserved             unsafe.Pointer
}

func (obj *innerFabricStatelessServiceInstanceHealthEx1) toGoStruct() *FabricStatelessServiceInstanceHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceInstanceHealthEx1{}
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricReplicaHealthState struct {
	Kind  FabricServiceKind
	Value interface{}
}
type innerFabricReplicaHealthState struct {
	FabricReplicaHealthState
}

func (obj *innerFabricReplicaHealthState) toGoStruct() *FabricReplicaHealthState {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicaHealthState
}
func (obj *FabricReplicaHealthState) toInnerStruct() *innerFabricReplicaHealthState {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicaHealthState{*obj}
}

type innerFabricReplicaHealthStateList struct {
	Count uint32
	Items *innerFabricReplicaHealthState
}

func (obj *innerFabricReplicaHealthStateList) toGoStruct() []FabricReplicaHealthState {
	var dst []FabricReplicaHealthState
	{
		var innerlst []innerFabricReplicaHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricReplicaHealthState

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricStatelessServiceInstanceHealthState struct {
	PartitionId           windows.GUID
	InstanceId            int64
	AggregatedHealthState FabricHealthState
}
type innerFabricStatelessServiceInstanceHealthState struct {
	FabricStatelessServiceInstanceHealthState
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatelessServiceInstanceHealthState) toGoStruct() *FabricStatelessServiceInstanceHealthState {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatelessServiceInstanceHealthState
}
func (obj *FabricStatelessServiceInstanceHealthState) toInnerStruct() *innerFabricStatelessServiceInstanceHealthState {
	if obj == nil {
		return nil
	}
	return &innerFabricStatelessServiceInstanceHealthState{*obj, nil}
}

type FabricStatelessServiceInstanceHealthStateEx1 struct {
	UnhealthyEvaluations []FabricHealthEvaluation
}

func (obj *FabricStatelessServiceInstanceHealthStateEx1) toInnerStruct() *innerFabricStatelessServiceInstanceHealthStateEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatelessServiceInstanceHealthStateEx1{}
	lst_357 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_357.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_357.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_357
	return &dst
}

type innerFabricStatelessServiceInstanceHealthStateEx1 struct {
	UnhealthyEvaluations *innerFabricHealthEvaluationList
	Reserved             unsafe.Pointer
}

func (obj *innerFabricStatelessServiceInstanceHealthStateEx1) toGoStruct() *FabricStatelessServiceInstanceHealthStateEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricStatelessServiceInstanceHealthStateEx1{}
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricStatefulServiceReplicaHealthState struct {
	PartitionId           windows.GUID
	ReplicaId             int64
	AggregatedHealthState FabricHealthState
}
type innerFabricStatefulServiceReplicaHealthState struct {
	FabricStatefulServiceReplicaHealthState
	Reserved unsafe.Pointer
}

func (obj *innerFabricStatefulServiceReplicaHealthState) toGoStruct() *FabricStatefulServiceReplicaHealthState {
	if obj == nil {
		return nil
	}
	return &obj.FabricStatefulServiceReplicaHealthState
}
func (obj *FabricStatefulServiceReplicaHealthState) toInnerStruct() *innerFabricStatefulServiceReplicaHealthState {
	if obj == nil {
		return nil
	}
	return &innerFabricStatefulServiceReplicaHealthState{*obj, nil}
}

type FabricStatefulServiceReplicaHealthStateEx1 struct {
	UnhealthyEvaluations []FabricHealthEvaluation
}

func (obj *FabricStatefulServiceReplicaHealthStateEx1) toInnerStruct() *innerFabricStatefulServiceReplicaHealthStateEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricStatefulServiceReplicaHealthStateEx1{}
	lst_358 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_358.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_358.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_358
	return &dst
}

type innerFabricStatefulServiceReplicaHealthStateEx1 struct {
	UnhealthyEvaluations *innerFabricHealthEvaluationList
	Reserved             unsafe.Pointer
}

func (obj *innerFabricStatefulServiceReplicaHealthStateEx1) toGoStruct() *FabricStatefulServiceReplicaHealthStateEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricStatefulServiceReplicaHealthStateEx1{}
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricPartitionHealth struct {
	PartitionId           windows.GUID
	AggregatedHealthState FabricHealthState
	HealthEvents          []FabricHealthEvent
	ReplicaHealthStates   []FabricReplicaHealthState
}

func (obj *FabricPartitionHealth) toInnerStruct() *innerFabricPartitionHealth {
	if obj == nil {
		return nil
	}
	dst := innerFabricPartitionHealth{}
	dst.PartitionId = obj.PartitionId
	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_359 := &innerFabricHealthEventList{}
	{

		var tmp []innerFabricHealthEvent

		for _, item := range obj.HealthEvents {
			var tmpitem innerFabricHealthEvent

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_359.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_359.Items = &tmp[0]
		}

	}
	dst.HealthEvents = lst_359
	lst_360 := &innerFabricReplicaHealthStateList{}
	{

		var tmp []innerFabricReplicaHealthState

		for _, item := range obj.ReplicaHealthStates {
			var tmpitem innerFabricReplicaHealthState

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_360.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_360.Items = &tmp[0]
		}

	}
	dst.ReplicaHealthStates = lst_360
	return &dst
}

type innerFabricPartitionHealth struct {
	PartitionId           windows.GUID
	AggregatedHealthState FabricHealthState
	HealthEvents          *innerFabricHealthEventList
	ReplicaHealthStates   *innerFabricReplicaHealthStateList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricPartitionHealth) toGoStruct() *FabricPartitionHealth {
	if obj == nil {
		return nil
	}
	dst := FabricPartitionHealth{}
	dst.PartitionId = obj.PartitionId
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.HealthEvents.Items), int(obj.HealthEvents.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvent

			tmpitem = *item.toGoStruct()

			dst.HealthEvents = append(dst.HealthEvents, tmpitem)
		}

	}
	{
		var innerlst []innerFabricReplicaHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ReplicaHealthStates.Items), int(obj.ReplicaHealthStates.Count))

		for _, item := range innerlst {
			var tmpitem FabricReplicaHealthState

			tmpitem = *item.toGoStruct()

			dst.ReplicaHealthStates = append(dst.ReplicaHealthStates, tmpitem)
		}

	}
	return &dst
}

type FabricPartitionHealthEx1 struct {
	UnhealthyEvaluations []FabricHealthEvaluation
}

func (obj *FabricPartitionHealthEx1) toInnerStruct() *innerFabricPartitionHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricPartitionHealthEx1{}
	lst_361 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_361.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_361.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_361
	return &dst
}

type innerFabricPartitionHealthEx1 struct {
	UnhealthyEvaluations *innerFabricHealthEvaluationList
	Reserved             unsafe.Pointer
}

func (obj *innerFabricPartitionHealthEx1) toGoStruct() *FabricPartitionHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricPartitionHealthEx1{}
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricPartitionHealthEx2 struct {
	HealthStatistics *FabricHealthStatistics
}
type innerFabricPartitionHealthEx2 struct {
	FabricPartitionHealthEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionHealthEx2) toGoStruct() *FabricPartitionHealthEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionHealthEx2
}
func (obj *FabricPartitionHealthEx2) toInnerStruct() *innerFabricPartitionHealthEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionHealthEx2{*obj, nil}
}

type FabricPartitionHealthState struct {
	PartitionId           windows.GUID
	AggregatedHealthState FabricHealthState
}
type innerFabricPartitionHealthState struct {
	FabricPartitionHealthState
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionHealthState) toGoStruct() *FabricPartitionHealthState {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionHealthState
}
func (obj *FabricPartitionHealthState) toInnerStruct() *innerFabricPartitionHealthState {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionHealthState{*obj, nil}
}

type innerFabricPartitionHealthStateList struct {
	Count uint32
	Items *innerFabricPartitionHealthState
}

func (obj *innerFabricPartitionHealthStateList) toGoStruct() []FabricPartitionHealthState {
	var dst []FabricPartitionHealthState
	{
		var innerlst []innerFabricPartitionHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricPartitionHealthState

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedServicePackageHealth struct {
	ApplicationName       string
	ServiceManifestName   string
	NodeName              string
	AggregatedHealthState FabricHealthState
	HealthEvents          []FabricHealthEvent
}

func (obj *FabricDeployedServicePackageHealth) toInnerStruct() *innerFabricDeployedServicePackageHealth {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealth{}
	s_362, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_362

	s_363, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_363

	s_364, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_364

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_365 := &innerFabricHealthEventList{}
	{

		var tmp []innerFabricHealthEvent

		for _, item := range obj.HealthEvents {
			var tmpitem innerFabricHealthEvent

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_365.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_365.Items = &tmp[0]
		}

	}
	dst.HealthEvents = lst_365
	return &dst
}

type innerFabricDeployedServicePackageHealth struct {
	ApplicationName       *uint16
	ServiceManifestName   *uint16
	NodeName              *uint16
	AggregatedHealthState FabricHealthState
	HealthEvents          *innerFabricHealthEventList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealth) toGoStruct() *FabricDeployedServicePackageHealth {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealth{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.HealthEvents.Items), int(obj.HealthEvents.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvent

			tmpitem = *item.toGoStruct()

			dst.HealthEvents = append(dst.HealthEvents, tmpitem)
		}

	}
	return &dst
}

type FabricDeployedServicePackageHealthEx1 struct {
	UnhealthyEvaluations []FabricHealthEvaluation
}

func (obj *FabricDeployedServicePackageHealthEx1) toInnerStruct() *innerFabricDeployedServicePackageHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthEx1{}
	lst_366 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_366.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_366.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_366
	return &dst
}

type innerFabricDeployedServicePackageHealthEx1 struct {
	UnhealthyEvaluations *innerFabricHealthEvaluationList
	Reserved             unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthEx1) toGoStruct() *FabricDeployedServicePackageHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthEx1{}
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricDeployedServicePackageHealthEx2 struct {
	ServicePackageActivationId string
}

func (obj *FabricDeployedServicePackageHealthEx2) toInnerStruct() *innerFabricDeployedServicePackageHealthEx2 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthEx2{}
	s_367, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_367

	return &dst
}

type innerFabricDeployedServicePackageHealthEx2 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthEx2) toGoStruct() *FabricDeployedServicePackageHealthEx2 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthEx2{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type FabricDeployedServicePackageHealthState struct {
	ApplicationName       string
	ServiceManifestName   string
	NodeName              string
	AggregatedHealthState FabricHealthState
}

func (obj *FabricDeployedServicePackageHealthState) toInnerStruct() *innerFabricDeployedServicePackageHealthState {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthState{}
	s_368, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_368

	s_369, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_369

	s_370, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_370

	dst.AggregatedHealthState = obj.AggregatedHealthState
	return &dst
}

type innerFabricDeployedServicePackageHealthState struct {
	ApplicationName       *uint16
	ServiceManifestName   *uint16
	NodeName              *uint16
	AggregatedHealthState FabricHealthState
	Reserved              unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthState) toGoStruct() *FabricDeployedServicePackageHealthState {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthState{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	return &dst
}

type FabricDeployedServicePackageHealthStateEx1 struct {
	ServicePackageActivationId string
}

func (obj *FabricDeployedServicePackageHealthStateEx1) toInnerStruct() *innerFabricDeployedServicePackageHealthStateEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthStateEx1{}
	s_371, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_371

	return &dst
}

type innerFabricDeployedServicePackageHealthStateEx1 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthStateEx1) toGoStruct() *FabricDeployedServicePackageHealthStateEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthStateEx1{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type innerFabricDeployedServicePackageHealthStateList struct {
	Count uint32
	Items *innerFabricDeployedServicePackageHealthState
}

func (obj *innerFabricDeployedServicePackageHealthStateList) toGoStruct() []FabricDeployedServicePackageHealthState {
	var dst []FabricDeployedServicePackageHealthState
	{
		var innerlst []innerFabricDeployedServicePackageHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedServicePackageHealthState

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedApplicationHealth struct {
	ApplicationName                    string
	NodeName                           string
	AggregatedHealthState              FabricHealthState
	HealthEvents                       []FabricHealthEvent
	DeployedServicePackageHealthStates []FabricDeployedServicePackageHealthState
}

func (obj *FabricDeployedApplicationHealth) toInnerStruct() *innerFabricDeployedApplicationHealth {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationHealth{}
	s_372, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_372

	s_373, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_373

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_374 := &innerFabricHealthEventList{}
	{

		var tmp []innerFabricHealthEvent

		for _, item := range obj.HealthEvents {
			var tmpitem innerFabricHealthEvent

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_374.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_374.Items = &tmp[0]
		}

	}
	dst.HealthEvents = lst_374
	lst_375 := &innerFabricDeployedServicePackageHealthStateList{}
	{

		var tmp []innerFabricDeployedServicePackageHealthState

		for _, item := range obj.DeployedServicePackageHealthStates {
			var tmpitem innerFabricDeployedServicePackageHealthState

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_375.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_375.Items = &tmp[0]
		}

	}
	dst.DeployedServicePackageHealthStates = lst_375
	return &dst
}

type innerFabricDeployedApplicationHealth struct {
	ApplicationName                    *uint16
	NodeName                           *uint16
	AggregatedHealthState              FabricHealthState
	HealthEvents                       *innerFabricHealthEventList
	DeployedServicePackageHealthStates *innerFabricDeployedServicePackageHealthStateList
	Reserved                           unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealth) toGoStruct() *FabricDeployedApplicationHealth {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationHealth{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.HealthEvents.Items), int(obj.HealthEvents.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvent

			tmpitem = *item.toGoStruct()

			dst.HealthEvents = append(dst.HealthEvents, tmpitem)
		}

	}
	{
		var innerlst []innerFabricDeployedServicePackageHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.DeployedServicePackageHealthStates.Items), int(obj.DeployedServicePackageHealthStates.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedServicePackageHealthState

			tmpitem = *item.toGoStruct()

			dst.DeployedServicePackageHealthStates = append(dst.DeployedServicePackageHealthStates, tmpitem)
		}

	}
	return &dst
}

type FabricDeployedApplicationHealthEx1 struct {
	UnhealthyEvaluations []FabricHealthEvaluation
}

func (obj *FabricDeployedApplicationHealthEx1) toInnerStruct() *innerFabricDeployedApplicationHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationHealthEx1{}
	lst_376 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_376.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_376.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_376
	return &dst
}

type innerFabricDeployedApplicationHealthEx1 struct {
	UnhealthyEvaluations *innerFabricHealthEvaluationList
	Reserved             unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthEx1) toGoStruct() *FabricDeployedApplicationHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationHealthEx1{}
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricDeployedApplicationHealthEx2 struct {
	HealthStatistics *FabricHealthStatistics
}
type innerFabricDeployedApplicationHealthEx2 struct {
	FabricDeployedApplicationHealthEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthEx2) toGoStruct() *FabricDeployedApplicationHealthEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedApplicationHealthEx2
}
func (obj *FabricDeployedApplicationHealthEx2) toInnerStruct() *innerFabricDeployedApplicationHealthEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedApplicationHealthEx2{*obj, nil}
}

type FabricDeployedApplicationHealthState struct {
	ApplicationName       string
	NodeName              string
	AggregatedHealthState FabricHealthState
}

func (obj *FabricDeployedApplicationHealthState) toInnerStruct() *innerFabricDeployedApplicationHealthState {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationHealthState{}
	s_377, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_377

	s_378, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_378

	dst.AggregatedHealthState = obj.AggregatedHealthState
	return &dst
}

type innerFabricDeployedApplicationHealthState struct {
	ApplicationName       *uint16
	NodeName              *uint16
	AggregatedHealthState FabricHealthState
	Reserved              unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthState) toGoStruct() *FabricDeployedApplicationHealthState {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationHealthState{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	return &dst
}

type innerFabricDeployedApplicationHealthStateList struct {
	Count uint32
	Items *innerFabricDeployedApplicationHealthState
}

func (obj *innerFabricDeployedApplicationHealthStateList) toGoStruct() []FabricDeployedApplicationHealthState {
	var dst []FabricDeployedApplicationHealthState
	{
		var innerlst []innerFabricDeployedApplicationHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedApplicationHealthState

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServiceHealth struct {
	ServiceName           string
	AggregatedHealthState FabricHealthState
	HealthEvents          []FabricHealthEvent
	PartitionHealthStates []FabricPartitionHealthState
}

func (obj *FabricServiceHealth) toInnerStruct() *innerFabricServiceHealth {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceHealth{}
	s_379, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_379

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_380 := &innerFabricHealthEventList{}
	{

		var tmp []innerFabricHealthEvent

		for _, item := range obj.HealthEvents {
			var tmpitem innerFabricHealthEvent

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_380.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_380.Items = &tmp[0]
		}

	}
	dst.HealthEvents = lst_380
	lst_381 := &innerFabricPartitionHealthStateList{}
	{

		var tmp []innerFabricPartitionHealthState

		for _, item := range obj.PartitionHealthStates {
			var tmpitem innerFabricPartitionHealthState

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_381.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_381.Items = &tmp[0]
		}

	}
	dst.PartitionHealthStates = lst_381
	return &dst
}

type innerFabricServiceHealth struct {
	ServiceName           *uint16
	AggregatedHealthState FabricHealthState
	HealthEvents          *innerFabricHealthEventList
	PartitionHealthStates *innerFabricPartitionHealthStateList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricServiceHealth) toGoStruct() *FabricServiceHealth {
	if obj == nil {
		return nil
	}
	dst := FabricServiceHealth{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.HealthEvents.Items), int(obj.HealthEvents.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvent

			tmpitem = *item.toGoStruct()

			dst.HealthEvents = append(dst.HealthEvents, tmpitem)
		}

	}
	{
		var innerlst []innerFabricPartitionHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PartitionHealthStates.Items), int(obj.PartitionHealthStates.Count))

		for _, item := range innerlst {
			var tmpitem FabricPartitionHealthState

			tmpitem = *item.toGoStruct()

			dst.PartitionHealthStates = append(dst.PartitionHealthStates, tmpitem)
		}

	}
	return &dst
}

type FabricServiceHealthEx1 struct {
	UnhealthyEvaluations []FabricHealthEvaluation
}

func (obj *FabricServiceHealthEx1) toInnerStruct() *innerFabricServiceHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceHealthEx1{}
	lst_382 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_382.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_382.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_382
	return &dst
}

type innerFabricServiceHealthEx1 struct {
	UnhealthyEvaluations *innerFabricHealthEvaluationList
	Reserved             unsafe.Pointer
}

func (obj *innerFabricServiceHealthEx1) toGoStruct() *FabricServiceHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricServiceHealthEx1{}
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricServiceHealthEx2 struct {
	HealthStatistics *FabricHealthStatistics
}
type innerFabricServiceHealthEx2 struct {
	FabricServiceHealthEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceHealthEx2) toGoStruct() *FabricServiceHealthEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceHealthEx2
}
func (obj *FabricServiceHealthEx2) toInnerStruct() *innerFabricServiceHealthEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceHealthEx2{*obj, nil}
}

type FabricServiceHealthState struct {
	ServiceName           string
	AggregatedHealthState FabricHealthState
}

func (obj *FabricServiceHealthState) toInnerStruct() *innerFabricServiceHealthState {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceHealthState{}
	s_383, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_383

	dst.AggregatedHealthState = obj.AggregatedHealthState
	return &dst
}

type innerFabricServiceHealthState struct {
	ServiceName           *uint16
	AggregatedHealthState FabricHealthState
	Reserved              unsafe.Pointer
}

func (obj *innerFabricServiceHealthState) toGoStruct() *FabricServiceHealthState {
	if obj == nil {
		return nil
	}
	dst := FabricServiceHealthState{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	return &dst
}

type innerFabricServiceHealthStateList struct {
	Count uint32
	Items *innerFabricServiceHealthState
}

func (obj *innerFabricServiceHealthStateList) toGoStruct() []FabricServiceHealthState {
	var dst []FabricServiceHealthState
	{
		var innerlst []innerFabricServiceHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceHealthState

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricApplicationHealth struct {
	ApplicationName                 string
	AggregatedHealthState           FabricHealthState
	HealthEvents                    []FabricHealthEvent
	DeployedApplicationHealthStates []FabricDeployedApplicationHealthState
	ServiceHealthStates             []FabricServiceHealthState
}

func (obj *FabricApplicationHealth) toInnerStruct() *innerFabricApplicationHealth {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealth{}
	s_384, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_384

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_385 := &innerFabricHealthEventList{}
	{

		var tmp []innerFabricHealthEvent

		for _, item := range obj.HealthEvents {
			var tmpitem innerFabricHealthEvent

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_385.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_385.Items = &tmp[0]
		}

	}
	dst.HealthEvents = lst_385
	lst_386 := &innerFabricDeployedApplicationHealthStateList{}
	{

		var tmp []innerFabricDeployedApplicationHealthState

		for _, item := range obj.DeployedApplicationHealthStates {
			var tmpitem innerFabricDeployedApplicationHealthState

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_386.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_386.Items = &tmp[0]
		}

	}
	dst.DeployedApplicationHealthStates = lst_386
	lst_387 := &innerFabricServiceHealthStateList{}
	{

		var tmp []innerFabricServiceHealthState

		for _, item := range obj.ServiceHealthStates {
			var tmpitem innerFabricServiceHealthState

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_387.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_387.Items = &tmp[0]
		}

	}
	dst.ServiceHealthStates = lst_387
	return &dst
}

type innerFabricApplicationHealth struct {
	ApplicationName                 *uint16
	AggregatedHealthState           FabricHealthState
	HealthEvents                    *innerFabricHealthEventList
	DeployedApplicationHealthStates *innerFabricDeployedApplicationHealthStateList
	ServiceHealthStates             *innerFabricServiceHealthStateList
	Reserved                        unsafe.Pointer
}

func (obj *innerFabricApplicationHealth) toGoStruct() *FabricApplicationHealth {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealth{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.HealthEvents.Items), int(obj.HealthEvents.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvent

			tmpitem = *item.toGoStruct()

			dst.HealthEvents = append(dst.HealthEvents, tmpitem)
		}

	}
	{
		var innerlst []innerFabricDeployedApplicationHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.DeployedApplicationHealthStates.Items), int(obj.DeployedApplicationHealthStates.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedApplicationHealthState

			tmpitem = *item.toGoStruct()

			dst.DeployedApplicationHealthStates = append(dst.DeployedApplicationHealthStates, tmpitem)
		}

	}
	{
		var innerlst []innerFabricServiceHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ServiceHealthStates.Items), int(obj.ServiceHealthStates.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceHealthState

			tmpitem = *item.toGoStruct()

			dst.ServiceHealthStates = append(dst.ServiceHealthStates, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationHealthEx1 struct {
	UnhealthyEvaluations []FabricHealthEvaluation
}

func (obj *FabricApplicationHealthEx1) toInnerStruct() *innerFabricApplicationHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealthEx1{}
	lst_388 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_388.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_388.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_388
	return &dst
}

type innerFabricApplicationHealthEx1 struct {
	UnhealthyEvaluations *innerFabricHealthEvaluationList
	Reserved             unsafe.Pointer
}

func (obj *innerFabricApplicationHealthEx1) toGoStruct() *FabricApplicationHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealthEx1{}
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationHealthEx2 struct {
	HealthStatistics *FabricHealthStatistics
}
type innerFabricApplicationHealthEx2 struct {
	FabricApplicationHealthEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricApplicationHealthEx2) toGoStruct() *FabricApplicationHealthEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricApplicationHealthEx2
}
func (obj *FabricApplicationHealthEx2) toInnerStruct() *innerFabricApplicationHealthEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricApplicationHealthEx2{*obj, nil}
}

type FabricNodeHealth struct {
	NodeName              string
	AggregatedHealthState FabricHealthState
	HealthEvents          []FabricHealthEvent
}

func (obj *FabricNodeHealth) toInnerStruct() *innerFabricNodeHealth {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeHealth{}
	s_389, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_389

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_390 := &innerFabricHealthEventList{}
	{

		var tmp []innerFabricHealthEvent

		for _, item := range obj.HealthEvents {
			var tmpitem innerFabricHealthEvent

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_390.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_390.Items = &tmp[0]
		}

	}
	dst.HealthEvents = lst_390
	return &dst
}

type innerFabricNodeHealth struct {
	NodeName              *uint16
	AggregatedHealthState FabricHealthState
	HealthEvents          *innerFabricHealthEventList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricNodeHealth) toGoStruct() *FabricNodeHealth {
	if obj == nil {
		return nil
	}
	dst := FabricNodeHealth{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.HealthEvents.Items), int(obj.HealthEvents.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvent

			tmpitem = *item.toGoStruct()

			dst.HealthEvents = append(dst.HealthEvents, tmpitem)
		}

	}
	return &dst
}

type FabricNodeHealthEx1 struct {
	UnhealthyEvaluations []FabricHealthEvaluation
}

func (obj *FabricNodeHealthEx1) toInnerStruct() *innerFabricNodeHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeHealthEx1{}
	lst_391 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_391.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_391.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_391
	return &dst
}

type innerFabricNodeHealthEx1 struct {
	UnhealthyEvaluations *innerFabricHealthEvaluationList
	Reserved             unsafe.Pointer
}

func (obj *innerFabricNodeHealthEx1) toGoStruct() *FabricNodeHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricNodeHealthEx1{}
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricClusterHealth struct {
	AggregatedHealthState FabricHealthState
}
type innerFabricClusterHealth struct {
	FabricClusterHealth
	Reserved unsafe.Pointer
}

func (obj *innerFabricClusterHealth) toGoStruct() *FabricClusterHealth {
	if obj == nil {
		return nil
	}
	return &obj.FabricClusterHealth
}
func (obj *FabricClusterHealth) toInnerStruct() *innerFabricClusterHealth {
	if obj == nil {
		return nil
	}
	return &innerFabricClusterHealth{*obj, nil}
}

type FabricNodeHealthState struct {
	NodeName              string
	AggregatedHealthState FabricHealthState
}

func (obj *FabricNodeHealthState) toInnerStruct() *innerFabricNodeHealthState {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeHealthState{}
	s_392, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_392

	dst.AggregatedHealthState = obj.AggregatedHealthState
	return &dst
}

type innerFabricNodeHealthState struct {
	NodeName              *uint16
	AggregatedHealthState FabricHealthState
	Reserved              unsafe.Pointer
}

func (obj *innerFabricNodeHealthState) toGoStruct() *FabricNodeHealthState {
	if obj == nil {
		return nil
	}
	dst := FabricNodeHealthState{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	return &dst
}

type innerFabricNodeHealthStateList struct {
	Count uint32
	Items *innerFabricNodeHealthState
}

func (obj *innerFabricNodeHealthStateList) toGoStruct() []FabricNodeHealthState {
	var dst []FabricNodeHealthState
	{
		var innerlst []innerFabricNodeHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeHealthState

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricApplicationHealthState struct {
	ApplicationName       string
	AggregatedHealthState FabricHealthState
}

func (obj *FabricApplicationHealthState) toInnerStruct() *innerFabricApplicationHealthState {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealthState{}
	s_393, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_393

	dst.AggregatedHealthState = obj.AggregatedHealthState
	return &dst
}

type innerFabricApplicationHealthState struct {
	ApplicationName       *uint16
	AggregatedHealthState FabricHealthState
	Reserved              unsafe.Pointer
}

func (obj *innerFabricApplicationHealthState) toGoStruct() *FabricApplicationHealthState {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealthState{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	return &dst
}

type innerFabricApplicationHealthStateList struct {
	Count uint32
	Items *innerFabricApplicationHealthState
}

func (obj *innerFabricApplicationHealthStateList) toGoStruct() []FabricApplicationHealthState {
	var dst []FabricApplicationHealthState
	{
		var innerlst []innerFabricApplicationHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationHealthState

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricClusterHealthEx1 struct {
	NodeHealthStates        []FabricNodeHealthState
	ApplicationHealthStates []FabricApplicationHealthState
	HealthEvents            []FabricHealthEvent
}

func (obj *FabricClusterHealthEx1) toInnerStruct() *innerFabricClusterHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricClusterHealthEx1{}
	lst_394 := &innerFabricNodeHealthStateList{}
	{

		var tmp []innerFabricNodeHealthState

		for _, item := range obj.NodeHealthStates {
			var tmpitem innerFabricNodeHealthState

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_394.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_394.Items = &tmp[0]
		}

	}
	dst.NodeHealthStates = lst_394
	lst_395 := &innerFabricApplicationHealthStateList{}
	{

		var tmp []innerFabricApplicationHealthState

		for _, item := range obj.ApplicationHealthStates {
			var tmpitem innerFabricApplicationHealthState

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_395.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_395.Items = &tmp[0]
		}

	}
	dst.ApplicationHealthStates = lst_395
	lst_396 := &innerFabricHealthEventList{}
	{

		var tmp []innerFabricHealthEvent

		for _, item := range obj.HealthEvents {
			var tmpitem innerFabricHealthEvent

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_396.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_396.Items = &tmp[0]
		}

	}
	dst.HealthEvents = lst_396
	return &dst
}

type innerFabricClusterHealthEx1 struct {
	NodeHealthStates        *innerFabricNodeHealthStateList
	ApplicationHealthStates *innerFabricApplicationHealthStateList
	HealthEvents            *innerFabricHealthEventList
	Reserved                unsafe.Pointer
}

func (obj *innerFabricClusterHealthEx1) toGoStruct() *FabricClusterHealthEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricClusterHealthEx1{}
	{
		var innerlst []innerFabricNodeHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.NodeHealthStates.Items), int(obj.NodeHealthStates.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeHealthState

			tmpitem = *item.toGoStruct()

			dst.NodeHealthStates = append(dst.NodeHealthStates, tmpitem)
		}

	}
	{
		var innerlst []innerFabricApplicationHealthState
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationHealthStates.Items), int(obj.ApplicationHealthStates.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationHealthState

			tmpitem = *item.toGoStruct()

			dst.ApplicationHealthStates = append(dst.ApplicationHealthStates, tmpitem)
		}

	}
	{
		var innerlst []innerFabricHealthEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.HealthEvents.Items), int(obj.HealthEvents.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvent

			tmpitem = *item.toGoStruct()

			dst.HealthEvents = append(dst.HealthEvents, tmpitem)
		}

	}
	return &dst
}

type FabricClusterHealthEx2 struct {
	UnhealthyEvaluations []FabricHealthEvaluation
}

func (obj *FabricClusterHealthEx2) toInnerStruct() *innerFabricClusterHealthEx2 {
	if obj == nil {
		return nil
	}
	dst := innerFabricClusterHealthEx2{}
	lst_397 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_397.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_397.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_397
	return &dst
}

type innerFabricClusterHealthEx2 struct {
	UnhealthyEvaluations *innerFabricHealthEvaluationList
	Reserved             unsafe.Pointer
}

func (obj *innerFabricClusterHealthEx2) toGoStruct() *FabricClusterHealthEx2 {
	if obj == nil {
		return nil
	}
	dst := FabricClusterHealthEx2{}
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricClusterHealthEx3 struct {
	HealthStatistics *FabricHealthStatistics
}
type innerFabricClusterHealthEx3 struct {
	FabricClusterHealthEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricClusterHealthEx3) toGoStruct() *FabricClusterHealthEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricClusterHealthEx3
}
func (obj *FabricClusterHealthEx3) toInnerStruct() *innerFabricClusterHealthEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricClusterHealthEx3{*obj, nil}
}

type FabricEventHealthEvaluation struct {
	Description            string
	AggregatedHealthState  FabricHealthState
	UnhealthyEvent         *FabricHealthEvent
	ConsiderWarningAsError bool
}

func (obj *FabricEventHealthEvaluation) toInnerStruct() *innerFabricEventHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricEventHealthEvaluation{}
	s_398, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_398

	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.UnhealthyEvent = obj.UnhealthyEvent.toInnerStruct()
	dst.ConsiderWarningAsError = obj.ConsiderWarningAsError
	return &dst
}

type innerFabricEventHealthEvaluation struct {
	Description            *uint16
	AggregatedHealthState  FabricHealthState
	UnhealthyEvent         *innerFabricHealthEvent
	ConsiderWarningAsError bool
	Reserved               unsafe.Pointer
}

func (obj *innerFabricEventHealthEvaluation) toGoStruct() *FabricEventHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricEventHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.UnhealthyEvent = obj.UnhealthyEvent.toGoStruct()
	dst.ConsiderWarningAsError = obj.ConsiderWarningAsError
	return &dst
}

type FabricReplicasHealthEvaluation struct {
	Description                             string
	AggregatedHealthState                   FabricHealthState
	UnhealthyEvaluations                    []FabricHealthEvaluation
	TotalCount                              uint32
	MaxPercentUnhealthyReplicasPerPartition byte
}

func (obj *FabricReplicasHealthEvaluation) toInnerStruct() *innerFabricReplicasHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricReplicasHealthEvaluation{}
	s_399, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_399

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_400 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_400.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_400.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_400
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyReplicasPerPartition = obj.MaxPercentUnhealthyReplicasPerPartition
	return &dst
}

type innerFabricReplicasHealthEvaluation struct {
	Description                             *uint16
	AggregatedHealthState                   FabricHealthState
	UnhealthyEvaluations                    *innerFabricHealthEvaluationList
	TotalCount                              uint32
	MaxPercentUnhealthyReplicasPerPartition byte
	Reserved                                unsafe.Pointer
}

func (obj *innerFabricReplicasHealthEvaluation) toGoStruct() *FabricReplicasHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricReplicasHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyReplicasPerPartition = obj.MaxPercentUnhealthyReplicasPerPartition
	return &dst
}

type FabricPartitionsHealthEvaluation struct {
	Description                             string
	AggregatedHealthState                   FabricHealthState
	UnhealthyEvaluations                    []FabricHealthEvaluation
	TotalCount                              uint32
	MaxPercentUnhealthyPartitionsPerService byte
}

func (obj *FabricPartitionsHealthEvaluation) toInnerStruct() *innerFabricPartitionsHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricPartitionsHealthEvaluation{}
	s_401, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_401

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_402 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_402.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_402.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_402
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyPartitionsPerService = obj.MaxPercentUnhealthyPartitionsPerService
	return &dst
}

type innerFabricPartitionsHealthEvaluation struct {
	Description                             *uint16
	AggregatedHealthState                   FabricHealthState
	UnhealthyEvaluations                    *innerFabricHealthEvaluationList
	TotalCount                              uint32
	MaxPercentUnhealthyPartitionsPerService byte
	Reserved                                unsafe.Pointer
}

func (obj *innerFabricPartitionsHealthEvaluation) toGoStruct() *FabricPartitionsHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricPartitionsHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyPartitionsPerService = obj.MaxPercentUnhealthyPartitionsPerService
	return &dst
}

type FabricDeployedServicePackagesHealthEvaluation struct {
	Description           string
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  []FabricHealthEvaluation
	TotalCount            uint32
}

func (obj *FabricDeployedServicePackagesHealthEvaluation) toInnerStruct() *innerFabricDeployedServicePackagesHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackagesHealthEvaluation{}
	s_403, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_403

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_404 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_404.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_404.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_404
	dst.TotalCount = obj.TotalCount
	return &dst
}

type innerFabricDeployedServicePackagesHealthEvaluation struct {
	Description           *uint16
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  *innerFabricHealthEvaluationList
	TotalCount            uint32
	Reserved              unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackagesHealthEvaluation) toGoStruct() *FabricDeployedServicePackagesHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackagesHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.TotalCount = obj.TotalCount
	return &dst
}

type FabricDeployedApplicationsHealthEvaluation struct {
	Description                             string
	AggregatedHealthState                   FabricHealthState
	UnhealthyEvaluations                    []FabricHealthEvaluation
	TotalCount                              uint32
	MaxPercentUnhealthyDeployedApplications byte
}

func (obj *FabricDeployedApplicationsHealthEvaluation) toInnerStruct() *innerFabricDeployedApplicationsHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationsHealthEvaluation{}
	s_405, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_405

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_406 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_406.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_406.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_406
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyDeployedApplications = obj.MaxPercentUnhealthyDeployedApplications
	return &dst
}

type innerFabricDeployedApplicationsHealthEvaluation struct {
	Description                             *uint16
	AggregatedHealthState                   FabricHealthState
	UnhealthyEvaluations                    *innerFabricHealthEvaluationList
	TotalCount                              uint32
	MaxPercentUnhealthyDeployedApplications byte
	Reserved                                unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationsHealthEvaluation) toGoStruct() *FabricDeployedApplicationsHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationsHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyDeployedApplications = obj.MaxPercentUnhealthyDeployedApplications
	return &dst
}

type FabricServicesHealthEvaluation struct {
	Description                 string
	AggregatedHealthState       FabricHealthState
	ServiceTypeName             string
	UnhealthyEvaluations        []FabricHealthEvaluation
	TotalCount                  uint32
	MaxPercentUnhealthyServices byte
}

func (obj *FabricServicesHealthEvaluation) toInnerStruct() *innerFabricServicesHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricServicesHealthEvaluation{}
	s_407, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_407

	dst.AggregatedHealthState = obj.AggregatedHealthState
	s_408, _ := windows.UTF16PtrFromString(obj.ServiceTypeName)
	dst.ServiceTypeName = s_408

	lst_409 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_409.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_409.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_409
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyServices = obj.MaxPercentUnhealthyServices
	return &dst
}

type innerFabricServicesHealthEvaluation struct {
	Description                 *uint16
	AggregatedHealthState       FabricHealthState
	ServiceTypeName             *uint16
	UnhealthyEvaluations        *innerFabricHealthEvaluationList
	TotalCount                  uint32
	MaxPercentUnhealthyServices byte
	Reserved                    unsafe.Pointer
}

func (obj *innerFabricServicesHealthEvaluation) toGoStruct() *FabricServicesHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricServicesHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.ServiceTypeName = windows.UTF16PtrToString(obj.ServiceTypeName)
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyServices = obj.MaxPercentUnhealthyServices
	return &dst
}

type FabricNodesHealthEvaluation struct {
	Description              string
	AggregatedHealthState    FabricHealthState
	UnhealthyEvaluations     []FabricHealthEvaluation
	TotalCount               uint32
	MaxPercentUnhealthyNodes byte
}

func (obj *FabricNodesHealthEvaluation) toInnerStruct() *innerFabricNodesHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodesHealthEvaluation{}
	s_410, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_410

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_411 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_411.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_411.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_411
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyNodes = obj.MaxPercentUnhealthyNodes
	return &dst
}

type innerFabricNodesHealthEvaluation struct {
	Description              *uint16
	AggregatedHealthState    FabricHealthState
	UnhealthyEvaluations     *innerFabricHealthEvaluationList
	TotalCount               uint32
	MaxPercentUnhealthyNodes byte
	Reserved                 unsafe.Pointer
}

func (obj *innerFabricNodesHealthEvaluation) toGoStruct() *FabricNodesHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricNodesHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyNodes = obj.MaxPercentUnhealthyNodes
	return &dst
}

type FabricApplicationsHealthEvaluation struct {
	Description                     string
	AggregatedHealthState           FabricHealthState
	UnhealthyEvaluations            []FabricHealthEvaluation
	TotalCount                      uint32
	MaxPercentUnhealthyApplications byte
}

func (obj *FabricApplicationsHealthEvaluation) toInnerStruct() *innerFabricApplicationsHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationsHealthEvaluation{}
	s_412, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_412

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_413 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_413.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_413.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_413
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyApplications = obj.MaxPercentUnhealthyApplications
	return &dst
}

type innerFabricApplicationsHealthEvaluation struct {
	Description                     *uint16
	AggregatedHealthState           FabricHealthState
	UnhealthyEvaluations            *innerFabricHealthEvaluationList
	TotalCount                      uint32
	MaxPercentUnhealthyApplications byte
	Reserved                        unsafe.Pointer
}

func (obj *innerFabricApplicationsHealthEvaluation) toGoStruct() *FabricApplicationsHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationsHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyApplications = obj.MaxPercentUnhealthyApplications
	return &dst
}

type FabricUpgradeDomainNodesHealthEvaluation struct {
	Description              string
	AggregatedHealthState    FabricHealthState
	UpgradeDomainName        string
	UnhealthyEvaluations     []FabricHealthEvaluation
	TotalCount               uint32
	MaxPercentUnhealthyNodes byte
}

func (obj *FabricUpgradeDomainNodesHealthEvaluation) toInnerStruct() *innerFabricUpgradeDomainNodesHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricUpgradeDomainNodesHealthEvaluation{}
	s_414, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_414

	dst.AggregatedHealthState = obj.AggregatedHealthState
	s_415, _ := windows.UTF16PtrFromString(obj.UpgradeDomainName)
	dst.UpgradeDomainName = s_415

	lst_416 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_416.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_416.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_416
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyNodes = obj.MaxPercentUnhealthyNodes
	return &dst
}

type innerFabricUpgradeDomainNodesHealthEvaluation struct {
	Description              *uint16
	AggregatedHealthState    FabricHealthState
	UpgradeDomainName        *uint16
	UnhealthyEvaluations     *innerFabricHealthEvaluationList
	TotalCount               uint32
	MaxPercentUnhealthyNodes byte
	Reserved                 unsafe.Pointer
}

func (obj *innerFabricUpgradeDomainNodesHealthEvaluation) toGoStruct() *FabricUpgradeDomainNodesHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricUpgradeDomainNodesHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.UpgradeDomainName = windows.UTF16PtrToString(obj.UpgradeDomainName)
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyNodes = obj.MaxPercentUnhealthyNodes
	return &dst
}

type FabricUpgradeDomainDeployedApplicationsHealthEvaluation struct {
	Description                             string
	AggregatedHealthState                   FabricHealthState
	UpgradeDomainName                       string
	UnhealthyEvaluations                    []FabricHealthEvaluation
	TotalCount                              uint32
	MaxPercentUnhealthyDeployedApplications byte
}

func (obj *FabricUpgradeDomainDeployedApplicationsHealthEvaluation) toInnerStruct() *innerFabricUpgradeDomainDeployedApplicationsHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricUpgradeDomainDeployedApplicationsHealthEvaluation{}
	s_417, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_417

	dst.AggregatedHealthState = obj.AggregatedHealthState
	s_418, _ := windows.UTF16PtrFromString(obj.UpgradeDomainName)
	dst.UpgradeDomainName = s_418

	lst_419 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_419.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_419.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_419
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyDeployedApplications = obj.MaxPercentUnhealthyDeployedApplications
	return &dst
}

type innerFabricUpgradeDomainDeployedApplicationsHealthEvaluation struct {
	Description                             *uint16
	AggregatedHealthState                   FabricHealthState
	UpgradeDomainName                       *uint16
	UnhealthyEvaluations                    *innerFabricHealthEvaluationList
	TotalCount                              uint32
	MaxPercentUnhealthyDeployedApplications byte
	Reserved                                unsafe.Pointer
}

func (obj *innerFabricUpgradeDomainDeployedApplicationsHealthEvaluation) toGoStruct() *FabricUpgradeDomainDeployedApplicationsHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricUpgradeDomainDeployedApplicationsHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.UpgradeDomainName = windows.UTF16PtrToString(obj.UpgradeDomainName)
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyDeployedApplications = obj.MaxPercentUnhealthyDeployedApplications
	return &dst
}

type FabricSystemApplicationHealthEvaluation struct {
	Description           string
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  []FabricHealthEvaluation
}

func (obj *FabricSystemApplicationHealthEvaluation) toInnerStruct() *innerFabricSystemApplicationHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricSystemApplicationHealthEvaluation{}
	s_420, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_420

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_421 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_421.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_421.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_421
	return &dst
}

type innerFabricSystemApplicationHealthEvaluation struct {
	Description           *uint16
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  *innerFabricHealthEvaluationList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricSystemApplicationHealthEvaluation) toGoStruct() *FabricSystemApplicationHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricSystemApplicationHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricNodeHealthEvaluation struct {
	Description           string
	NodeName              string
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  []FabricHealthEvaluation
}

func (obj *FabricNodeHealthEvaluation) toInnerStruct() *innerFabricNodeHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeHealthEvaluation{}
	s_422, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_422

	s_423, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_423

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_424 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_424.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_424.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_424
	return &dst
}

type innerFabricNodeHealthEvaluation struct {
	Description           *uint16
	NodeName              *uint16
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  *innerFabricHealthEvaluationList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricNodeHealthEvaluation) toGoStruct() *FabricNodeHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricNodeHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricReplicaHealthEvaluation struct {
	Description           string
	PartitionId           windows.GUID
	ReplicaOrInstanceId   int64
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  []FabricHealthEvaluation
}

func (obj *FabricReplicaHealthEvaluation) toInnerStruct() *innerFabricReplicaHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricReplicaHealthEvaluation{}
	s_425, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_425

	dst.PartitionId = obj.PartitionId
	dst.ReplicaOrInstanceId = obj.ReplicaOrInstanceId
	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_426 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_426.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_426.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_426
	return &dst
}

type innerFabricReplicaHealthEvaluation struct {
	Description           *uint16
	PartitionId           windows.GUID
	ReplicaOrInstanceId   int64
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  *innerFabricHealthEvaluationList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricReplicaHealthEvaluation) toGoStruct() *FabricReplicaHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricReplicaHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.PartitionId = obj.PartitionId
	dst.ReplicaOrInstanceId = obj.ReplicaOrInstanceId
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricPartitionHealthEvaluation struct {
	Description           string
	PartitionId           windows.GUID
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  []FabricHealthEvaluation
}

func (obj *FabricPartitionHealthEvaluation) toInnerStruct() *innerFabricPartitionHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricPartitionHealthEvaluation{}
	s_427, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_427

	dst.PartitionId = obj.PartitionId
	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_428 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_428.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_428.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_428
	return &dst
}

type innerFabricPartitionHealthEvaluation struct {
	Description           *uint16
	PartitionId           windows.GUID
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  *innerFabricHealthEvaluationList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricPartitionHealthEvaluation) toGoStruct() *FabricPartitionHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricPartitionHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.PartitionId = obj.PartitionId
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricServiceHealthEvaluation struct {
	Description           string
	ServiceName           string
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  []FabricHealthEvaluation
}

func (obj *FabricServiceHealthEvaluation) toInnerStruct() *innerFabricServiceHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceHealthEvaluation{}
	s_429, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_429

	s_430, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_430

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_431 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_431.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_431.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_431
	return &dst
}

type innerFabricServiceHealthEvaluation struct {
	Description           *uint16
	ServiceName           *uint16
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  *innerFabricHealthEvaluationList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricServiceHealthEvaluation) toGoStruct() *FabricServiceHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricServiceHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricDeployedServicePackageHealthEvaluation struct {
	Description           string
	ApplicationName       string
	ServiceManifestName   string
	NodeName              string
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  []FabricHealthEvaluation
}

func (obj *FabricDeployedServicePackageHealthEvaluation) toInnerStruct() *innerFabricDeployedServicePackageHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthEvaluation{}
	s_432, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_432

	s_433, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_433

	s_434, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_434

	s_435, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_435

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_436 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_436.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_436.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_436
	return &dst
}

type innerFabricDeployedServicePackageHealthEvaluation struct {
	Description           *uint16
	ApplicationName       *uint16
	ServiceManifestName   *uint16
	NodeName              *uint16
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  *innerFabricHealthEvaluationList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthEvaluation) toGoStruct() *FabricDeployedServicePackageHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricDeployedServicePackageHealthEvaluationEx1 struct {
	ServicePackageActivationId string
}

func (obj *FabricDeployedServicePackageHealthEvaluationEx1) toInnerStruct() *innerFabricDeployedServicePackageHealthEvaluationEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthEvaluationEx1{}
	s_437, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_437

	return &dst
}

type innerFabricDeployedServicePackageHealthEvaluationEx1 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthEvaluationEx1) toGoStruct() *FabricDeployedServicePackageHealthEvaluationEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthEvaluationEx1{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type FabricDeployedApplicationHealthEvaluation struct {
	Description           string
	ApplicationName       string
	NodeName              string
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  []FabricHealthEvaluation
}

func (obj *FabricDeployedApplicationHealthEvaluation) toInnerStruct() *innerFabricDeployedApplicationHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationHealthEvaluation{}
	s_438, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_438

	s_439, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_439

	s_440, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_440

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_441 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_441.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_441.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_441
	return &dst
}

type innerFabricDeployedApplicationHealthEvaluation struct {
	Description           *uint16
	ApplicationName       *uint16
	NodeName              *uint16
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  *innerFabricHealthEvaluationList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthEvaluation) toGoStruct() *FabricDeployedApplicationHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationHealthEvaluation struct {
	Description           string
	ApplicationName       string
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  []FabricHealthEvaluation
}

func (obj *FabricApplicationHealthEvaluation) toInnerStruct() *innerFabricApplicationHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealthEvaluation{}
	s_442, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_442

	s_443, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_443

	dst.AggregatedHealthState = obj.AggregatedHealthState
	lst_444 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_444.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_444.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_444
	return &dst
}

type innerFabricApplicationHealthEvaluation struct {
	Description           *uint16
	ApplicationName       *uint16
	AggregatedHealthState FabricHealthState
	UnhealthyEvaluations  *innerFabricHealthEvaluationList
	Reserved              unsafe.Pointer
}

func (obj *innerFabricApplicationHealthEvaluation) toGoStruct() *FabricApplicationHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type innerFabricX509Credentials struct {
	AllowedCommonNameCount uint32
	AllowedCommonNames     **uint16
	FindType               FabricX509FindType
	FindValue              unsafe.Pointer
	StoreLocation          FabricX509StoreLocation
	StoreName              *uint16
	ProtectionLevel        FabricProtectionLevel
	Reserved               unsafe.Pointer
}
type innerFabricX509CredentialsEx1 struct {
	IssuerThumbprintCount uint32
	IssuerThumbprints     **uint16
	Reserved              unsafe.Pointer
}
type innerFabricX509Name struct {
	Name                 *uint16
	IssuerCertThumbprint *uint16
	Reserved             unsafe.Pointer
}
type innerFabricX509CredentialsEx2 struct {
	RemoteCertThumbprintCount uint32
	RemoteCertThumbprints     **uint16
	RemoteX509NameCount       uint32
	RemoteX509Names           innerFabricX509Name
	FindValueSecondary        unsafe.Pointer
	Reserved                  unsafe.Pointer
}
type innerFabricX509IssuerName struct {
	Name             *uint16
	IssuerStoreCount uint32
	IssuerStores     **uint16
	Reserved         unsafe.Pointer
}
type innerFabricX509CredentialsEx3 struct {
	RemoteCertIssuerCount uint32
	RemoteCertIssuers     innerFabricX509IssuerName
	Reserved              unsafe.Pointer
}
type innerFabricX509Credentials2 struct {
	CertLoadPath              *uint16
	RemoteCertThumbprintCount uint32
	RemoteCertThumbprints     **uint16
	RemoteX509NameCount       uint32
	RemoteX509Names           innerFabricX509Name
	ProtectionLevel           FabricProtectionLevel
	Reserved                  unsafe.Pointer
}
type innerFabricClaimsCredentials struct {
	ServerCommonNameCount uint32
	ServerCommonNames     **uint16
	IssuerThumbprintCount uint32
	IssuerThumbprints     **uint16
	LocalClaims           *uint16
	ProtectionLevel       FabricProtectionLevel
	Reserved              unsafe.Pointer
}
type innerFabricClaimsCredentialsEx1 struct {
	ServerThumbprintCount uint32
	ServerThumbprints     **uint16
	Reserved              unsafe.Pointer
}
type innerFabricWindowsCredentials struct {
	RemoteSpn           *uint16
	RemoteIdentityCount uint32
	RemoteIdentities    **uint16
	ProtectionLevel     FabricProtectionLevel
	Reserved            unsafe.Pointer
}
type FabricClaimsRetrievalMetadata struct {
	Kind  FabricClaimsRetrievalMetadataKind
	Value interface{}
}
type innerFabricClaimsRetrievalMetadata struct {
	FabricClaimsRetrievalMetadata
}

func (obj *innerFabricClaimsRetrievalMetadata) toGoStruct() *FabricClaimsRetrievalMetadata {
	if obj == nil {
		return nil
	}
	return &obj.FabricClaimsRetrievalMetadata
}
func (obj *FabricClaimsRetrievalMetadata) toInnerStruct() *innerFabricClaimsRetrievalMetadata {
	if obj == nil {
		return nil
	}
	return &innerFabricClaimsRetrievalMetadata{*obj}
}

type FabricAadClAimsRetrievalMetadata struct {
	Authority          string
	TenantId           string
	ClusterApplication string
	ClientApplication  string
	ClientRedirect     string
}

func (obj *FabricAadClAimsRetrievalMetadata) toInnerStruct() *innerFabricAadClAimsRetrievalMetadata {
	if obj == nil {
		return nil
	}
	dst := innerFabricAadClAimsRetrievalMetadata{}
	s_445, _ := windows.UTF16PtrFromString(obj.Authority)
	dst.Authority = s_445

	s_446, _ := windows.UTF16PtrFromString(obj.TenantId)
	dst.TenantId = s_446

	s_447, _ := windows.UTF16PtrFromString(obj.ClusterApplication)
	dst.ClusterApplication = s_447

	s_448, _ := windows.UTF16PtrFromString(obj.ClientApplication)
	dst.ClientApplication = s_448

	s_449, _ := windows.UTF16PtrFromString(obj.ClientRedirect)
	dst.ClientRedirect = s_449

	return &dst
}

type innerFabricAadClAimsRetrievalMetadata struct {
	Authority          *uint16
	TenantId           *uint16
	ClusterApplication *uint16
	ClientApplication  *uint16
	ClientRedirect     *uint16
	Reserved           unsafe.Pointer
}

func (obj *innerFabricAadClAimsRetrievalMetadata) toGoStruct() *FabricAadClAimsRetrievalMetadata {
	if obj == nil {
		return nil
	}
	dst := FabricAadClAimsRetrievalMetadata{}
	dst.Authority = windows.UTF16PtrToString(obj.Authority)
	dst.TenantId = windows.UTF16PtrToString(obj.TenantId)
	dst.ClusterApplication = windows.UTF16PtrToString(obj.ClusterApplication)
	dst.ClientApplication = windows.UTF16PtrToString(obj.ClientApplication)
	dst.ClientRedirect = windows.UTF16PtrToString(obj.ClientRedirect)
	return &dst
}

type FabricAadClAimsRetrievalMetadataEx1 struct {
	LoginEndpoint string
}

func (obj *FabricAadClAimsRetrievalMetadataEx1) toInnerStruct() *innerFabricAadClAimsRetrievalMetadataEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricAadClAimsRetrievalMetadataEx1{}
	s_450, _ := windows.UTF16PtrFromString(obj.LoginEndpoint)
	dst.LoginEndpoint = s_450

	return &dst
}

type innerFabricAadClAimsRetrievalMetadataEx1 struct {
	LoginEndpoint *uint16
	Reserved      unsafe.Pointer
}

func (obj *innerFabricAadClAimsRetrievalMetadataEx1) toGoStruct() *FabricAadClAimsRetrievalMetadataEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricAadClAimsRetrievalMetadataEx1{}
	dst.LoginEndpoint = windows.UTF16PtrToString(obj.LoginEndpoint)
	return &dst
}

type FabricSecurityUserDescription struct {
	Name                    string
	Sid                     string
	ParentSystemGroups      []string
	ParentApplicationGroups []string
}

func (obj *FabricSecurityUserDescription) toInnerStruct() *innerFabricSecurityUserDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricSecurityUserDescription{}
	s_451, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_451

	s_452, _ := windows.UTF16PtrFromString(obj.Sid)
	dst.Sid = s_452

	lst_453 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range obj.ParentSystemGroups {
			var tmpitem *uint16

			s_454, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_454

			tmp = append(tmp, tmpitem)
		}

		lst_453.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_453.Items = &tmp[0]
		}

	}
	dst.ParentSystemGroups = lst_453
	lst_455 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range obj.ParentApplicationGroups {
			var tmpitem *uint16

			s_456, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_456

			tmp = append(tmp, tmpitem)
		}

		lst_455.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_455.Items = &tmp[0]
		}

	}
	dst.ParentApplicationGroups = lst_455
	return &dst
}

type innerFabricSecurityUserDescription struct {
	Name                    *uint16
	Sid                     *uint16
	ParentSystemGroups      *innerFabricStringList
	ParentApplicationGroups *innerFabricStringList
	Reserved                unsafe.Pointer
}

func (obj *innerFabricSecurityUserDescription) toGoStruct() *FabricSecurityUserDescription {
	if obj == nil {
		return nil
	}
	dst := FabricSecurityUserDescription{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Sid = windows.UTF16PtrToString(obj.Sid)
	{
		var innerlst []*uint16
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ParentSystemGroups.Items), int(obj.ParentSystemGroups.Count))

		for _, item := range innerlst {
			var tmpitem string

			tmpitem = windows.UTF16PtrToString(item)

			dst.ParentSystemGroups = append(dst.ParentSystemGroups, tmpitem)
		}

	}
	{
		var innerlst []*uint16
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ParentApplicationGroups.Items), int(obj.ParentApplicationGroups.Count))

		for _, item := range innerlst {
			var tmpitem string

			tmpitem = windows.UTF16PtrToString(item)

			dst.ParentApplicationGroups = append(dst.ParentApplicationGroups, tmpitem)
		}

	}
	return &dst
}

type innerFabricSecurityUserDescriptionList struct {
	Count uint32
	Items *innerFabricSecurityUserDescription
}

func (obj *innerFabricSecurityUserDescriptionList) toGoStruct() []FabricSecurityUserDescription {
	var dst []FabricSecurityUserDescription
	{
		var innerlst []innerFabricSecurityUserDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricSecurityUserDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricSecurityGroupDescription struct {
	Name               string
	Sid                string
	DomainGroupMembers []string
	SystemGroupMembers []string
	DomainUserMembers  []string
}

func (obj *FabricSecurityGroupDescription) toInnerStruct() *innerFabricSecurityGroupDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricSecurityGroupDescription{}
	s_457, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_457

	s_458, _ := windows.UTF16PtrFromString(obj.Sid)
	dst.Sid = s_458

	lst_459 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range obj.DomainGroupMembers {
			var tmpitem *uint16

			s_460, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_460

			tmp = append(tmp, tmpitem)
		}

		lst_459.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_459.Items = &tmp[0]
		}

	}
	dst.DomainGroupMembers = lst_459
	lst_461 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range obj.SystemGroupMembers {
			var tmpitem *uint16

			s_462, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_462

			tmp = append(tmp, tmpitem)
		}

		lst_461.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_461.Items = &tmp[0]
		}

	}
	dst.SystemGroupMembers = lst_461
	lst_463 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range obj.DomainUserMembers {
			var tmpitem *uint16

			s_464, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_464

			tmp = append(tmp, tmpitem)
		}

		lst_463.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_463.Items = &tmp[0]
		}

	}
	dst.DomainUserMembers = lst_463
	return &dst
}

type innerFabricSecurityGroupDescription struct {
	Name               *uint16
	Sid                *uint16
	DomainGroupMembers *innerFabricStringList
	SystemGroupMembers *innerFabricStringList
	DomainUserMembers  *innerFabricStringList
	Reserved           unsafe.Pointer
}

func (obj *innerFabricSecurityGroupDescription) toGoStruct() *FabricSecurityGroupDescription {
	if obj == nil {
		return nil
	}
	dst := FabricSecurityGroupDescription{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Sid = windows.UTF16PtrToString(obj.Sid)
	{
		var innerlst []*uint16
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.DomainGroupMembers.Items), int(obj.DomainGroupMembers.Count))

		for _, item := range innerlst {
			var tmpitem string

			tmpitem = windows.UTF16PtrToString(item)

			dst.DomainGroupMembers = append(dst.DomainGroupMembers, tmpitem)
		}

	}
	{
		var innerlst []*uint16
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.SystemGroupMembers.Items), int(obj.SystemGroupMembers.Count))

		for _, item := range innerlst {
			var tmpitem string

			tmpitem = windows.UTF16PtrToString(item)

			dst.SystemGroupMembers = append(dst.SystemGroupMembers, tmpitem)
		}

	}
	{
		var innerlst []*uint16
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.DomainUserMembers.Items), int(obj.DomainUserMembers.Count))

		for _, item := range innerlst {
			var tmpitem string

			tmpitem = windows.UTF16PtrToString(item)

			dst.DomainUserMembers = append(dst.DomainUserMembers, tmpitem)
		}

	}
	return &dst
}

type innerFabricSecurityGroupDescriptionList struct {
	Count uint32
	Items *innerFabricSecurityGroupDescription
}

func (obj *innerFabricSecurityGroupDescriptionList) toGoStruct() []FabricSecurityGroupDescription {
	var dst []FabricSecurityGroupDescription
	{
		var innerlst []innerFabricSecurityGroupDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricSecurityGroupDescription

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricApplicationPrincipalsDescription struct {
	Users  []FabricSecurityUserDescription
	Groups []FabricSecurityGroupDescription
}

func (obj *FabricApplicationPrincipalsDescription) toInnerStruct() *innerFabricApplicationPrincipalsDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationPrincipalsDescription{}
	lst_465 := &innerFabricSecurityUserDescriptionList{}
	{

		var tmp []innerFabricSecurityUserDescription

		for _, item := range obj.Users {
			var tmpitem innerFabricSecurityUserDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_465.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_465.Items = &tmp[0]
		}

	}
	dst.Users = lst_465
	lst_466 := &innerFabricSecurityGroupDescriptionList{}
	{

		var tmp []innerFabricSecurityGroupDescription

		for _, item := range obj.Groups {
			var tmpitem innerFabricSecurityGroupDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_466.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_466.Items = &tmp[0]
		}

	}
	dst.Groups = lst_466
	return &dst
}

type innerFabricApplicationPrincipalsDescription struct {
	Users    *innerFabricSecurityUserDescriptionList
	Groups   *innerFabricSecurityGroupDescriptionList
	Reserved unsafe.Pointer
}

func (obj *innerFabricApplicationPrincipalsDescription) toGoStruct() *FabricApplicationPrincipalsDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationPrincipalsDescription{}
	{
		var innerlst []innerFabricSecurityUserDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Users.Items), int(obj.Users.Count))

		for _, item := range innerlst {
			var tmpitem FabricSecurityUserDescription

			tmpitem = *item.toGoStruct()

			dst.Users = append(dst.Users, tmpitem)
		}

	}
	{
		var innerlst []innerFabricSecurityGroupDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Groups.Items), int(obj.Groups.Count))

		for _, item := range innerlst {
			var tmpitem FabricSecurityGroupDescription

			tmpitem = *item.toGoStruct()

			dst.Groups = append(dst.Groups, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationUpgradeProgress struct {
	UpgradeDescription                    *FabricApplicationUpgradeDescription
	UpgradeState                          FabricApplicationUpgradeState
	UpgradeMode                           FabricRollingUpgradeMode
	NextUpgradeDomain                     string
	UpgradeDomains                        []FabricUpgradeDomainStatusDescription
	UpgradeDurationInSeconds              uint32
	CurrentUpgradeDomainDurationInSeconds uint32
	UnhealthyEvaluations                  []FabricHealthEvaluation
	CurrentUpgradeDomainProgress          *FabricUpgradeDomainProgress
}

func (obj *FabricApplicationUpgradeProgress) toInnerStruct() *innerFabricApplicationUpgradeProgress {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationUpgradeProgress{}
	dst.UpgradeDescription = obj.UpgradeDescription.toInnerStruct()
	dst.UpgradeState = obj.UpgradeState
	dst.UpgradeMode = obj.UpgradeMode
	s_467, _ := windows.UTF16PtrFromString(obj.NextUpgradeDomain)
	dst.NextUpgradeDomain = s_467

	lst_468 := &innerFabricUpgradeDomainStatusDescriptionList{}
	{

		var tmp []innerFabricUpgradeDomainStatusDescription

		for _, item := range obj.UpgradeDomains {
			var tmpitem innerFabricUpgradeDomainStatusDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_468.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_468.Items = &tmp[0]
		}

	}
	dst.UpgradeDomains = lst_468
	dst.UpgradeDurationInSeconds = obj.UpgradeDurationInSeconds
	dst.CurrentUpgradeDomainDurationInSeconds = obj.CurrentUpgradeDomainDurationInSeconds
	lst_469 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_469.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_469.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_469
	dst.CurrentUpgradeDomainProgress = obj.CurrentUpgradeDomainProgress.toInnerStruct()
	return &dst
}

type innerFabricApplicationUpgradeProgress struct {
	UpgradeDescription                    *innerFabricApplicationUpgradeDescription
	UpgradeState                          FabricApplicationUpgradeState
	UpgradeMode                           FabricRollingUpgradeMode
	NextUpgradeDomain                     *uint16
	UpgradeDomains                        *innerFabricUpgradeDomainStatusDescriptionList
	UpgradeDurationInSeconds              uint32
	CurrentUpgradeDomainDurationInSeconds uint32
	UnhealthyEvaluations                  *innerFabricHealthEvaluationList
	CurrentUpgradeDomainProgress          *innerFabricUpgradeDomainProgress
	Reserved                              unsafe.Pointer
}

func (obj *innerFabricApplicationUpgradeProgress) toGoStruct() *FabricApplicationUpgradeProgress {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationUpgradeProgress{}
	dst.UpgradeDescription = obj.UpgradeDescription.toGoStruct()
	dst.UpgradeState = obj.UpgradeState
	dst.UpgradeMode = obj.UpgradeMode
	dst.NextUpgradeDomain = windows.UTF16PtrToString(obj.NextUpgradeDomain)
	{
		var innerlst []innerFabricUpgradeDomainStatusDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UpgradeDomains.Items), int(obj.UpgradeDomains.Count))

		for _, item := range innerlst {
			var tmpitem FabricUpgradeDomainStatusDescription

			tmpitem = *item.toGoStruct()

			dst.UpgradeDomains = append(dst.UpgradeDomains, tmpitem)
		}

	}
	dst.UpgradeDurationInSeconds = obj.UpgradeDurationInSeconds
	dst.CurrentUpgradeDomainDurationInSeconds = obj.CurrentUpgradeDomainDurationInSeconds
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.CurrentUpgradeDomainProgress = obj.CurrentUpgradeDomainProgress.toGoStruct()
	return &dst
}

type FabricApplicationUpgradeProgressEx1 struct {
	StartTimestampUtc              time.Time
	FailureTimestampUtc            time.Time
	FailureReason                  FabricUpgradeFailureReason
	UpgradeDomainProgressAtFailure *FabricUpgradeDomainProgress
}

func (obj *FabricApplicationUpgradeProgressEx1) toInnerStruct() *innerFabricApplicationUpgradeProgressEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationUpgradeProgressEx1{}
	dst.StartTimestampUtc = windows.NsecToFiletime(obj.StartTimestampUtc.UnixNano())
	dst.FailureTimestampUtc = windows.NsecToFiletime(obj.FailureTimestampUtc.UnixNano())
	dst.FailureReason = obj.FailureReason
	dst.UpgradeDomainProgressAtFailure = obj.UpgradeDomainProgressAtFailure.toInnerStruct()
	return &dst
}

type innerFabricApplicationUpgradeProgressEx1 struct {
	StartTimestampUtc              windows.Filetime
	FailureTimestampUtc            windows.Filetime
	FailureReason                  FabricUpgradeFailureReason
	UpgradeDomainProgressAtFailure *innerFabricUpgradeDomainProgress
	Reserved                       unsafe.Pointer
}

func (obj *innerFabricApplicationUpgradeProgressEx1) toGoStruct() *FabricApplicationUpgradeProgressEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationUpgradeProgressEx1{}
	dst.StartTimestampUtc = time.Unix(0, obj.StartTimestampUtc.Nanoseconds())
	dst.FailureTimestampUtc = time.Unix(0, obj.FailureTimestampUtc.Nanoseconds())
	dst.FailureReason = obj.FailureReason
	dst.UpgradeDomainProgressAtFailure = obj.UpgradeDomainProgressAtFailure.toGoStruct()
	return &dst
}

type FabricApplicationUpgradeProgressEx2 struct {
	UpgradeStatusDetails string
}

func (obj *FabricApplicationUpgradeProgressEx2) toInnerStruct() *innerFabricApplicationUpgradeProgressEx2 {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationUpgradeProgressEx2{}
	s_470, _ := windows.UTF16PtrFromString(obj.UpgradeStatusDetails)
	dst.UpgradeStatusDetails = s_470

	return &dst
}

type innerFabricApplicationUpgradeProgressEx2 struct {
	UpgradeStatusDetails *uint16
	Reserved             unsafe.Pointer
}

func (obj *innerFabricApplicationUpgradeProgressEx2) toGoStruct() *FabricApplicationUpgradeProgressEx2 {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationUpgradeProgressEx2{}
	dst.UpgradeStatusDetails = windows.UTF16PtrToString(obj.UpgradeStatusDetails)
	return &dst
}

type FabricProvisionApplicationTypeDescriptionBase struct {
	Kind  FabricProvisionApplicationTypeKind
	Value interface{}
}
type innerFabricProvisionApplicationTypeDescriptionBase struct {
	FabricProvisionApplicationTypeDescriptionBase
}

func (obj *innerFabricProvisionApplicationTypeDescriptionBase) toGoStruct() *FabricProvisionApplicationTypeDescriptionBase {
	if obj == nil {
		return nil
	}
	return &obj.FabricProvisionApplicationTypeDescriptionBase
}
func (obj *FabricProvisionApplicationTypeDescriptionBase) toInnerStruct() *innerFabricProvisionApplicationTypeDescriptionBase {
	if obj == nil {
		return nil
	}
	return &innerFabricProvisionApplicationTypeDescriptionBase{*obj}
}

type FabricProvisionApplicationTypeDescription struct {
	BuildPath string
	Async     bool
}

func (obj *FabricProvisionApplicationTypeDescription) toInnerStruct() *innerFabricProvisionApplicationTypeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricProvisionApplicationTypeDescription{}
	s_471, _ := windows.UTF16PtrFromString(obj.BuildPath)
	dst.BuildPath = s_471

	dst.Async = obj.Async
	return &dst
}

type innerFabricProvisionApplicationTypeDescription struct {
	BuildPath *uint16
	Async     bool
	Reserved  unsafe.Pointer
}

func (obj *innerFabricProvisionApplicationTypeDescription) toGoStruct() *FabricProvisionApplicationTypeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricProvisionApplicationTypeDescription{}
	dst.BuildPath = windows.UTF16PtrToString(obj.BuildPath)
	dst.Async = obj.Async
	return &dst
}

type FabricProvisionApplicationTypeDescriptionEx1 struct {
	ApplicationPackageCleanupPolicy FabricApplicationPackageCleanupPolicy
}
type innerFabricProvisionApplicationTypeDescriptionEx1 struct {
	FabricProvisionApplicationTypeDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricProvisionApplicationTypeDescriptionEx1) toGoStruct() *FabricProvisionApplicationTypeDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricProvisionApplicationTypeDescriptionEx1
}
func (obj *FabricProvisionApplicationTypeDescriptionEx1) toInnerStruct() *innerFabricProvisionApplicationTypeDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricProvisionApplicationTypeDescriptionEx1{*obj, nil}
}

type FabricExternalStoreProvisionApplicationTypeDescription struct {
	ApplicationTypeName           string
	ApplicationTypeVersion        string
	ApplicationPackageDownloadUri string
	Async                         bool
}

func (obj *FabricExternalStoreProvisionApplicationTypeDescription) toInnerStruct() *innerFabricExternalStoreProvisionApplicationTypeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricExternalStoreProvisionApplicationTypeDescription{}
	s_472, _ := windows.UTF16PtrFromString(obj.ApplicationTypeName)
	dst.ApplicationTypeName = s_472

	s_473, _ := windows.UTF16PtrFromString(obj.ApplicationTypeVersion)
	dst.ApplicationTypeVersion = s_473

	s_474, _ := windows.UTF16PtrFromString(obj.ApplicationPackageDownloadUri)
	dst.ApplicationPackageDownloadUri = s_474

	dst.Async = obj.Async
	return &dst
}

type innerFabricExternalStoreProvisionApplicationTypeDescription struct {
	ApplicationTypeName           *uint16
	ApplicationTypeVersion        *uint16
	ApplicationPackageDownloadUri *uint16
	Async                         bool
	Reserved                      unsafe.Pointer
}

func (obj *innerFabricExternalStoreProvisionApplicationTypeDescription) toGoStruct() *FabricExternalStoreProvisionApplicationTypeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricExternalStoreProvisionApplicationTypeDescription{}
	dst.ApplicationTypeName = windows.UTF16PtrToString(obj.ApplicationTypeName)
	dst.ApplicationTypeVersion = windows.UTF16PtrToString(obj.ApplicationTypeVersion)
	dst.ApplicationPackageDownloadUri = windows.UTF16PtrToString(obj.ApplicationPackageDownloadUri)
	dst.Async = obj.Async
	return &dst
}

type FabricUnprovisionApplicationTypeDescription struct {
	ApplicationTypeName    string
	ApplicationTypeVersion string
	Async                  bool
}

func (obj *FabricUnprovisionApplicationTypeDescription) toInnerStruct() *innerFabricUnprovisionApplicationTypeDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricUnprovisionApplicationTypeDescription{}
	s_475, _ := windows.UTF16PtrFromString(obj.ApplicationTypeName)
	dst.ApplicationTypeName = s_475

	s_476, _ := windows.UTF16PtrFromString(obj.ApplicationTypeVersion)
	dst.ApplicationTypeVersion = s_476

	dst.Async = obj.Async
	return &dst
}

type innerFabricUnprovisionApplicationTypeDescription struct {
	ApplicationTypeName    *uint16
	ApplicationTypeVersion *uint16
	Async                  bool
	Reserved               unsafe.Pointer
}

func (obj *innerFabricUnprovisionApplicationTypeDescription) toGoStruct() *FabricUnprovisionApplicationTypeDescription {
	if obj == nil {
		return nil
	}
	dst := FabricUnprovisionApplicationTypeDescription{}
	dst.ApplicationTypeName = windows.UTF16PtrToString(obj.ApplicationTypeName)
	dst.ApplicationTypeVersion = windows.UTF16PtrToString(obj.ApplicationTypeVersion)
	dst.Async = obj.Async
	return &dst
}

type FabricDeleteApplicationDescription struct {
	ApplicationName string
	ForceDelete     bool
}

func (obj *FabricDeleteApplicationDescription) toInnerStruct() *innerFabricDeleteApplicationDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeleteApplicationDescription{}
	s_477, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_477

	dst.ForceDelete = obj.ForceDelete
	return &dst
}

type innerFabricDeleteApplicationDescription struct {
	ApplicationName *uint16
	ForceDelete     bool
	Reserved        unsafe.Pointer
}

func (obj *innerFabricDeleteApplicationDescription) toGoStruct() *FabricDeleteApplicationDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeleteApplicationDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.ForceDelete = obj.ForceDelete
	return &dst
}

type FabricUpgradeProgress struct {
	UpgradeDescription                    *FabricUpgradeDescription
	UpgradeState                          FabricUpgradeState
	UpgradeMode                           FabricRollingUpgradeMode
	NextUpgradeDomain                     string
	UpgradeDomains                        []FabricUpgradeDomainStatusDescription
	UpgradeDurationInSeconds              uint32
	CurrentUpgradeDomainDurationInSeconds uint32
	UnhealthyEvaluations                  []FabricHealthEvaluation
	CurrentUpgradeDomainProgress          *FabricUpgradeDomainProgress
}

func (obj *FabricUpgradeProgress) toInnerStruct() *innerFabricUpgradeProgress {
	if obj == nil {
		return nil
	}
	dst := innerFabricUpgradeProgress{}
	dst.UpgradeDescription = obj.UpgradeDescription.toInnerStruct()
	dst.UpgradeState = obj.UpgradeState
	dst.UpgradeMode = obj.UpgradeMode
	s_478, _ := windows.UTF16PtrFromString(obj.NextUpgradeDomain)
	dst.NextUpgradeDomain = s_478

	lst_479 := &innerFabricUpgradeDomainStatusDescriptionList{}
	{

		var tmp []innerFabricUpgradeDomainStatusDescription

		for _, item := range obj.UpgradeDomains {
			var tmpitem innerFabricUpgradeDomainStatusDescription

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_479.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_479.Items = &tmp[0]
		}

	}
	dst.UpgradeDomains = lst_479
	dst.UpgradeDurationInSeconds = obj.UpgradeDurationInSeconds
	dst.CurrentUpgradeDomainDurationInSeconds = obj.CurrentUpgradeDomainDurationInSeconds
	lst_480 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_480.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_480.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_480
	dst.CurrentUpgradeDomainProgress = obj.CurrentUpgradeDomainProgress.toInnerStruct()
	return &dst
}

type innerFabricUpgradeProgress struct {
	UpgradeDescription                    *innerFabricUpgradeDescription
	UpgradeState                          FabricUpgradeState
	UpgradeMode                           FabricRollingUpgradeMode
	NextUpgradeDomain                     *uint16
	UpgradeDomains                        *innerFabricUpgradeDomainStatusDescriptionList
	UpgradeDurationInSeconds              uint32
	CurrentUpgradeDomainDurationInSeconds uint32
	UnhealthyEvaluations                  *innerFabricHealthEvaluationList
	CurrentUpgradeDomainProgress          *innerFabricUpgradeDomainProgress
	Reserved                              unsafe.Pointer
}

func (obj *innerFabricUpgradeProgress) toGoStruct() *FabricUpgradeProgress {
	if obj == nil {
		return nil
	}
	dst := FabricUpgradeProgress{}
	dst.UpgradeDescription = obj.UpgradeDescription.toGoStruct()
	dst.UpgradeState = obj.UpgradeState
	dst.UpgradeMode = obj.UpgradeMode
	dst.NextUpgradeDomain = windows.UTF16PtrToString(obj.NextUpgradeDomain)
	{
		var innerlst []innerFabricUpgradeDomainStatusDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UpgradeDomains.Items), int(obj.UpgradeDomains.Count))

		for _, item := range innerlst {
			var tmpitem FabricUpgradeDomainStatusDescription

			tmpitem = *item.toGoStruct()

			dst.UpgradeDomains = append(dst.UpgradeDomains, tmpitem)
		}

	}
	dst.UpgradeDurationInSeconds = obj.UpgradeDurationInSeconds
	dst.CurrentUpgradeDomainDurationInSeconds = obj.CurrentUpgradeDomainDurationInSeconds
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.CurrentUpgradeDomainProgress = obj.CurrentUpgradeDomainProgress.toGoStruct()
	return &dst
}

type FabricUpgradeProgressEx1 struct {
	StartTimestampUtc              time.Time
	FailureTimestampUtc            time.Time
	FailureReason                  FabricUpgradeFailureReason
	UpgradeDomainProgressAtFailure *FabricUpgradeDomainProgress
}

func (obj *FabricUpgradeProgressEx1) toInnerStruct() *innerFabricUpgradeProgressEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricUpgradeProgressEx1{}
	dst.StartTimestampUtc = windows.NsecToFiletime(obj.StartTimestampUtc.UnixNano())
	dst.FailureTimestampUtc = windows.NsecToFiletime(obj.FailureTimestampUtc.UnixNano())
	dst.FailureReason = obj.FailureReason
	dst.UpgradeDomainProgressAtFailure = obj.UpgradeDomainProgressAtFailure.toInnerStruct()
	return &dst
}

type innerFabricUpgradeProgressEx1 struct {
	StartTimestampUtc              windows.Filetime
	FailureTimestampUtc            windows.Filetime
	FailureReason                  FabricUpgradeFailureReason
	UpgradeDomainProgressAtFailure *innerFabricUpgradeDomainProgress
	Reserved                       unsafe.Pointer
}

func (obj *innerFabricUpgradeProgressEx1) toGoStruct() *FabricUpgradeProgressEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricUpgradeProgressEx1{}
	dst.StartTimestampUtc = time.Unix(0, obj.StartTimestampUtc.Nanoseconds())
	dst.FailureTimestampUtc = time.Unix(0, obj.FailureTimestampUtc.Nanoseconds())
	dst.FailureReason = obj.FailureReason
	dst.UpgradeDomainProgressAtFailure = obj.UpgradeDomainProgressAtFailure.toGoStruct()
	return &dst
}

type FabricPackageSharingPolicy struct {
	PackageName string
	Scope       FabricPackageSharingPolicyScope
}

func (obj *FabricPackageSharingPolicy) toInnerStruct() *innerFabricPackageSharingPolicy {
	if obj == nil {
		return nil
	}
	dst := innerFabricPackageSharingPolicy{}
	s_481, _ := windows.UTF16PtrFromString(obj.PackageName)
	dst.PackageName = s_481

	dst.Scope = obj.Scope
	return &dst
}

type innerFabricPackageSharingPolicy struct {
	PackageName *uint16
	Scope       FabricPackageSharingPolicyScope
	Reserved    unsafe.Pointer
}

func (obj *innerFabricPackageSharingPolicy) toGoStruct() *FabricPackageSharingPolicy {
	if obj == nil {
		return nil
	}
	dst := FabricPackageSharingPolicy{}
	dst.PackageName = windows.UTF16PtrToString(obj.PackageName)
	dst.Scope = obj.Scope
	return &dst
}

type innerFabricPackageSharingPolicyList struct {
	Count uint32
	Items *innerFabricPackageSharingPolicy
}

func (obj *innerFabricPackageSharingPolicyList) toGoStruct() []FabricPackageSharingPolicy {
	var dst []FabricPackageSharingPolicy
	{
		var innerlst []innerFabricPackageSharingPolicy
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricPackageSharingPolicy

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricHealthEventsFilter struct {
	HealthStateFilter uint32
}
type innerFabricHealthEventsFilter struct {
	FabricHealthEventsFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricHealthEventsFilter) toGoStruct() *FabricHealthEventsFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricHealthEventsFilter
}
func (obj *FabricHealthEventsFilter) toInnerStruct() *innerFabricHealthEventsFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricHealthEventsFilter{*obj, nil}
}

type FabricNodeHealthStatesFilter struct {
	HealthStateFilter uint32
}
type innerFabricNodeHealthStatesFilter struct {
	FabricNodeHealthStatesFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeHealthStatesFilter) toGoStruct() *FabricNodeHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeHealthStatesFilter
}
func (obj *FabricNodeHealthStatesFilter) toInnerStruct() *innerFabricNodeHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeHealthStatesFilter{*obj, nil}
}

type FabricReplicaHealthStatesFilter struct {
	HealthStateFilter uint32
}
type innerFabricReplicaHealthStatesFilter struct {
	FabricReplicaHealthStatesFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicaHealthStatesFilter) toGoStruct() *FabricReplicaHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicaHealthStatesFilter
}
func (obj *FabricReplicaHealthStatesFilter) toInnerStruct() *innerFabricReplicaHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicaHealthStatesFilter{*obj, nil}
}

type FabricPartitionHealthStatesFilter struct {
	HealthStateFilter uint32
}
type innerFabricPartitionHealthStatesFilter struct {
	FabricPartitionHealthStatesFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionHealthStatesFilter) toGoStruct() *FabricPartitionHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionHealthStatesFilter
}
func (obj *FabricPartitionHealthStatesFilter) toInnerStruct() *innerFabricPartitionHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionHealthStatesFilter{*obj, nil}
}

type FabricServiceHealthStatesFilter struct {
	HealthStateFilter uint32
}
type innerFabricServiceHealthStatesFilter struct {
	FabricServiceHealthStatesFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceHealthStatesFilter) toGoStruct() *FabricServiceHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceHealthStatesFilter
}
func (obj *FabricServiceHealthStatesFilter) toInnerStruct() *innerFabricServiceHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceHealthStatesFilter{*obj, nil}
}

type FabricApplicationHealthStatesFilter struct {
	HealthStateFilter uint32
}
type innerFabricApplicationHealthStatesFilter struct {
	FabricApplicationHealthStatesFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricApplicationHealthStatesFilter) toGoStruct() *FabricApplicationHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricApplicationHealthStatesFilter
}
func (obj *FabricApplicationHealthStatesFilter) toInnerStruct() *innerFabricApplicationHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricApplicationHealthStatesFilter{*obj, nil}
}

type FabricDeployedApplicationHealthStatesFilter struct {
	HealthStateFilter uint32
}
type innerFabricDeployedApplicationHealthStatesFilter struct {
	FabricDeployedApplicationHealthStatesFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthStatesFilter) toGoStruct() *FabricDeployedApplicationHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedApplicationHealthStatesFilter
}
func (obj *FabricDeployedApplicationHealthStatesFilter) toInnerStruct() *innerFabricDeployedApplicationHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedApplicationHealthStatesFilter{*obj, nil}
}

type FabricDeployedServicePackageHealthStatesFilter struct {
	HealthStateFilter uint32
}
type innerFabricDeployedServicePackageHealthStatesFilter struct {
	FabricDeployedServicePackageHealthStatesFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthStatesFilter) toGoStruct() *FabricDeployedServicePackageHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedServicePackageHealthStatesFilter
}
func (obj *FabricDeployedServicePackageHealthStatesFilter) toInnerStruct() *innerFabricDeployedServicePackageHealthStatesFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedServicePackageHealthStatesFilter{*obj, nil}
}

type FabricClusterHealthQueryDescription struct {
	HealthPolicy               *FabricClusterHealthPolicy
	ApplicationHealthPolicyMap map[string]FabricApplicationHealthPolicy
	EventsFilter               *FabricHealthEventsFilter
	NodesFilter                *FabricNodeHealthStatesFilter
	ApplicationsFilter         *FabricApplicationHealthStatesFilter
}

func (obj *FabricClusterHealthQueryDescription) toInnerStruct() *innerFabricClusterHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricClusterHealthQueryDescription{}
	dst.HealthPolicy = obj.HealthPolicy.toInnerStruct()
	{
		mapobj := &innerFabricApplicationHealthPolicyMap{}

		var tmp []innerFabricApplicationHealthPolicyMapItem

		for k, v := range obj.ApplicationHealthPolicyMap {
			kv := innerFabricApplicationHealthPolicyMapItem{}

			s_483, _ := windows.UTF16PtrFromString(k)
			kv.ApplicationName = s_483

			kv.HealthPolicy = v.toInnerStruct()

			tmp = append(tmp, kv)
		}

		mapobj.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			mapobj.Items = &tmp[0]
		}

		dst.ApplicationHealthPolicyMap = mapobj
	}
	dst.EventsFilter = obj.EventsFilter.toInnerStruct()
	dst.NodesFilter = obj.NodesFilter.toInnerStruct()
	dst.ApplicationsFilter = obj.ApplicationsFilter.toInnerStruct()
	return &dst
}

type innerFabricClusterHealthQueryDescription struct {
	HealthPolicy               *innerFabricClusterHealthPolicy
	ApplicationHealthPolicyMap *innerFabricApplicationHealthPolicyMap
	EventsFilter               *innerFabricHealthEventsFilter
	NodesFilter                *innerFabricNodeHealthStatesFilter
	ApplicationsFilter         *innerFabricApplicationHealthStatesFilter
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricClusterHealthQueryDescription) toGoStruct() *FabricClusterHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricClusterHealthQueryDescription{}
	dst.HealthPolicy = obj.HealthPolicy.toGoStruct()
	{
		var mapvar = make(map[string]FabricApplicationHealthPolicy)

		var innerlst []innerFabricApplicationHealthPolicyMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationHealthPolicyMap.Items), int(obj.ApplicationHealthPolicyMap.Count))

		for _, kv := range innerlst {
			var k string
			var v *FabricApplicationHealthPolicy

			k = windows.UTF16PtrToString(kv.ApplicationName)
			v = kv.HealthPolicy.toGoStruct()
			mapvar[k] = *v

		}

		dst.ApplicationHealthPolicyMap = mapvar
	}
	dst.EventsFilter = obj.EventsFilter.toGoStruct()
	dst.NodesFilter = obj.NodesFilter.toGoStruct()
	dst.ApplicationsFilter = obj.ApplicationsFilter.toGoStruct()
	return &dst
}

type FabricClusterHealthStatisticsFilter struct {
	ExcludeHealthStatistics                  bool
	IncludeSystemApplicationHealthStatistics bool
}
type innerFabricClusterHealthStatisticsFilter struct {
	FabricClusterHealthStatisticsFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricClusterHealthStatisticsFilter) toGoStruct() *FabricClusterHealthStatisticsFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricClusterHealthStatisticsFilter
}
func (obj *FabricClusterHealthStatisticsFilter) toInnerStruct() *innerFabricClusterHealthStatisticsFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricClusterHealthStatisticsFilter{*obj, nil}
}

type FabricClusterHealthQueryDescriptionEx1 struct {
	HealthStatisticsFilter *FabricClusterHealthStatisticsFilter
}
type innerFabricClusterHealthQueryDescriptionEx1 struct {
	FabricClusterHealthQueryDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricClusterHealthQueryDescriptionEx1) toGoStruct() *FabricClusterHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricClusterHealthQueryDescriptionEx1
}
func (obj *FabricClusterHealthQueryDescriptionEx1) toInnerStruct() *innerFabricClusterHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricClusterHealthQueryDescriptionEx1{*obj, nil}
}

type FabricNodeHealthQueryDescription struct {
	NodeName     string
	HealthPolicy *FabricClusterHealthPolicy
	EventsFilter *FabricHealthEventsFilter
}

func (obj *FabricNodeHealthQueryDescription) toInnerStruct() *innerFabricNodeHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeHealthQueryDescription{}
	s_485, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_485

	dst.HealthPolicy = obj.HealthPolicy.toInnerStruct()
	dst.EventsFilter = obj.EventsFilter.toInnerStruct()
	return &dst
}

type innerFabricNodeHealthQueryDescription struct {
	NodeName     *uint16
	HealthPolicy *innerFabricClusterHealthPolicy
	EventsFilter *innerFabricHealthEventsFilter
	Reserved     unsafe.Pointer
}

func (obj *innerFabricNodeHealthQueryDescription) toGoStruct() *FabricNodeHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricNodeHealthQueryDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.HealthPolicy = obj.HealthPolicy.toGoStruct()
	dst.EventsFilter = obj.EventsFilter.toGoStruct()
	return &dst
}

type FabricApplicationHealthQueryDescription struct {
	ApplicationName            string
	HealthPolicy               *FabricApplicationHealthPolicy
	EventsFilter               *FabricHealthEventsFilter
	ServicesFilter             *FabricServiceHealthStatesFilter
	DeployedApplicationsFilter *FabricDeployedApplicationHealthStatesFilter
}

func (obj *FabricApplicationHealthQueryDescription) toInnerStruct() *innerFabricApplicationHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealthQueryDescription{}
	s_486, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_486

	dst.HealthPolicy = obj.HealthPolicy.toInnerStruct()
	dst.EventsFilter = obj.EventsFilter.toInnerStruct()
	dst.ServicesFilter = obj.ServicesFilter.toInnerStruct()
	dst.DeployedApplicationsFilter = obj.DeployedApplicationsFilter.toInnerStruct()
	return &dst
}

type innerFabricApplicationHealthQueryDescription struct {
	ApplicationName            *uint16
	HealthPolicy               *innerFabricApplicationHealthPolicy
	EventsFilter               *innerFabricHealthEventsFilter
	ServicesFilter             *innerFabricServiceHealthStatesFilter
	DeployedApplicationsFilter *innerFabricDeployedApplicationHealthStatesFilter
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricApplicationHealthQueryDescription) toGoStruct() *FabricApplicationHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealthQueryDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.HealthPolicy = obj.HealthPolicy.toGoStruct()
	dst.EventsFilter = obj.EventsFilter.toGoStruct()
	dst.ServicesFilter = obj.ServicesFilter.toGoStruct()
	dst.DeployedApplicationsFilter = obj.DeployedApplicationsFilter.toGoStruct()
	return &dst
}

type FabricApplicationHealthStatisticsFilter struct {
	ExcludeHealthStatistics bool
}
type innerFabricApplicationHealthStatisticsFilter struct {
	FabricApplicationHealthStatisticsFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricApplicationHealthStatisticsFilter) toGoStruct() *FabricApplicationHealthStatisticsFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricApplicationHealthStatisticsFilter
}
func (obj *FabricApplicationHealthStatisticsFilter) toInnerStruct() *innerFabricApplicationHealthStatisticsFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricApplicationHealthStatisticsFilter{*obj, nil}
}

type FabricApplicationHealthQueryDescriptionEx1 struct {
	HealthStatisticsFilter *FabricApplicationHealthStatisticsFilter
}
type innerFabricApplicationHealthQueryDescriptionEx1 struct {
	FabricApplicationHealthQueryDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricApplicationHealthQueryDescriptionEx1) toGoStruct() *FabricApplicationHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricApplicationHealthQueryDescriptionEx1
}
func (obj *FabricApplicationHealthQueryDescriptionEx1) toInnerStruct() *innerFabricApplicationHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricApplicationHealthQueryDescriptionEx1{*obj, nil}
}

type FabricServiceHealthQueryDescription struct {
	ServiceName      string
	HealthPolicy     *FabricApplicationHealthPolicy
	EventsFilter     *FabricHealthEventsFilter
	PartitionsFilter *FabricPartitionHealthStatesFilter
}

func (obj *FabricServiceHealthQueryDescription) toInnerStruct() *innerFabricServiceHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceHealthQueryDescription{}
	s_487, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_487

	dst.HealthPolicy = obj.HealthPolicy.toInnerStruct()
	dst.EventsFilter = obj.EventsFilter.toInnerStruct()
	dst.PartitionsFilter = obj.PartitionsFilter.toInnerStruct()
	return &dst
}

type innerFabricServiceHealthQueryDescription struct {
	ServiceName      *uint16
	HealthPolicy     *innerFabricApplicationHealthPolicy
	EventsFilter     *innerFabricHealthEventsFilter
	PartitionsFilter *innerFabricPartitionHealthStatesFilter
	Reserved         unsafe.Pointer
}

func (obj *innerFabricServiceHealthQueryDescription) toGoStruct() *FabricServiceHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricServiceHealthQueryDescription{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.HealthPolicy = obj.HealthPolicy.toGoStruct()
	dst.EventsFilter = obj.EventsFilter.toGoStruct()
	dst.PartitionsFilter = obj.PartitionsFilter.toGoStruct()
	return &dst
}

type FabricServiceHealthStatisticsFilter struct {
	ExcludeHealthStatistics bool
}
type innerFabricServiceHealthStatisticsFilter struct {
	FabricServiceHealthStatisticsFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceHealthStatisticsFilter) toGoStruct() *FabricServiceHealthStatisticsFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceHealthStatisticsFilter
}
func (obj *FabricServiceHealthStatisticsFilter) toInnerStruct() *innerFabricServiceHealthStatisticsFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceHealthStatisticsFilter{*obj, nil}
}

type FabricServiceHealthQueryDescriptionEx1 struct {
	HealthStatisticsFilter *FabricServiceHealthStatisticsFilter
}
type innerFabricServiceHealthQueryDescriptionEx1 struct {
	FabricServiceHealthQueryDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricServiceHealthQueryDescriptionEx1) toGoStruct() *FabricServiceHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricServiceHealthQueryDescriptionEx1
}
func (obj *FabricServiceHealthQueryDescriptionEx1) toInnerStruct() *innerFabricServiceHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricServiceHealthQueryDescriptionEx1{*obj, nil}
}

type FabricPartitionHealthQueryDescription struct {
	PartitionId    windows.GUID
	HealthPolicy   *FabricApplicationHealthPolicy
	EventsFilter   *FabricHealthEventsFilter
	ReplicasFilter *FabricReplicaHealthStatesFilter
}
type innerFabricPartitionHealthQueryDescription struct {
	FabricPartitionHealthQueryDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionHealthQueryDescription) toGoStruct() *FabricPartitionHealthQueryDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionHealthQueryDescription
}
func (obj *FabricPartitionHealthQueryDescription) toInnerStruct() *innerFabricPartitionHealthQueryDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionHealthQueryDescription{*obj, nil}
}

type FabricPartitionHealthStatisticsFilter struct {
	ExcludeHealthStatistics bool
}
type innerFabricPartitionHealthStatisticsFilter struct {
	FabricPartitionHealthStatisticsFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionHealthStatisticsFilter) toGoStruct() *FabricPartitionHealthStatisticsFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionHealthStatisticsFilter
}
func (obj *FabricPartitionHealthStatisticsFilter) toInnerStruct() *innerFabricPartitionHealthStatisticsFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionHealthStatisticsFilter{*obj, nil}
}

type FabricPartitionHealthQueryDescriptionEx1 struct {
	HealthStatisticsFilter *FabricPartitionHealthStatisticsFilter
}
type innerFabricPartitionHealthQueryDescriptionEx1 struct {
	FabricPartitionHealthQueryDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricPartitionHealthQueryDescriptionEx1) toGoStruct() *FabricPartitionHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricPartitionHealthQueryDescriptionEx1
}
func (obj *FabricPartitionHealthQueryDescriptionEx1) toInnerStruct() *innerFabricPartitionHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricPartitionHealthQueryDescriptionEx1{*obj, nil}
}

type FabricReplicaHealthQueryDescription struct {
	PartitionId         windows.GUID
	ReplicaOrInstanceId int64
	HealthPolicy        *FabricApplicationHealthPolicy
	EventsFilter        *FabricHealthEventsFilter
}
type innerFabricReplicaHealthQueryDescription struct {
	FabricReplicaHealthQueryDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicaHealthQueryDescription) toGoStruct() *FabricReplicaHealthQueryDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicaHealthQueryDescription
}
func (obj *FabricReplicaHealthQueryDescription) toInnerStruct() *innerFabricReplicaHealthQueryDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicaHealthQueryDescription{*obj, nil}
}

type FabricDeployedApplicationHealthQueryDescription struct {
	ApplicationName               string
	NodeName                      string
	HealthPolicy                  *FabricApplicationHealthPolicy
	EventsFilter                  *FabricHealthEventsFilter
	DeployedServicePackagesFilter *FabricDeployedServicePackageHealthStatesFilter
}

func (obj *FabricDeployedApplicationHealthQueryDescription) toInnerStruct() *innerFabricDeployedApplicationHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationHealthQueryDescription{}
	s_488, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_488

	s_489, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_489

	dst.HealthPolicy = obj.HealthPolicy.toInnerStruct()
	dst.EventsFilter = obj.EventsFilter.toInnerStruct()
	dst.DeployedServicePackagesFilter = obj.DeployedServicePackagesFilter.toInnerStruct()
	return &dst
}

type innerFabricDeployedApplicationHealthQueryDescription struct {
	ApplicationName               *uint16
	NodeName                      *uint16
	HealthPolicy                  *innerFabricApplicationHealthPolicy
	EventsFilter                  *innerFabricHealthEventsFilter
	DeployedServicePackagesFilter *innerFabricDeployedServicePackageHealthStatesFilter
	Reserved                      unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthQueryDescription) toGoStruct() *FabricDeployedApplicationHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationHealthQueryDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.HealthPolicy = obj.HealthPolicy.toGoStruct()
	dst.EventsFilter = obj.EventsFilter.toGoStruct()
	dst.DeployedServicePackagesFilter = obj.DeployedServicePackagesFilter.toGoStruct()
	return &dst
}

type FabricDeployedApplicationHealthStatisticsFilter struct {
	ExcludeHealthStatistics bool
}
type innerFabricDeployedApplicationHealthStatisticsFilter struct {
	FabricDeployedApplicationHealthStatisticsFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthStatisticsFilter) toGoStruct() *FabricDeployedApplicationHealthStatisticsFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedApplicationHealthStatisticsFilter
}
func (obj *FabricDeployedApplicationHealthStatisticsFilter) toInnerStruct() *innerFabricDeployedApplicationHealthStatisticsFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedApplicationHealthStatisticsFilter{*obj, nil}
}

type FabricDeployedApplicationHealthQueryDescriptionEx1 struct {
	HealthStatisticsFilter *FabricDeployedApplicationHealthStatisticsFilter
}
type innerFabricDeployedApplicationHealthQueryDescriptionEx1 struct {
	FabricDeployedApplicationHealthQueryDescriptionEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthQueryDescriptionEx1) toGoStruct() *FabricDeployedApplicationHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricDeployedApplicationHealthQueryDescriptionEx1
}
func (obj *FabricDeployedApplicationHealthQueryDescriptionEx1) toInnerStruct() *innerFabricDeployedApplicationHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricDeployedApplicationHealthQueryDescriptionEx1{*obj, nil}
}

type FabricDeployedServicePackageHealthQueryDescription struct {
	ApplicationName     string
	NodeName            string
	ServiceManifestName string
	HealthPolicy        *FabricApplicationHealthPolicy
	EventsFilter        *FabricHealthEventsFilter
}

func (obj *FabricDeployedServicePackageHealthQueryDescription) toInnerStruct() *innerFabricDeployedServicePackageHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthQueryDescription{}
	s_490, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_490

	s_491, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_491

	s_492, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_492

	dst.HealthPolicy = obj.HealthPolicy.toInnerStruct()
	dst.EventsFilter = obj.EventsFilter.toInnerStruct()
	return &dst
}

type innerFabricDeployedServicePackageHealthQueryDescription struct {
	ApplicationName     *uint16
	NodeName            *uint16
	ServiceManifestName *uint16
	HealthPolicy        *innerFabricApplicationHealthPolicy
	EventsFilter        *innerFabricHealthEventsFilter
	Reserved            unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthQueryDescription) toGoStruct() *FabricDeployedServicePackageHealthQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthQueryDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.HealthPolicy = obj.HealthPolicy.toGoStruct()
	dst.EventsFilter = obj.EventsFilter.toGoStruct()
	return &dst
}

type FabricDeployedServicePackageHealthQueryDescriptionEx1 struct {
	ServicePackageActivationId string
}

func (obj *FabricDeployedServicePackageHealthQueryDescriptionEx1) toInnerStruct() *innerFabricDeployedServicePackageHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthQueryDescriptionEx1{}
	s_493, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_493

	return &dst
}

type innerFabricDeployedServicePackageHealthQueryDescriptionEx1 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthQueryDescriptionEx1) toGoStruct() *FabricDeployedServicePackageHealthQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthQueryDescriptionEx1{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type FabricRepairScopeIdentifier struct {
	Kind  FabricRepairScopeIdentifierKind
	Value interface{}
}
type innerFabricRepairScopeIdentifier struct {
	FabricRepairScopeIdentifier
}

func (obj *innerFabricRepairScopeIdentifier) toGoStruct() *FabricRepairScopeIdentifier {
	if obj == nil {
		return nil
	}
	return &obj.FabricRepairScopeIdentifier
}
func (obj *FabricRepairScopeIdentifier) toInnerStruct() *innerFabricRepairScopeIdentifier {
	if obj == nil {
		return nil
	}
	return &innerFabricRepairScopeIdentifier{*obj}
}

type FabricRepairTargetDescription struct {
	Kind  FabricRepairTargetKind
	Value interface{}
}
type innerFabricRepairTargetDescription struct {
	FabricRepairTargetDescription
}

func (obj *innerFabricRepairTargetDescription) toGoStruct() *FabricRepairTargetDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricRepairTargetDescription
}
func (obj *FabricRepairTargetDescription) toInnerStruct() *innerFabricRepairTargetDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricRepairTargetDescription{*obj}
}

type FabricRepairNodeImpact struct {
	NodeName    string
	ImpactLevel FabricRepairNodeImpactLevel
}

func (obj *FabricRepairNodeImpact) toInnerStruct() *innerFabricRepairNodeImpact {
	if obj == nil {
		return nil
	}
	dst := innerFabricRepairNodeImpact{}
	s_494, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_494

	dst.ImpactLevel = obj.ImpactLevel
	return &dst
}

type innerFabricRepairNodeImpact struct {
	NodeName    *uint16
	ImpactLevel FabricRepairNodeImpactLevel
	Reserved    unsafe.Pointer
}

func (obj *innerFabricRepairNodeImpact) toGoStruct() *FabricRepairNodeImpact {
	if obj == nil {
		return nil
	}
	dst := FabricRepairNodeImpact{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.ImpactLevel = obj.ImpactLevel
	return &dst
}

type innerFabricRepairNodeImpactList struct {
	Count uint32
	Items *innerFabricRepairNodeImpact
}

func (obj *innerFabricRepairNodeImpactList) toGoStruct() []FabricRepairNodeImpact {
	var dst []FabricRepairNodeImpact
	{
		var innerlst []innerFabricRepairNodeImpact
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricRepairNodeImpact

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricRepairImpactDescription struct {
	Kind  FabricRepairImpactKind
	Value interface{}
}
type innerFabricRepairImpactDescription struct {
	FabricRepairImpactDescription
}

func (obj *innerFabricRepairImpactDescription) toGoStruct() *FabricRepairImpactDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricRepairImpactDescription
}
func (obj *FabricRepairImpactDescription) toInnerStruct() *innerFabricRepairImpactDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricRepairImpactDescription{*obj}
}

type FabricRepairResultDescription struct {
	ResultStatus  FabricRepairTaskResult
	ResultCode    FabricErrorCode
	ResultDetails string
}

func (obj *FabricRepairResultDescription) toInnerStruct() *innerFabricRepairResultDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricRepairResultDescription{}
	dst.ResultStatus = obj.ResultStatus
	dst.ResultCode = obj.ResultCode
	s_495, _ := windows.UTF16PtrFromString(obj.ResultDetails)
	dst.ResultDetails = s_495

	return &dst
}

type innerFabricRepairResultDescription struct {
	ResultStatus  FabricRepairTaskResult
	ResultCode    FabricErrorCode
	ResultDetails *uint16
	Reserved      unsafe.Pointer
}

func (obj *innerFabricRepairResultDescription) toGoStruct() *FabricRepairResultDescription {
	if obj == nil {
		return nil
	}
	dst := FabricRepairResultDescription{}
	dst.ResultStatus = obj.ResultStatus
	dst.ResultCode = obj.ResultCode
	dst.ResultDetails = windows.UTF16PtrToString(obj.ResultDetails)
	return &dst
}

type FabricRepairTaskHistory struct {
	CreatedUtcTimestamp   time.Time
	ClaimedUtcTimestamp   time.Time
	PreparingUtcTimestamp time.Time
	ApprovedUtcTimestamp  time.Time
	ExecutingUtcTimestamp time.Time
	RestoringUtcTimestamp time.Time
	CompletedUtcTimestamp time.Time
}

func (obj *FabricRepairTaskHistory) toInnerStruct() *innerFabricRepairTaskHistory {
	if obj == nil {
		return nil
	}
	dst := innerFabricRepairTaskHistory{}
	dst.CreatedUtcTimestamp = windows.NsecToFiletime(obj.CreatedUtcTimestamp.UnixNano())
	dst.ClaimedUtcTimestamp = windows.NsecToFiletime(obj.ClaimedUtcTimestamp.UnixNano())
	dst.PreparingUtcTimestamp = windows.NsecToFiletime(obj.PreparingUtcTimestamp.UnixNano())
	dst.ApprovedUtcTimestamp = windows.NsecToFiletime(obj.ApprovedUtcTimestamp.UnixNano())
	dst.ExecutingUtcTimestamp = windows.NsecToFiletime(obj.ExecutingUtcTimestamp.UnixNano())
	dst.RestoringUtcTimestamp = windows.NsecToFiletime(obj.RestoringUtcTimestamp.UnixNano())
	dst.CompletedUtcTimestamp = windows.NsecToFiletime(obj.CompletedUtcTimestamp.UnixNano())
	return &dst
}

type innerFabricRepairTaskHistory struct {
	CreatedUtcTimestamp   windows.Filetime
	ClaimedUtcTimestamp   windows.Filetime
	PreparingUtcTimestamp windows.Filetime
	ApprovedUtcTimestamp  windows.Filetime
	ExecutingUtcTimestamp windows.Filetime
	RestoringUtcTimestamp windows.Filetime
	CompletedUtcTimestamp windows.Filetime
	Reserved              unsafe.Pointer
}

func (obj *innerFabricRepairTaskHistory) toGoStruct() *FabricRepairTaskHistory {
	if obj == nil {
		return nil
	}
	dst := FabricRepairTaskHistory{}
	dst.CreatedUtcTimestamp = time.Unix(0, obj.CreatedUtcTimestamp.Nanoseconds())
	dst.ClaimedUtcTimestamp = time.Unix(0, obj.ClaimedUtcTimestamp.Nanoseconds())
	dst.PreparingUtcTimestamp = time.Unix(0, obj.PreparingUtcTimestamp.Nanoseconds())
	dst.ApprovedUtcTimestamp = time.Unix(0, obj.ApprovedUtcTimestamp.Nanoseconds())
	dst.ExecutingUtcTimestamp = time.Unix(0, obj.ExecutingUtcTimestamp.Nanoseconds())
	dst.RestoringUtcTimestamp = time.Unix(0, obj.RestoringUtcTimestamp.Nanoseconds())
	dst.CompletedUtcTimestamp = time.Unix(0, obj.CompletedUtcTimestamp.Nanoseconds())
	return &dst
}

type FabricRepairTaskHistoryEx1 struct {
	PreparingHealthCheckStartUtcTimestamp time.Time
	PreparingHealthCheckEndUtcTimestamp   time.Time
	RestoringHealthCheckStartUtcTimestamp time.Time
	RestoringHealthCheckEndUtcTimestamp   time.Time
}

func (obj *FabricRepairTaskHistoryEx1) toInnerStruct() *innerFabricRepairTaskHistoryEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricRepairTaskHistoryEx1{}
	dst.PreparingHealthCheckStartUtcTimestamp = windows.NsecToFiletime(obj.PreparingHealthCheckStartUtcTimestamp.UnixNano())
	dst.PreparingHealthCheckEndUtcTimestamp = windows.NsecToFiletime(obj.PreparingHealthCheckEndUtcTimestamp.UnixNano())
	dst.RestoringHealthCheckStartUtcTimestamp = windows.NsecToFiletime(obj.RestoringHealthCheckStartUtcTimestamp.UnixNano())
	dst.RestoringHealthCheckEndUtcTimestamp = windows.NsecToFiletime(obj.RestoringHealthCheckEndUtcTimestamp.UnixNano())
	return &dst
}

type innerFabricRepairTaskHistoryEx1 struct {
	PreparingHealthCheckStartUtcTimestamp windows.Filetime
	PreparingHealthCheckEndUtcTimestamp   windows.Filetime
	RestoringHealthCheckStartUtcTimestamp windows.Filetime
	RestoringHealthCheckEndUtcTimestamp   windows.Filetime
	Reserved                              unsafe.Pointer
}

func (obj *innerFabricRepairTaskHistoryEx1) toGoStruct() *FabricRepairTaskHistoryEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricRepairTaskHistoryEx1{}
	dst.PreparingHealthCheckStartUtcTimestamp = time.Unix(0, obj.PreparingHealthCheckStartUtcTimestamp.Nanoseconds())
	dst.PreparingHealthCheckEndUtcTimestamp = time.Unix(0, obj.PreparingHealthCheckEndUtcTimestamp.Nanoseconds())
	dst.RestoringHealthCheckStartUtcTimestamp = time.Unix(0, obj.RestoringHealthCheckStartUtcTimestamp.Nanoseconds())
	dst.RestoringHealthCheckEndUtcTimestamp = time.Unix(0, obj.RestoringHealthCheckEndUtcTimestamp.Nanoseconds())
	return &dst
}

type FabricRepairExecutorState struct {
	Executor     string
	ExecutorData string
}

func (obj *FabricRepairExecutorState) toInnerStruct() *innerFabricRepairExecutorState {
	if obj == nil {
		return nil
	}
	dst := innerFabricRepairExecutorState{}
	s_496, _ := windows.UTF16PtrFromString(obj.Executor)
	dst.Executor = s_496

	s_497, _ := windows.UTF16PtrFromString(obj.ExecutorData)
	dst.ExecutorData = s_497

	return &dst
}

type innerFabricRepairExecutorState struct {
	Executor     *uint16
	ExecutorData *uint16
	Reserved     unsafe.Pointer
}

func (obj *innerFabricRepairExecutorState) toGoStruct() *FabricRepairExecutorState {
	if obj == nil {
		return nil
	}
	dst := FabricRepairExecutorState{}
	dst.Executor = windows.UTF16PtrToString(obj.Executor)
	dst.ExecutorData = windows.UTF16PtrToString(obj.ExecutorData)
	return &dst
}

type FabricRepairTaskHealthPolicyUpdateDescription struct {
	Scope                       *FabricRepairScopeIdentifier
	RepairTaskId                string
	Version                     int64
	Flags                       uint32
	PerformPreparingHealthCheck bool
	PerformRestoringHealthCheck bool
}

func (obj *FabricRepairTaskHealthPolicyUpdateDescription) toInnerStruct() *innerFabricRepairTaskHealthPolicyUpdateDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricRepairTaskHealthPolicyUpdateDescription{}
	dst.Scope = obj.Scope.toInnerStruct()
	s_498, _ := windows.UTF16PtrFromString(obj.RepairTaskId)
	dst.RepairTaskId = s_498

	dst.Version = obj.Version
	dst.Flags = obj.Flags
	dst.PerformPreparingHealthCheck = obj.PerformPreparingHealthCheck
	dst.PerformRestoringHealthCheck = obj.PerformRestoringHealthCheck
	return &dst
}

type innerFabricRepairTaskHealthPolicyUpdateDescription struct {
	Scope                       *innerFabricRepairScopeIdentifier
	RepairTaskId                *uint16
	Version                     int64
	Flags                       uint32
	PerformPreparingHealthCheck bool
	PerformRestoringHealthCheck bool
	Reserved                    unsafe.Pointer
}

func (obj *innerFabricRepairTaskHealthPolicyUpdateDescription) toGoStruct() *FabricRepairTaskHealthPolicyUpdateDescription {
	if obj == nil {
		return nil
	}
	dst := FabricRepairTaskHealthPolicyUpdateDescription{}
	dst.Scope = obj.Scope.toGoStruct()
	dst.RepairTaskId = windows.UTF16PtrToString(obj.RepairTaskId)
	dst.Version = obj.Version
	dst.Flags = obj.Flags
	dst.PerformPreparingHealthCheck = obj.PerformPreparingHealthCheck
	dst.PerformRestoringHealthCheck = obj.PerformRestoringHealthCheck
	return &dst
}

type FabricRepairTask struct {
	Scope         *FabricRepairScopeIdentifier
	TaskId        string
	Version       int64
	Description   string
	State         FabricRepairTaskState
	Flags         uint32
	Action        string
	Target        *FabricRepairTargetDescription
	ExecutorState *FabricRepairExecutorState
	Impact        *FabricRepairImpactDescription
	Result        *FabricRepairResultDescription
	History       *FabricRepairTaskHistory
}

func (obj *FabricRepairTask) toInnerStruct() *innerFabricRepairTask {
	if obj == nil {
		return nil
	}
	dst := innerFabricRepairTask{}
	dst.Scope = obj.Scope.toInnerStruct()
	s_499, _ := windows.UTF16PtrFromString(obj.TaskId)
	dst.TaskId = s_499

	dst.Version = obj.Version
	s_500, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_500

	dst.State = obj.State
	dst.Flags = obj.Flags
	s_501, _ := windows.UTF16PtrFromString(obj.Action)
	dst.Action = s_501

	dst.Target = obj.Target.toInnerStruct()
	dst.ExecutorState = obj.ExecutorState.toInnerStruct()
	dst.Impact = obj.Impact.toInnerStruct()
	dst.Result = obj.Result.toInnerStruct()
	dst.History = obj.History.toInnerStruct()
	return &dst
}

type innerFabricRepairTask struct {
	Scope         *innerFabricRepairScopeIdentifier
	TaskId        *uint16
	Version       int64
	Description   *uint16
	State         FabricRepairTaskState
	Flags         uint32
	Action        *uint16
	Target        *innerFabricRepairTargetDescription
	ExecutorState *innerFabricRepairExecutorState
	Impact        *innerFabricRepairImpactDescription
	Result        *innerFabricRepairResultDescription
	History       *innerFabricRepairTaskHistory
	Reserved      unsafe.Pointer
}

func (obj *innerFabricRepairTask) toGoStruct() *FabricRepairTask {
	if obj == nil {
		return nil
	}
	dst := FabricRepairTask{}
	dst.Scope = obj.Scope.toGoStruct()
	dst.TaskId = windows.UTF16PtrToString(obj.TaskId)
	dst.Version = obj.Version
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.State = obj.State
	dst.Flags = obj.Flags
	dst.Action = windows.UTF16PtrToString(obj.Action)
	dst.Target = obj.Target.toGoStruct()
	dst.ExecutorState = obj.ExecutorState.toGoStruct()
	dst.Impact = obj.Impact.toGoStruct()
	dst.Result = obj.Result.toGoStruct()
	dst.History = obj.History.toGoStruct()
	return &dst
}

type FabricRepairTaskEx1 struct {
	PerformPreparingHealthCheck bool
	PerformRestoringHealthCheck bool
	PreparingHealthCheckState   FabricRepairTaskHealthCheckState
	RestoringHealthCheckState   FabricRepairTaskHealthCheckState
}
type innerFabricRepairTaskEx1 struct {
	FabricRepairTaskEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricRepairTaskEx1) toGoStruct() *FabricRepairTaskEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricRepairTaskEx1
}
func (obj *FabricRepairTaskEx1) toInnerStruct() *innerFabricRepairTaskEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricRepairTaskEx1{*obj, nil}
}

type innerFabricRepairTaskList struct {
	Count uint32
	Items *innerFabricRepairTask
}

func (obj *innerFabricRepairTaskList) toGoStruct() []FabricRepairTask {
	var dst []FabricRepairTask
	{
		var innerlst []innerFabricRepairTask
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricRepairTask

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricRepairCancelDescription struct {
	Scope        *FabricRepairScopeIdentifier
	RepairTaskId string
	Version      int64
	RequestAbort bool
}

func (obj *FabricRepairCancelDescription) toInnerStruct() *innerFabricRepairCancelDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricRepairCancelDescription{}
	dst.Scope = obj.Scope.toInnerStruct()
	s_502, _ := windows.UTF16PtrFromString(obj.RepairTaskId)
	dst.RepairTaskId = s_502

	dst.Version = obj.Version
	dst.RequestAbort = obj.RequestAbort
	return &dst
}

type innerFabricRepairCancelDescription struct {
	Scope        *innerFabricRepairScopeIdentifier
	RepairTaskId *uint16
	Version      int64
	RequestAbort bool
	Reserved     unsafe.Pointer
}

func (obj *innerFabricRepairCancelDescription) toGoStruct() *FabricRepairCancelDescription {
	if obj == nil {
		return nil
	}
	dst := FabricRepairCancelDescription{}
	dst.Scope = obj.Scope.toGoStruct()
	dst.RepairTaskId = windows.UTF16PtrToString(obj.RepairTaskId)
	dst.Version = obj.Version
	dst.RequestAbort = obj.RequestAbort
	return &dst
}

type FabricRepairDeleteDescription struct {
	Scope        *FabricRepairScopeIdentifier
	RepairTaskId string
	Version      int64
}

func (obj *FabricRepairDeleteDescription) toInnerStruct() *innerFabricRepairDeleteDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricRepairDeleteDescription{}
	dst.Scope = obj.Scope.toInnerStruct()
	s_503, _ := windows.UTF16PtrFromString(obj.RepairTaskId)
	dst.RepairTaskId = s_503

	dst.Version = obj.Version
	return &dst
}

type innerFabricRepairDeleteDescription struct {
	Scope        *innerFabricRepairScopeIdentifier
	RepairTaskId *uint16
	Version      int64
	Reserved     unsafe.Pointer
}

func (obj *innerFabricRepairDeleteDescription) toGoStruct() *FabricRepairDeleteDescription {
	if obj == nil {
		return nil
	}
	dst := FabricRepairDeleteDescription{}
	dst.Scope = obj.Scope.toGoStruct()
	dst.RepairTaskId = windows.UTF16PtrToString(obj.RepairTaskId)
	dst.Version = obj.Version
	return &dst
}

type FabricRepairApproveDescription struct {
	Scope        *FabricRepairScopeIdentifier
	RepairTaskId string
	Version      int64
}

func (obj *FabricRepairApproveDescription) toInnerStruct() *innerFabricRepairApproveDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricRepairApproveDescription{}
	dst.Scope = obj.Scope.toInnerStruct()
	s_504, _ := windows.UTF16PtrFromString(obj.RepairTaskId)
	dst.RepairTaskId = s_504

	dst.Version = obj.Version
	return &dst
}

type innerFabricRepairApproveDescription struct {
	Scope        *innerFabricRepairScopeIdentifier
	RepairTaskId *uint16
	Version      int64
	Reserved     unsafe.Pointer
}

func (obj *innerFabricRepairApproveDescription) toGoStruct() *FabricRepairApproveDescription {
	if obj == nil {
		return nil
	}
	dst := FabricRepairApproveDescription{}
	dst.Scope = obj.Scope.toGoStruct()
	dst.RepairTaskId = windows.UTF16PtrToString(obj.RepairTaskId)
	dst.Version = obj.Version
	return &dst
}

type FabricRepairTaskQueryDescription struct {
	Scope          *FabricRepairScopeIdentifier
	TaskIdFilter   string
	StateFilter    uint32
	ExecutorFilter string
}

func (obj *FabricRepairTaskQueryDescription) toInnerStruct() *innerFabricRepairTaskQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricRepairTaskQueryDescription{}
	dst.Scope = obj.Scope.toInnerStruct()
	s_505, _ := windows.UTF16PtrFromString(obj.TaskIdFilter)
	dst.TaskIdFilter = s_505

	dst.StateFilter = obj.StateFilter
	s_506, _ := windows.UTF16PtrFromString(obj.ExecutorFilter)
	dst.ExecutorFilter = s_506

	return &dst
}

type innerFabricRepairTaskQueryDescription struct {
	Scope          *innerFabricRepairScopeIdentifier
	TaskIdFilter   *uint16
	StateFilter    uint32
	ExecutorFilter *uint16
	Reserved       unsafe.Pointer
}

func (obj *innerFabricRepairTaskQueryDescription) toGoStruct() *FabricRepairTaskQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricRepairTaskQueryDescription{}
	dst.Scope = obj.Scope.toGoStruct()
	dst.TaskIdFilter = windows.UTF16PtrToString(obj.TaskIdFilter)
	dst.StateFilter = obj.StateFilter
	dst.ExecutorFilter = windows.UTF16PtrToString(obj.ExecutorFilter)
	return &dst
}

type FabricStoreBackupOption int32

const (
	FabricStoreBackupOptionFull             FabricStoreBackupOption = 0x0001
	FabricStoreBackupOptionIncremental      FabricStoreBackupOption = 0x0002
	FabricStoreBackupOptionTruncateLogsOnly FabricStoreBackupOption = 0x0003
)

type FabricStoreBackupInfo struct {
	BackupFolder string
	BackupOption FabricStoreBackupOption
}

func (obj *FabricStoreBackupInfo) toInnerStruct() *innerFabricStoreBackupInfo {
	if obj == nil {
		return nil
	}
	dst := innerFabricStoreBackupInfo{}
	s_507, _ := windows.UTF16PtrFromString(obj.BackupFolder)
	dst.BackupFolder = s_507

	dst.BackupOption = obj.BackupOption
	return &dst
}

type innerFabricStoreBackupInfo struct {
	BackupFolder *uint16
	BackupOption FabricStoreBackupOption
	Reserved     unsafe.Pointer
}

func (obj *innerFabricStoreBackupInfo) toGoStruct() *FabricStoreBackupInfo {
	if obj == nil {
		return nil
	}
	dst := FabricStoreBackupInfo{}
	dst.BackupFolder = windows.UTF16PtrToString(obj.BackupFolder)
	dst.BackupOption = obj.BackupOption
	return &dst
}

type FabricStoreBackupInfoEx1 struct {
	BackupChainId windows.GUID
	BackupIndex   uint32
}
type innerFabricStoreBackupInfoEx1 struct {
	FabricStoreBackupInfoEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricStoreBackupInfoEx1) toGoStruct() *FabricStoreBackupInfoEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricStoreBackupInfoEx1
}
func (obj *FabricStoreBackupInfoEx1) toInnerStruct() *innerFabricStoreBackupInfoEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricStoreBackupInfoEx1{*obj, nil}
}

type FabricDeltaNodesCheckHealthEvaluation struct {
	Description                   string
	AggregatedHealthState         FabricHealthState
	BaselineErrorCount            uint32
	BaselineTotalCount            uint32
	TotalCount                    uint32
	MaxPercentDeltaUnhealthyNodes byte
	UnhealthyEvaluations          []FabricHealthEvaluation
}

func (obj *FabricDeltaNodesCheckHealthEvaluation) toInnerStruct() *innerFabricDeltaNodesCheckHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeltaNodesCheckHealthEvaluation{}
	s_508, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_508

	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.BaselineErrorCount = obj.BaselineErrorCount
	dst.BaselineTotalCount = obj.BaselineTotalCount
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentDeltaUnhealthyNodes = obj.MaxPercentDeltaUnhealthyNodes
	lst_509 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_509.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_509.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_509
	return &dst
}

type innerFabricDeltaNodesCheckHealthEvaluation struct {
	Description                   *uint16
	AggregatedHealthState         FabricHealthState
	BaselineErrorCount            uint32
	BaselineTotalCount            uint32
	TotalCount                    uint32
	MaxPercentDeltaUnhealthyNodes byte
	UnhealthyEvaluations          *innerFabricHealthEvaluationList
	Reserved                      unsafe.Pointer
}

func (obj *innerFabricDeltaNodesCheckHealthEvaluation) toGoStruct() *FabricDeltaNodesCheckHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricDeltaNodesCheckHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.BaselineErrorCount = obj.BaselineErrorCount
	dst.BaselineTotalCount = obj.BaselineTotalCount
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentDeltaUnhealthyNodes = obj.MaxPercentDeltaUnhealthyNodes
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricUpgradeDomainDeltaNodesCheckHealthEvaluation struct {
	Description                                string
	AggregatedHealthState                      FabricHealthState
	UpgradeDomainName                          string
	BaselineErrorCount                         uint32
	BaselineTotalCount                         uint32
	TotalCount                                 uint32
	MaxPercentUpgradeDomainDeltaUnhealthyNodes byte
	UnhealthyEvaluations                       []FabricHealthEvaluation
}

func (obj *FabricUpgradeDomainDeltaNodesCheckHealthEvaluation) toInnerStruct() *innerFabricUpgradeDomainDeltaNodesCheckHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricUpgradeDomainDeltaNodesCheckHealthEvaluation{}
	s_510, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_510

	dst.AggregatedHealthState = obj.AggregatedHealthState
	s_511, _ := windows.UTF16PtrFromString(obj.UpgradeDomainName)
	dst.UpgradeDomainName = s_511

	dst.BaselineErrorCount = obj.BaselineErrorCount
	dst.BaselineTotalCount = obj.BaselineTotalCount
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUpgradeDomainDeltaUnhealthyNodes = obj.MaxPercentUpgradeDomainDeltaUnhealthyNodes
	lst_512 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_512.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_512.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_512
	return &dst
}

type innerFabricUpgradeDomainDeltaNodesCheckHealthEvaluation struct {
	Description                                *uint16
	AggregatedHealthState                      FabricHealthState
	UpgradeDomainName                          *uint16
	BaselineErrorCount                         uint32
	BaselineTotalCount                         uint32
	TotalCount                                 uint32
	MaxPercentUpgradeDomainDeltaUnhealthyNodes byte
	UnhealthyEvaluations                       *innerFabricHealthEvaluationList
	Reserved                                   unsafe.Pointer
}

func (obj *innerFabricUpgradeDomainDeltaNodesCheckHealthEvaluation) toGoStruct() *FabricUpgradeDomainDeltaNodesCheckHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricUpgradeDomainDeltaNodesCheckHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.UpgradeDomainName = windows.UTF16PtrToString(obj.UpgradeDomainName)
	dst.BaselineErrorCount = obj.BaselineErrorCount
	dst.BaselineTotalCount = obj.BaselineTotalCount
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUpgradeDomainDeltaUnhealthyNodes = obj.MaxPercentUpgradeDomainDeltaUnhealthyNodes
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	return &dst
}

type FabricPagingStatus struct {
	ContinuationToken string
}

func (obj *FabricPagingStatus) toInnerStruct() *innerFabricPagingStatus {
	if obj == nil {
		return nil
	}
	dst := innerFabricPagingStatus{}
	s_513, _ := windows.UTF16PtrFromString(obj.ContinuationToken)
	dst.ContinuationToken = s_513

	return &dst
}

type innerFabricPagingStatus struct {
	ContinuationToken *uint16
	Reserved          unsafe.Pointer
}

func (obj *innerFabricPagingStatus) toGoStruct() *FabricPagingStatus {
	if obj == nil {
		return nil
	}
	dst := FabricPagingStatus{}
	dst.ContinuationToken = windows.UTF16PtrToString(obj.ContinuationToken)
	return &dst
}

type FabricNodeQueryDescriptionEx1 struct {
	ContinuationToken string
}

func (obj *FabricNodeQueryDescriptionEx1) toInnerStruct() *innerFabricNodeQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeQueryDescriptionEx1{}
	s_514, _ := windows.UTF16PtrFromString(obj.ContinuationToken)
	dst.ContinuationToken = s_514

	return &dst
}

type innerFabricNodeQueryDescriptionEx1 struct {
	ContinuationToken *uint16
	Reserved          unsafe.Pointer
}

func (obj *innerFabricNodeQueryDescriptionEx1) toGoStruct() *FabricNodeQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricNodeQueryDescriptionEx1{}
	dst.ContinuationToken = windows.UTF16PtrToString(obj.ContinuationToken)
	return &dst
}

type FabricNodeQueryDescriptionEx2 struct {
	NodeStatusFilter uint32
}
type innerFabricNodeQueryDescriptionEx2 struct {
	FabricNodeQueryDescriptionEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeQueryDescriptionEx2) toGoStruct() *FabricNodeQueryDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeQueryDescriptionEx2
}
func (obj *FabricNodeQueryDescriptionEx2) toInnerStruct() *innerFabricNodeQueryDescriptionEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeQueryDescriptionEx2{*obj, nil}
}

type FabricNodeQueryDescriptionEx3 struct {
	MaxResults int32
}
type innerFabricNodeQueryDescriptionEx3 struct {
	FabricNodeQueryDescriptionEx3
	Reserved unsafe.Pointer
}

func (obj *innerFabricNodeQueryDescriptionEx3) toGoStruct() *FabricNodeQueryDescriptionEx3 {
	if obj == nil {
		return nil
	}
	return &obj.FabricNodeQueryDescriptionEx3
}
func (obj *FabricNodeQueryDescriptionEx3) toInnerStruct() *innerFabricNodeQueryDescriptionEx3 {
	if obj == nil {
		return nil
	}
	return &innerFabricNodeQueryDescriptionEx3{*obj, nil}
}

type FabricServicePartitionQueryDescriptionEx1 struct {
	ContinuationToken string
}

func (obj *FabricServicePartitionQueryDescriptionEx1) toInnerStruct() *innerFabricServicePartitionQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricServicePartitionQueryDescriptionEx1{}
	s_515, _ := windows.UTF16PtrFromString(obj.ContinuationToken)
	dst.ContinuationToken = s_515

	return &dst
}

type innerFabricServicePartitionQueryDescriptionEx1 struct {
	ContinuationToken *uint16
	Reserved          unsafe.Pointer
}

func (obj *innerFabricServicePartitionQueryDescriptionEx1) toGoStruct() *FabricServicePartitionQueryDescriptionEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricServicePartitionQueryDescriptionEx1{}
	dst.ContinuationToken = windows.UTF16PtrToString(obj.ContinuationToken)
	return &dst
}

type FabricServiceReplicaQueryDescriptionEx2 struct {
	ContinuationToken string
}

func (obj *FabricServiceReplicaQueryDescriptionEx2) toInnerStruct() *innerFabricServiceReplicaQueryDescriptionEx2 {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceReplicaQueryDescriptionEx2{}
	s_516, _ := windows.UTF16PtrFromString(obj.ContinuationToken)
	dst.ContinuationToken = s_516

	return &dst
}

type innerFabricServiceReplicaQueryDescriptionEx2 struct {
	ContinuationToken *uint16
	Reserved          unsafe.Pointer
}

func (obj *innerFabricServiceReplicaQueryDescriptionEx2) toGoStruct() *FabricServiceReplicaQueryDescriptionEx2 {
	if obj == nil {
		return nil
	}
	dst := FabricServiceReplicaQueryDescriptionEx2{}
	dst.ContinuationToken = windows.UTF16PtrToString(obj.ContinuationToken)
	return &dst
}

type FabricApplicationTypeHealthPolicyMapItem struct {
	ApplicationTypeName             string
	MaxPercentUnhealthyApplications byte
}

func (obj *FabricApplicationTypeHealthPolicyMapItem) toInnerStruct() *innerFabricApplicationTypeHealthPolicyMapItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationTypeHealthPolicyMapItem{}
	s_517, _ := windows.UTF16PtrFromString(obj.ApplicationTypeName)
	dst.ApplicationTypeName = s_517

	dst.MaxPercentUnhealthyApplications = obj.MaxPercentUnhealthyApplications
	return &dst
}

type innerFabricApplicationTypeHealthPolicyMapItem struct {
	ApplicationTypeName             *uint16
	MaxPercentUnhealthyApplications byte
}

func (obj *innerFabricApplicationTypeHealthPolicyMapItem) toGoStruct() *FabricApplicationTypeHealthPolicyMapItem {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationTypeHealthPolicyMapItem{}
	dst.ApplicationTypeName = windows.UTF16PtrToString(obj.ApplicationTypeName)
	dst.MaxPercentUnhealthyApplications = obj.MaxPercentUnhealthyApplications
	return &dst
}

type innerFabricApplicationTypeHealthPolicyMap struct {
	Count uint32
	Items *innerFabricApplicationTypeHealthPolicyMapItem
}

func (obj *innerFabricApplicationTypeHealthPolicyMap) toGoStruct() map[string]byte {
	var dst = make(map[string]byte)
	{
		var mapvar = make(map[string]byte)

		var innerlst []innerFabricApplicationTypeHealthPolicyMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, kv := range innerlst {
			var k string
			var v byte

			k = windows.UTF16PtrToString(kv.ApplicationTypeName)
			v = kv.MaxPercentUnhealthyApplications
			mapvar[k] = v

		}

		dst = mapvar
	}
	return dst
}

type FabricClusterHealthPolicyEx1 struct {
	ApplicationTypeHealthPolicyMap map[string]byte
}

func (obj *FabricClusterHealthPolicyEx1) toInnerStruct() *innerFabricClusterHealthPolicyEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricClusterHealthPolicyEx1{}
	{
		mapobj := &innerFabricApplicationTypeHealthPolicyMap{}

		var tmp []innerFabricApplicationTypeHealthPolicyMapItem

		for k, v := range obj.ApplicationTypeHealthPolicyMap {
			kv := innerFabricApplicationTypeHealthPolicyMapItem{}

			s_520, _ := windows.UTF16PtrFromString(k)
			kv.ApplicationTypeName = s_520

			kv.MaxPercentUnhealthyApplications = v

			tmp = append(tmp, kv)
		}

		mapobj.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			mapobj.Items = &tmp[0]
		}

		dst.ApplicationTypeHealthPolicyMap = mapobj
	}
	return &dst
}

type innerFabricClusterHealthPolicyEx1 struct {
	ApplicationTypeHealthPolicyMap *innerFabricApplicationTypeHealthPolicyMap
	Reserved                       unsafe.Pointer
}

func (obj *innerFabricClusterHealthPolicyEx1) toGoStruct() *FabricClusterHealthPolicyEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricClusterHealthPolicyEx1{}
	{
		var mapvar = make(map[string]byte)

		var innerlst []innerFabricApplicationTypeHealthPolicyMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationTypeHealthPolicyMap.Items), int(obj.ApplicationTypeHealthPolicyMap.Count))

		for _, kv := range innerlst {
			var k string
			var v byte

			k = windows.UTF16PtrToString(kv.ApplicationTypeName)
			v = kv.MaxPercentUnhealthyApplications
			mapvar[k] = v

		}

		dst.ApplicationTypeHealthPolicyMap = mapvar
	}
	return &dst
}

type FabricApplicationTypeApplicationsHealthEvaluation struct {
	Description                     string
	AggregatedHealthState           FabricHealthState
	ApplicationTypeName             string
	UnhealthyEvaluations            []FabricHealthEvaluation
	TotalCount                      uint32
	MaxPercentUnhealthyApplications byte
}

func (obj *FabricApplicationTypeApplicationsHealthEvaluation) toInnerStruct() *innerFabricApplicationTypeApplicationsHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationTypeApplicationsHealthEvaluation{}
	s_522, _ := windows.UTF16PtrFromString(obj.Description)
	dst.Description = s_522

	dst.AggregatedHealthState = obj.AggregatedHealthState
	s_523, _ := windows.UTF16PtrFromString(obj.ApplicationTypeName)
	dst.ApplicationTypeName = s_523

	lst_524 := &innerFabricHealthEvaluationList{}
	{

		var tmp []innerFabricHealthEvaluation

		for _, item := range obj.UnhealthyEvaluations {
			var tmpitem innerFabricHealthEvaluation

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_524.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_524.Items = &tmp[0]
		}

	}
	dst.UnhealthyEvaluations = lst_524
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyApplications = obj.MaxPercentUnhealthyApplications
	return &dst
}

type innerFabricApplicationTypeApplicationsHealthEvaluation struct {
	Description                     *uint16
	AggregatedHealthState           FabricHealthState
	ApplicationTypeName             *uint16
	UnhealthyEvaluations            *innerFabricHealthEvaluationList
	TotalCount                      uint32
	MaxPercentUnhealthyApplications byte
	Reserved                        unsafe.Pointer
}

func (obj *innerFabricApplicationTypeApplicationsHealthEvaluation) toGoStruct() *FabricApplicationTypeApplicationsHealthEvaluation {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationTypeApplicationsHealthEvaluation{}
	dst.Description = windows.UTF16PtrToString(obj.Description)
	dst.AggregatedHealthState = obj.AggregatedHealthState
	dst.ApplicationTypeName = windows.UTF16PtrToString(obj.ApplicationTypeName)
	{
		var innerlst []innerFabricHealthEvaluation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.UnhealthyEvaluations.Items), int(obj.UnhealthyEvaluations.Count))

		for _, item := range innerlst {
			var tmpitem FabricHealthEvaluation

			tmpitem = *item.toGoStruct()

			dst.UnhealthyEvaluations = append(dst.UnhealthyEvaluations, tmpitem)
		}

	}
	dst.TotalCount = obj.TotalCount
	dst.MaxPercentUnhealthyApplications = obj.MaxPercentUnhealthyApplications
	return &dst
}

type FabricNodeHealthStateFilter struct {
	HealthStateFilter uint32
	NodeNameFilter    string
}

func (obj *FabricNodeHealthStateFilter) toInnerStruct() *innerFabricNodeHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	s_525, _ := windows.UTF16PtrFromString(obj.NodeNameFilter)
	dst.NodeNameFilter = s_525

	return &dst
}

type innerFabricNodeHealthStateFilter struct {
	HealthStateFilter uint32
	NodeNameFilter    *uint16
	Reserved          unsafe.Pointer
}

func (obj *innerFabricNodeHealthStateFilter) toGoStruct() *FabricNodeHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := FabricNodeHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	dst.NodeNameFilter = windows.UTF16PtrToString(obj.NodeNameFilter)
	return &dst
}

type innerFabricNodeHealthStateFilterList struct {
	Count uint32
	Items *innerFabricNodeHealthStateFilter
}

func (obj *innerFabricNodeHealthStateFilterList) toGoStruct() []FabricNodeHealthStateFilter {
	var dst []FabricNodeHealthStateFilter
	{
		var innerlst []innerFabricNodeHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedServicePackageHealthStateFilter struct {
	HealthStateFilter         uint32
	ServiceManifestNameFilter string
}

func (obj *FabricDeployedServicePackageHealthStateFilter) toInnerStruct() *innerFabricDeployedServicePackageHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	s_526, _ := windows.UTF16PtrFromString(obj.ServiceManifestNameFilter)
	dst.ServiceManifestNameFilter = s_526

	return &dst
}

type innerFabricDeployedServicePackageHealthStateFilter struct {
	HealthStateFilter         uint32
	ServiceManifestNameFilter *uint16
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthStateFilter) toGoStruct() *FabricDeployedServicePackageHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	dst.ServiceManifestNameFilter = windows.UTF16PtrToString(obj.ServiceManifestNameFilter)
	return &dst
}

type FabricDeployedServicePackageHealthStateFilterEx1 struct {
	ServicePackageActivationIdFilter string
}

func (obj *FabricDeployedServicePackageHealthStateFilterEx1) toInnerStruct() *innerFabricDeployedServicePackageHealthStateFilterEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthStateFilterEx1{}
	s_527, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationIdFilter)
	dst.ServicePackageActivationIdFilter = s_527

	return &dst
}

type innerFabricDeployedServicePackageHealthStateFilterEx1 struct {
	ServicePackageActivationIdFilter *uint16
	Reserved                         unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthStateFilterEx1) toGoStruct() *FabricDeployedServicePackageHealthStateFilterEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthStateFilterEx1{}
	dst.ServicePackageActivationIdFilter = windows.UTF16PtrToString(obj.ServicePackageActivationIdFilter)
	return &dst
}

type innerFabricDeployedServicePackageHealthStateFilterList struct {
	Count uint32
	Items *innerFabricDeployedServicePackageHealthStateFilter
}

func (obj *innerFabricDeployedServicePackageHealthStateFilterList) toGoStruct() []FabricDeployedServicePackageHealthStateFilter {
	var dst []FabricDeployedServicePackageHealthStateFilter
	{
		var innerlst []innerFabricDeployedServicePackageHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedServicePackageHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedApplicationHealthStateFilter struct {
	HealthStateFilter             uint32
	NodeNameFilter                string
	DeployedServicePackageFilters []FabricDeployedServicePackageHealthStateFilter
}

func (obj *FabricDeployedApplicationHealthStateFilter) toInnerStruct() *innerFabricDeployedApplicationHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	s_528, _ := windows.UTF16PtrFromString(obj.NodeNameFilter)
	dst.NodeNameFilter = s_528

	lst_529 := &innerFabricDeployedServicePackageHealthStateFilterList{}
	{

		var tmp []innerFabricDeployedServicePackageHealthStateFilter

		for _, item := range obj.DeployedServicePackageFilters {
			var tmpitem innerFabricDeployedServicePackageHealthStateFilter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_529.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_529.Items = &tmp[0]
		}

	}
	dst.DeployedServicePackageFilters = lst_529
	return &dst
}

type innerFabricDeployedApplicationHealthStateFilter struct {
	HealthStateFilter             uint32
	NodeNameFilter                *uint16
	DeployedServicePackageFilters *innerFabricDeployedServicePackageHealthStateFilterList
	Reserved                      unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthStateFilter) toGoStruct() *FabricDeployedApplicationHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	dst.NodeNameFilter = windows.UTF16PtrToString(obj.NodeNameFilter)
	{
		var innerlst []innerFabricDeployedServicePackageHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.DeployedServicePackageFilters.Items), int(obj.DeployedServicePackageFilters.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedServicePackageHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst.DeployedServicePackageFilters = append(dst.DeployedServicePackageFilters, tmpitem)
		}

	}
	return &dst
}

type innerFabricDeployedApplicationHealthStateFilterList struct {
	Count uint32
	Items *innerFabricDeployedApplicationHealthStateFilter
}

func (obj *innerFabricDeployedApplicationHealthStateFilterList) toGoStruct() []FabricDeployedApplicationHealthStateFilter {
	var dst []FabricDeployedApplicationHealthStateFilter
	{
		var innerlst []innerFabricDeployedApplicationHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedApplicationHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricReplicaHealthStateFilter struct {
	HealthStateFilter         uint32
	ReplicaOrInstanceIdFilter int64
}
type innerFabricReplicaHealthStateFilter struct {
	FabricReplicaHealthStateFilter
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicaHealthStateFilter) toGoStruct() *FabricReplicaHealthStateFilter {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicaHealthStateFilter
}
func (obj *FabricReplicaHealthStateFilter) toInnerStruct() *innerFabricReplicaHealthStateFilter {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicaHealthStateFilter{*obj, nil}
}

type innerFabricReplicaHealthStateFilterList struct {
	Count uint32
	Items *innerFabricReplicaHealthStateFilter
}

func (obj *innerFabricReplicaHealthStateFilterList) toGoStruct() []FabricReplicaHealthStateFilter {
	var dst []FabricReplicaHealthStateFilter
	{
		var innerlst []innerFabricReplicaHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricReplicaHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricPartitionHealthStateFilter struct {
	HealthStateFilter uint32
	PartitionIdFilter windows.GUID
	ReplicaFilters    []FabricReplicaHealthStateFilter
}

func (obj *FabricPartitionHealthStateFilter) toInnerStruct() *innerFabricPartitionHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := innerFabricPartitionHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	dst.PartitionIdFilter = obj.PartitionIdFilter
	lst_530 := &innerFabricReplicaHealthStateFilterList{}
	{

		var tmp []innerFabricReplicaHealthStateFilter

		for _, item := range obj.ReplicaFilters {
			var tmpitem innerFabricReplicaHealthStateFilter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_530.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_530.Items = &tmp[0]
		}

	}
	dst.ReplicaFilters = lst_530
	return &dst
}

type innerFabricPartitionHealthStateFilter struct {
	HealthStateFilter uint32
	PartitionIdFilter windows.GUID
	ReplicaFilters    *innerFabricReplicaHealthStateFilterList
	Reserved          unsafe.Pointer
}

func (obj *innerFabricPartitionHealthStateFilter) toGoStruct() *FabricPartitionHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := FabricPartitionHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	dst.PartitionIdFilter = obj.PartitionIdFilter
	{
		var innerlst []innerFabricReplicaHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ReplicaFilters.Items), int(obj.ReplicaFilters.Count))

		for _, item := range innerlst {
			var tmpitem FabricReplicaHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst.ReplicaFilters = append(dst.ReplicaFilters, tmpitem)
		}

	}
	return &dst
}

type innerFabricPartitionHealthStateFilterList struct {
	Count uint32
	Items *innerFabricPartitionHealthStateFilter
}

func (obj *innerFabricPartitionHealthStateFilterList) toGoStruct() []FabricPartitionHealthStateFilter {
	var dst []FabricPartitionHealthStateFilter
	{
		var innerlst []innerFabricPartitionHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricPartitionHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServiceHealthStateFilter struct {
	HealthStateFilter uint32
	ServiceNameFilter string
	PartitionFilters  []FabricPartitionHealthStateFilter
}

func (obj *FabricServiceHealthStateFilter) toInnerStruct() *innerFabricServiceHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	s_531, _ := windows.UTF16PtrFromString(obj.ServiceNameFilter)
	dst.ServiceNameFilter = s_531

	lst_532 := &innerFabricPartitionHealthStateFilterList{}
	{

		var tmp []innerFabricPartitionHealthStateFilter

		for _, item := range obj.PartitionFilters {
			var tmpitem innerFabricPartitionHealthStateFilter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_532.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_532.Items = &tmp[0]
		}

	}
	dst.PartitionFilters = lst_532
	return &dst
}

type innerFabricServiceHealthStateFilter struct {
	HealthStateFilter uint32
	ServiceNameFilter *uint16
	PartitionFilters  *innerFabricPartitionHealthStateFilterList
	Reserved          unsafe.Pointer
}

func (obj *innerFabricServiceHealthStateFilter) toGoStruct() *FabricServiceHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := FabricServiceHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	dst.ServiceNameFilter = windows.UTF16PtrToString(obj.ServiceNameFilter)
	{
		var innerlst []innerFabricPartitionHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PartitionFilters.Items), int(obj.PartitionFilters.Count))

		for _, item := range innerlst {
			var tmpitem FabricPartitionHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst.PartitionFilters = append(dst.PartitionFilters, tmpitem)
		}

	}
	return &dst
}

type innerFabricServiceHealthStateFilterList struct {
	Count uint32
	Items *innerFabricServiceHealthStateFilter
}

func (obj *innerFabricServiceHealthStateFilterList) toGoStruct() []FabricServiceHealthStateFilter {
	var dst []FabricServiceHealthStateFilter
	{
		var innerlst []innerFabricServiceHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricApplicationHealthStateFilter struct {
	HealthStateFilter          uint32
	ApplicationNameFilter      string
	ServiceFilters             []FabricServiceHealthStateFilter
	DeployedApplicationFilters []FabricDeployedApplicationHealthStateFilter
}

func (obj *FabricApplicationHealthStateFilter) toInnerStruct() *innerFabricApplicationHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	s_533, _ := windows.UTF16PtrFromString(obj.ApplicationNameFilter)
	dst.ApplicationNameFilter = s_533

	lst_534 := &innerFabricServiceHealthStateFilterList{}
	{

		var tmp []innerFabricServiceHealthStateFilter

		for _, item := range obj.ServiceFilters {
			var tmpitem innerFabricServiceHealthStateFilter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_534.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_534.Items = &tmp[0]
		}

	}
	dst.ServiceFilters = lst_534
	lst_535 := &innerFabricDeployedApplicationHealthStateFilterList{}
	{

		var tmp []innerFabricDeployedApplicationHealthStateFilter

		for _, item := range obj.DeployedApplicationFilters {
			var tmpitem innerFabricDeployedApplicationHealthStateFilter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_535.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_535.Items = &tmp[0]
		}

	}
	dst.DeployedApplicationFilters = lst_535
	return &dst
}

type innerFabricApplicationHealthStateFilter struct {
	HealthStateFilter          uint32
	ApplicationNameFilter      *uint16
	ServiceFilters             *innerFabricServiceHealthStateFilterList
	DeployedApplicationFilters *innerFabricDeployedApplicationHealthStateFilterList
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricApplicationHealthStateFilter) toGoStruct() *FabricApplicationHealthStateFilter {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealthStateFilter{}
	dst.HealthStateFilter = obj.HealthStateFilter
	dst.ApplicationNameFilter = windows.UTF16PtrToString(obj.ApplicationNameFilter)
	{
		var innerlst []innerFabricServiceHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ServiceFilters.Items), int(obj.ServiceFilters.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst.ServiceFilters = append(dst.ServiceFilters, tmpitem)
		}

	}
	{
		var innerlst []innerFabricDeployedApplicationHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.DeployedApplicationFilters.Items), int(obj.DeployedApplicationFilters.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedApplicationHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst.DeployedApplicationFilters = append(dst.DeployedApplicationFilters, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationHealthStateFilterEx1 struct {
	ApplicationTypeNameFilter string
}

func (obj *FabricApplicationHealthStateFilterEx1) toInnerStruct() *innerFabricApplicationHealthStateFilterEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealthStateFilterEx1{}
	s_536, _ := windows.UTF16PtrFromString(obj.ApplicationTypeNameFilter)
	dst.ApplicationTypeNameFilter = s_536

	return &dst
}

type innerFabricApplicationHealthStateFilterEx1 struct {
	ApplicationTypeNameFilter *uint16
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricApplicationHealthStateFilterEx1) toGoStruct() *FabricApplicationHealthStateFilterEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealthStateFilterEx1{}
	dst.ApplicationTypeNameFilter = windows.UTF16PtrToString(obj.ApplicationTypeNameFilter)
	return &dst
}

type innerFabricApplicationHealthStateFilterList struct {
	Count uint32
	Items *innerFabricApplicationHealthStateFilter
}

func (obj *innerFabricApplicationHealthStateFilterList) toGoStruct() []FabricApplicationHealthStateFilter {
	var dst []FabricApplicationHealthStateFilter
	{
		var innerlst []innerFabricApplicationHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricClusterHealthChunkQueryDescription struct {
	ClusterHealthPolicy        *FabricClusterHealthPolicy
	ApplicationHealthPolicyMap map[string]FabricApplicationHealthPolicy
	ApplicationFilters         []FabricApplicationHealthStateFilter
	NodeFilters                []FabricNodeHealthStateFilter
}

func (obj *FabricClusterHealthChunkQueryDescription) toInnerStruct() *innerFabricClusterHealthChunkQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricClusterHealthChunkQueryDescription{}
	dst.ClusterHealthPolicy = obj.ClusterHealthPolicy.toInnerStruct()
	{
		mapobj := &innerFabricApplicationHealthPolicyMap{}

		var tmp []innerFabricApplicationHealthPolicyMapItem

		for k, v := range obj.ApplicationHealthPolicyMap {
			kv := innerFabricApplicationHealthPolicyMapItem{}

			s_538, _ := windows.UTF16PtrFromString(k)
			kv.ApplicationName = s_538

			kv.HealthPolicy = v.toInnerStruct()

			tmp = append(tmp, kv)
		}

		mapobj.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			mapobj.Items = &tmp[0]
		}

		dst.ApplicationHealthPolicyMap = mapobj
	}
	lst_539 := &innerFabricApplicationHealthStateFilterList{}
	{

		var tmp []innerFabricApplicationHealthStateFilter

		for _, item := range obj.ApplicationFilters {
			var tmpitem innerFabricApplicationHealthStateFilter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_539.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_539.Items = &tmp[0]
		}

	}
	dst.ApplicationFilters = lst_539
	lst_540 := &innerFabricNodeHealthStateFilterList{}
	{

		var tmp []innerFabricNodeHealthStateFilter

		for _, item := range obj.NodeFilters {
			var tmpitem innerFabricNodeHealthStateFilter

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_540.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_540.Items = &tmp[0]
		}

	}
	dst.NodeFilters = lst_540
	return &dst
}

type innerFabricClusterHealthChunkQueryDescription struct {
	ClusterHealthPolicy        *innerFabricClusterHealthPolicy
	ApplicationHealthPolicyMap *innerFabricApplicationHealthPolicyMap
	ApplicationFilters         *innerFabricApplicationHealthStateFilterList
	NodeFilters                *innerFabricNodeHealthStateFilterList
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricClusterHealthChunkQueryDescription) toGoStruct() *FabricClusterHealthChunkQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricClusterHealthChunkQueryDescription{}
	dst.ClusterHealthPolicy = obj.ClusterHealthPolicy.toGoStruct()
	{
		var mapvar = make(map[string]FabricApplicationHealthPolicy)

		var innerlst []innerFabricApplicationHealthPolicyMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationHealthPolicyMap.Items), int(obj.ApplicationHealthPolicyMap.Count))

		for _, kv := range innerlst {
			var k string
			var v *FabricApplicationHealthPolicy

			k = windows.UTF16PtrToString(kv.ApplicationName)
			v = kv.HealthPolicy.toGoStruct()
			mapvar[k] = *v

		}

		dst.ApplicationHealthPolicyMap = mapvar
	}
	{
		var innerlst []innerFabricApplicationHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationFilters.Items), int(obj.ApplicationFilters.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst.ApplicationFilters = append(dst.ApplicationFilters, tmpitem)
		}

	}
	{
		var innerlst []innerFabricNodeHealthStateFilter
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.NodeFilters.Items), int(obj.NodeFilters.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeHealthStateFilter

			tmpitem = *item.toGoStruct()

			dst.NodeFilters = append(dst.NodeFilters, tmpitem)
		}

	}
	return &dst
}

type FabricNodeHealthStateChunk struct {
	NodeName    string
	HealthState FabricHealthState
}

func (obj *FabricNodeHealthStateChunk) toInnerStruct() *innerFabricNodeHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := innerFabricNodeHealthStateChunk{}
	s_542, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_542

	dst.HealthState = obj.HealthState
	return &dst
}

type innerFabricNodeHealthStateChunk struct {
	NodeName    *uint16
	HealthState FabricHealthState
	Reserved    unsafe.Pointer
}

func (obj *innerFabricNodeHealthStateChunk) toGoStruct() *FabricNodeHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := FabricNodeHealthStateChunk{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.HealthState = obj.HealthState
	return &dst
}

type innerFabricNodeHealthStateChunkList struct {
	Count      uint32
	Items      *innerFabricNodeHealthStateChunk
	TotalCount uint32
	Reserved   unsafe.Pointer
}

func (obj *innerFabricNodeHealthStateChunkList) toGoStruct() []FabricNodeHealthStateChunk {
	var dst []FabricNodeHealthStateChunk
	{
		var innerlst []innerFabricNodeHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricReplicaHealthStateChunk struct {
	ReplicaOrInstanceId int64
	HealthState         FabricHealthState
}
type innerFabricReplicaHealthStateChunk struct {
	FabricReplicaHealthStateChunk
	Reserved unsafe.Pointer
}

func (obj *innerFabricReplicaHealthStateChunk) toGoStruct() *FabricReplicaHealthStateChunk {
	if obj == nil {
		return nil
	}
	return &obj.FabricReplicaHealthStateChunk
}
func (obj *FabricReplicaHealthStateChunk) toInnerStruct() *innerFabricReplicaHealthStateChunk {
	if obj == nil {
		return nil
	}
	return &innerFabricReplicaHealthStateChunk{*obj, nil}
}

type innerFabricReplicaHealthStateChunkList struct {
	Count      uint32
	Items      *innerFabricReplicaHealthStateChunk
	TotalCount uint32
	Reserved   unsafe.Pointer
}

func (obj *innerFabricReplicaHealthStateChunkList) toGoStruct() []FabricReplicaHealthStateChunk {
	var dst []FabricReplicaHealthStateChunk
	{
		var innerlst []innerFabricReplicaHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricReplicaHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricPartitionHealthStateChunk struct {
	PartitionId              windows.GUID
	HealthState              FabricHealthState
	ReplicaHealthStateChunks []FabricReplicaHealthStateChunk
}

func (obj *FabricPartitionHealthStateChunk) toInnerStruct() *innerFabricPartitionHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := innerFabricPartitionHealthStateChunk{}
	dst.PartitionId = obj.PartitionId
	dst.HealthState = obj.HealthState
	lst_543 := &innerFabricReplicaHealthStateChunkList{}
	{

		var tmp []innerFabricReplicaHealthStateChunk

		for _, item := range obj.ReplicaHealthStateChunks {
			var tmpitem innerFabricReplicaHealthStateChunk

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_543.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_543.Items = &tmp[0]
		}

	}
	dst.ReplicaHealthStateChunks = lst_543
	return &dst
}

type innerFabricPartitionHealthStateChunk struct {
	PartitionId              windows.GUID
	HealthState              FabricHealthState
	ReplicaHealthStateChunks *innerFabricReplicaHealthStateChunkList
	Reserved                 unsafe.Pointer
}

func (obj *innerFabricPartitionHealthStateChunk) toGoStruct() *FabricPartitionHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := FabricPartitionHealthStateChunk{}
	dst.PartitionId = obj.PartitionId
	dst.HealthState = obj.HealthState
	{
		var innerlst []innerFabricReplicaHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ReplicaHealthStateChunks.Items), int(obj.ReplicaHealthStateChunks.Count))

		for _, item := range innerlst {
			var tmpitem FabricReplicaHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst.ReplicaHealthStateChunks = append(dst.ReplicaHealthStateChunks, tmpitem)
		}

	}
	return &dst
}

type innerFabricPartitionHealthStateChunkList struct {
	Count      uint32
	Items      *innerFabricPartitionHealthStateChunk
	TotalCount uint32
	Reserved   unsafe.Pointer
}

func (obj *innerFabricPartitionHealthStateChunkList) toGoStruct() []FabricPartitionHealthStateChunk {
	var dst []FabricPartitionHealthStateChunk
	{
		var innerlst []innerFabricPartitionHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricPartitionHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricServiceHealthStateChunk struct {
	ServiceName                string
	HealthState                FabricHealthState
	PartitionHealthStateChunks []FabricPartitionHealthStateChunk
}

func (obj *FabricServiceHealthStateChunk) toInnerStruct() *innerFabricServiceHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := innerFabricServiceHealthStateChunk{}
	s_544, _ := windows.UTF16PtrFromString(obj.ServiceName)
	dst.ServiceName = s_544

	dst.HealthState = obj.HealthState
	lst_545 := &innerFabricPartitionHealthStateChunkList{}
	{

		var tmp []innerFabricPartitionHealthStateChunk

		for _, item := range obj.PartitionHealthStateChunks {
			var tmpitem innerFabricPartitionHealthStateChunk

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_545.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_545.Items = &tmp[0]
		}

	}
	dst.PartitionHealthStateChunks = lst_545
	return &dst
}

type innerFabricServiceHealthStateChunk struct {
	ServiceName                *uint16
	HealthState                FabricHealthState
	PartitionHealthStateChunks *innerFabricPartitionHealthStateChunkList
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricServiceHealthStateChunk) toGoStruct() *FabricServiceHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := FabricServiceHealthStateChunk{}
	dst.ServiceName = windows.UTF16PtrToString(obj.ServiceName)
	dst.HealthState = obj.HealthState
	{
		var innerlst []innerFabricPartitionHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.PartitionHealthStateChunks.Items), int(obj.PartitionHealthStateChunks.Count))

		for _, item := range innerlst {
			var tmpitem FabricPartitionHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst.PartitionHealthStateChunks = append(dst.PartitionHealthStateChunks, tmpitem)
		}

	}
	return &dst
}

type innerFabricServiceHealthStateChunkList struct {
	Count      uint32
	Items      *innerFabricServiceHealthStateChunk
	TotalCount uint32
	Reserved   unsafe.Pointer
}

func (obj *innerFabricServiceHealthStateChunkList) toGoStruct() []FabricServiceHealthStateChunk {
	var dst []FabricServiceHealthStateChunk
	{
		var innerlst []innerFabricServiceHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedServicePackageHealthStateChunk struct {
	ServiceManifestName string
	HealthState         FabricHealthState
}

func (obj *FabricDeployedServicePackageHealthStateChunk) toInnerStruct() *innerFabricDeployedServicePackageHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthStateChunk{}
	s_546, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_546

	dst.HealthState = obj.HealthState
	return &dst
}

type innerFabricDeployedServicePackageHealthStateChunk struct {
	ServiceManifestName *uint16
	HealthState         FabricHealthState
	Reserved            unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthStateChunk) toGoStruct() *FabricDeployedServicePackageHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthStateChunk{}
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.HealthState = obj.HealthState
	return &dst
}

type FabricDeployedServicePackageHealthStateChunkEx1 struct {
	ServicePackageActivationId string
}

func (obj *FabricDeployedServicePackageHealthStateChunkEx1) toInnerStruct() *innerFabricDeployedServicePackageHealthStateChunkEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedServicePackageHealthStateChunkEx1{}
	s_547, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_547

	return &dst
}

type innerFabricDeployedServicePackageHealthStateChunkEx1 struct {
	ServicePackageActivationId *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthStateChunkEx1) toGoStruct() *FabricDeployedServicePackageHealthStateChunkEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedServicePackageHealthStateChunkEx1{}
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	return &dst
}

type innerFabricDeployedServicePackageHealthStateChunkList struct {
	Count      uint32
	Items      *innerFabricDeployedServicePackageHealthStateChunk
	TotalCount uint32
	Reserved   unsafe.Pointer
}

func (obj *innerFabricDeployedServicePackageHealthStateChunkList) toGoStruct() []FabricDeployedServicePackageHealthStateChunk {
	var dst []FabricDeployedServicePackageHealthStateChunk
	{
		var innerlst []innerFabricDeployedServicePackageHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedServicePackageHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedApplicationHealthStateChunk struct {
	NodeName                                string
	HealthState                             FabricHealthState
	DeployedServicePackageHealthStateChunks []FabricDeployedServicePackageHealthStateChunk
}

func (obj *FabricDeployedApplicationHealthStateChunk) toInnerStruct() *innerFabricDeployedApplicationHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedApplicationHealthStateChunk{}
	s_548, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_548

	dst.HealthState = obj.HealthState
	lst_549 := &innerFabricDeployedServicePackageHealthStateChunkList{}
	{

		var tmp []innerFabricDeployedServicePackageHealthStateChunk

		for _, item := range obj.DeployedServicePackageHealthStateChunks {
			var tmpitem innerFabricDeployedServicePackageHealthStateChunk

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_549.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_549.Items = &tmp[0]
		}

	}
	dst.DeployedServicePackageHealthStateChunks = lst_549
	return &dst
}

type innerFabricDeployedApplicationHealthStateChunk struct {
	NodeName                                *uint16
	HealthState                             FabricHealthState
	DeployedServicePackageHealthStateChunks *innerFabricDeployedServicePackageHealthStateChunkList
	Reserved                                unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthStateChunk) toGoStruct() *FabricDeployedApplicationHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedApplicationHealthStateChunk{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.HealthState = obj.HealthState
	{
		var innerlst []innerFabricDeployedServicePackageHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.DeployedServicePackageHealthStateChunks.Items), int(obj.DeployedServicePackageHealthStateChunks.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedServicePackageHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst.DeployedServicePackageHealthStateChunks = append(dst.DeployedServicePackageHealthStateChunks, tmpitem)
		}

	}
	return &dst
}

type innerFabricDeployedApplicationHealthStateChunkList struct {
	Count      uint32
	Items      *innerFabricDeployedApplicationHealthStateChunk
	TotalCount uint32
	Reserved   unsafe.Pointer
}

func (obj *innerFabricDeployedApplicationHealthStateChunkList) toGoStruct() []FabricDeployedApplicationHealthStateChunk {
	var dst []FabricDeployedApplicationHealthStateChunk
	{
		var innerlst []innerFabricDeployedApplicationHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedApplicationHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricApplicationHealthStateChunk struct {
	ApplicationName                      string
	HealthState                          FabricHealthState
	ServiceHealthStateChunks             []FabricServiceHealthStateChunk
	DeployedApplicationHealthStateChunks []FabricDeployedApplicationHealthStateChunk
}

func (obj *FabricApplicationHealthStateChunk) toInnerStruct() *innerFabricApplicationHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealthStateChunk{}
	s_550, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_550

	dst.HealthState = obj.HealthState
	lst_551 := &innerFabricServiceHealthStateChunkList{}
	{

		var tmp []innerFabricServiceHealthStateChunk

		for _, item := range obj.ServiceHealthStateChunks {
			var tmpitem innerFabricServiceHealthStateChunk

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_551.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_551.Items = &tmp[0]
		}

	}
	dst.ServiceHealthStateChunks = lst_551
	lst_552 := &innerFabricDeployedApplicationHealthStateChunkList{}
	{

		var tmp []innerFabricDeployedApplicationHealthStateChunk

		for _, item := range obj.DeployedApplicationHealthStateChunks {
			var tmpitem innerFabricDeployedApplicationHealthStateChunk

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_552.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_552.Items = &tmp[0]
		}

	}
	dst.DeployedApplicationHealthStateChunks = lst_552
	return &dst
}

type innerFabricApplicationHealthStateChunk struct {
	ApplicationName                      *uint16
	HealthState                          FabricHealthState
	ServiceHealthStateChunks             *innerFabricServiceHealthStateChunkList
	DeployedApplicationHealthStateChunks *innerFabricDeployedApplicationHealthStateChunkList
	Reserved                             unsafe.Pointer
}

func (obj *innerFabricApplicationHealthStateChunk) toGoStruct() *FabricApplicationHealthStateChunk {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealthStateChunk{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.HealthState = obj.HealthState
	{
		var innerlst []innerFabricServiceHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ServiceHealthStateChunks.Items), int(obj.ServiceHealthStateChunks.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst.ServiceHealthStateChunks = append(dst.ServiceHealthStateChunks, tmpitem)
		}

	}
	{
		var innerlst []innerFabricDeployedApplicationHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.DeployedApplicationHealthStateChunks.Items), int(obj.DeployedApplicationHealthStateChunks.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedApplicationHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst.DeployedApplicationHealthStateChunks = append(dst.DeployedApplicationHealthStateChunks, tmpitem)
		}

	}
	return &dst
}

type FabricApplicationHealthStateChunkEx1 struct {
	ApplicationTypeName string
}

func (obj *FabricApplicationHealthStateChunkEx1) toInnerStruct() *innerFabricApplicationHealthStateChunkEx1 {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationHealthStateChunkEx1{}
	s_553, _ := windows.UTF16PtrFromString(obj.ApplicationTypeName)
	dst.ApplicationTypeName = s_553

	return &dst
}

type innerFabricApplicationHealthStateChunkEx1 struct {
	ApplicationTypeName *uint16
	Reserved            unsafe.Pointer
}

func (obj *innerFabricApplicationHealthStateChunkEx1) toGoStruct() *FabricApplicationHealthStateChunkEx1 {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationHealthStateChunkEx1{}
	dst.ApplicationTypeName = windows.UTF16PtrToString(obj.ApplicationTypeName)
	return &dst
}

type innerFabricApplicationHealthStateChunkList struct {
	Count      uint32
	Items      *innerFabricApplicationHealthStateChunk
	TotalCount uint32
	Reserved   unsafe.Pointer
}

func (obj *innerFabricApplicationHealthStateChunkList) toGoStruct() []FabricApplicationHealthStateChunk {
	var dst []FabricApplicationHealthStateChunk
	{
		var innerlst []innerFabricApplicationHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricClusterHealthChunk struct {
	HealthState                  FabricHealthState
	NodeHealthStateChunks        []FabricNodeHealthStateChunk
	ApplicationHealthStateChunks []FabricApplicationHealthStateChunk
}

func (obj *FabricClusterHealthChunk) toInnerStruct() *innerFabricClusterHealthChunk {
	if obj == nil {
		return nil
	}
	dst := innerFabricClusterHealthChunk{}
	dst.HealthState = obj.HealthState
	lst_554 := &innerFabricNodeHealthStateChunkList{}
	{

		var tmp []innerFabricNodeHealthStateChunk

		for _, item := range obj.NodeHealthStateChunks {
			var tmpitem innerFabricNodeHealthStateChunk

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_554.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_554.Items = &tmp[0]
		}

	}
	dst.NodeHealthStateChunks = lst_554
	lst_555 := &innerFabricApplicationHealthStateChunkList{}
	{

		var tmp []innerFabricApplicationHealthStateChunk

		for _, item := range obj.ApplicationHealthStateChunks {
			var tmpitem innerFabricApplicationHealthStateChunk

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_555.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_555.Items = &tmp[0]
		}

	}
	dst.ApplicationHealthStateChunks = lst_555
	return &dst
}

type innerFabricClusterHealthChunk struct {
	HealthState                  FabricHealthState
	NodeHealthStateChunks        *innerFabricNodeHealthStateChunkList
	ApplicationHealthStateChunks *innerFabricApplicationHealthStateChunkList
	Reserved                     unsafe.Pointer
}

func (obj *innerFabricClusterHealthChunk) toGoStruct() *FabricClusterHealthChunk {
	if obj == nil {
		return nil
	}
	dst := FabricClusterHealthChunk{}
	dst.HealthState = obj.HealthState
	{
		var innerlst []innerFabricNodeHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.NodeHealthStateChunks.Items), int(obj.NodeHealthStateChunks.Count))

		for _, item := range innerlst {
			var tmpitem FabricNodeHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst.NodeHealthStateChunks = append(dst.NodeHealthStateChunks, tmpitem)
		}

	}
	{
		var innerlst []innerFabricApplicationHealthStateChunk
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationHealthStateChunks.Items), int(obj.ApplicationHealthStateChunks.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationHealthStateChunk

			tmpitem = *item.toGoStruct()

			dst.ApplicationHealthStateChunks = append(dst.ApplicationHealthStateChunks, tmpitem)
		}

	}
	return &dst
}

type FabricRollingUpgradePolicyDescriptionEx3 struct {
	ApplicationHealthPolicyMap map[string]FabricApplicationHealthPolicy
}

func (obj *FabricRollingUpgradePolicyDescriptionEx3) toInnerStruct() *innerFabricRollingUpgradePolicyDescriptionEx3 {
	if obj == nil {
		return nil
	}
	dst := innerFabricRollingUpgradePolicyDescriptionEx3{}
	{
		mapobj := &innerFabricApplicationHealthPolicyMap{}

		var tmp []innerFabricApplicationHealthPolicyMapItem

		for k, v := range obj.ApplicationHealthPolicyMap {
			kv := innerFabricApplicationHealthPolicyMapItem{}

			s_557, _ := windows.UTF16PtrFromString(k)
			kv.ApplicationName = s_557

			kv.HealthPolicy = v.toInnerStruct()

			tmp = append(tmp, kv)
		}

		mapobj.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			mapobj.Items = &tmp[0]
		}

		dst.ApplicationHealthPolicyMap = mapobj
	}
	return &dst
}

type innerFabricRollingUpgradePolicyDescriptionEx3 struct {
	ApplicationHealthPolicyMap *innerFabricApplicationHealthPolicyMap
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricRollingUpgradePolicyDescriptionEx3) toGoStruct() *FabricRollingUpgradePolicyDescriptionEx3 {
	if obj == nil {
		return nil
	}
	dst := FabricRollingUpgradePolicyDescriptionEx3{}
	{
		var mapvar = make(map[string]FabricApplicationHealthPolicy)

		var innerlst []innerFabricApplicationHealthPolicyMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationHealthPolicyMap.Items), int(obj.ApplicationHealthPolicyMap.Count))

		for _, kv := range innerlst {
			var k string
			var v *FabricApplicationHealthPolicy

			k = windows.UTF16PtrToString(kv.ApplicationName)
			v = kv.HealthPolicy.toGoStruct()
			mapvar[k] = *v

		}

		dst.ApplicationHealthPolicyMap = mapvar
	}
	return &dst
}

type FabricEventContextMapItem struct {
	Key   string
	Value string
}

func (obj *FabricEventContextMapItem) toInnerStruct() *innerFabricEventContextMapItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricEventContextMapItem{}
	s_559, _ := windows.UTF16PtrFromString(obj.Key)
	dst.Key = s_559

	s_560, _ := windows.UTF16PtrFromString(obj.Value)
	dst.Value = s_560

	return &dst
}

type innerFabricEventContextMapItem struct {
	Key   *uint16
	Value *uint16
}

func (obj *innerFabricEventContextMapItem) toGoStruct() *FabricEventContextMapItem {
	if obj == nil {
		return nil
	}
	dst := FabricEventContextMapItem{}
	dst.Key = windows.UTF16PtrToString(obj.Key)
	dst.Value = windows.UTF16PtrToString(obj.Value)
	return &dst
}

type innerFabricEventContextMap struct {
	Count uint32
	Items *innerFabricEventContextMapItem
}

func (obj *innerFabricEventContextMap) toGoStruct() map[string]string {
	var dst = make(map[string]string)
	{
		var mapvar = make(map[string]string)

		var innerlst []innerFabricEventContextMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, kv := range innerlst {
			var k string
			var v string

			k = windows.UTF16PtrToString(kv.Key)
			v = windows.UTF16PtrToString(kv.Value)
			mapvar[k] = v

		}

		dst = mapvar
	}
	return dst
}

type FabricChaosParameters struct {
	MaxClusterStabilizationTimeoutInSeconds uint32
	MaxConcurrentFaults                     uint32
	EnableMoveReplicaFaults                 bool
	TimeToRunInSeconds                      uint64
	WaitTimeBetweenIterationsInSeconds      uint32
	WaitTimeBetweenFaultsInSeconds          uint32
	Context                                 map[string]string
}

func (obj *FabricChaosParameters) toInnerStruct() *innerFabricChaosParameters {
	if obj == nil {
		return nil
	}
	dst := innerFabricChaosParameters{}
	dst.MaxClusterStabilizationTimeoutInSeconds = obj.MaxClusterStabilizationTimeoutInSeconds
	dst.MaxConcurrentFaults = obj.MaxConcurrentFaults
	dst.EnableMoveReplicaFaults = obj.EnableMoveReplicaFaults
	dst.TimeToRunInSeconds = obj.TimeToRunInSeconds
	dst.WaitTimeBetweenIterationsInSeconds = obj.WaitTimeBetweenIterationsInSeconds
	dst.WaitTimeBetweenFaultsInSeconds = obj.WaitTimeBetweenFaultsInSeconds
	{
		mapobj := &innerFabricEventContextMap{}

		var tmp []innerFabricEventContextMapItem

		for k, v := range obj.Context {
			kv := innerFabricEventContextMapItem{}

			s_563, _ := windows.UTF16PtrFromString(k)
			kv.Key = s_563

			s_564, _ := windows.UTF16PtrFromString(v)
			kv.Value = s_564

			tmp = append(tmp, kv)
		}

		mapobj.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			mapobj.Items = &tmp[0]
		}

		dst.Context = mapobj
	}
	return &dst
}

type innerFabricChaosParameters struct {
	MaxClusterStabilizationTimeoutInSeconds uint32
	MaxConcurrentFaults                     uint32
	EnableMoveReplicaFaults                 bool
	TimeToRunInSeconds                      uint64
	WaitTimeBetweenIterationsInSeconds      uint32
	WaitTimeBetweenFaultsInSeconds          uint32
	Context                                 *innerFabricEventContextMap
	Reserved                                unsafe.Pointer
}

func (obj *innerFabricChaosParameters) toGoStruct() *FabricChaosParameters {
	if obj == nil {
		return nil
	}
	dst := FabricChaosParameters{}
	dst.MaxClusterStabilizationTimeoutInSeconds = obj.MaxClusterStabilizationTimeoutInSeconds
	dst.MaxConcurrentFaults = obj.MaxConcurrentFaults
	dst.EnableMoveReplicaFaults = obj.EnableMoveReplicaFaults
	dst.TimeToRunInSeconds = obj.TimeToRunInSeconds
	dst.WaitTimeBetweenIterationsInSeconds = obj.WaitTimeBetweenIterationsInSeconds
	dst.WaitTimeBetweenFaultsInSeconds = obj.WaitTimeBetweenFaultsInSeconds
	{
		var mapvar = make(map[string]string)

		var innerlst []innerFabricEventContextMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Context.Items), int(obj.Context.Count))

		for _, kv := range innerlst {
			var k string
			var v string

			k = windows.UTF16PtrToString(kv.Key)
			v = windows.UTF16PtrToString(kv.Value)
			mapvar[k] = v

		}

		dst.Context = mapvar
	}
	return &dst
}

type FabricChaosParametersEx1 struct {
	ClusterHealthPolicy *FabricClusterHealthPolicy
}
type innerFabricChaosParametersEx1 struct {
	FabricChaosParametersEx1
	Reserved unsafe.Pointer
}

func (obj *innerFabricChaosParametersEx1) toGoStruct() *FabricChaosParametersEx1 {
	if obj == nil {
		return nil
	}
	return &obj.FabricChaosParametersEx1
}
func (obj *FabricChaosParametersEx1) toInnerStruct() *innerFabricChaosParametersEx1 {
	if obj == nil {
		return nil
	}
	return &innerFabricChaosParametersEx1{*obj, nil}
}

type FabricChaosTargetFilter struct {
	NodeTypeInclusionList    []string
	ApplicationInclusionList []string
}

func (obj *FabricChaosTargetFilter) toInnerStruct() *innerFabricChaosTargetFilter {
	if obj == nil {
		return nil
	}
	dst := innerFabricChaosTargetFilter{}
	lst_566 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range obj.NodeTypeInclusionList {
			var tmpitem *uint16

			s_567, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_567

			tmp = append(tmp, tmpitem)
		}

		lst_566.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_566.Items = &tmp[0]
		}

	}
	dst.NodeTypeInclusionList = lst_566
	lst_568 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range obj.ApplicationInclusionList {
			var tmpitem *uint16

			s_569, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_569

			tmp = append(tmp, tmpitem)
		}

		lst_568.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_568.Items = &tmp[0]
		}

	}
	dst.ApplicationInclusionList = lst_568
	return &dst
}

type innerFabricChaosTargetFilter struct {
	NodeTypeInclusionList    *innerFabricStringList
	ApplicationInclusionList *innerFabricStringList
	Reserved                 unsafe.Pointer
}

func (obj *innerFabricChaosTargetFilter) toGoStruct() *FabricChaosTargetFilter {
	if obj == nil {
		return nil
	}
	dst := FabricChaosTargetFilter{}
	{
		var innerlst []*uint16
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.NodeTypeInclusionList.Items), int(obj.NodeTypeInclusionList.Count))

		for _, item := range innerlst {
			var tmpitem string

			tmpitem = windows.UTF16PtrToString(item)

			dst.NodeTypeInclusionList = append(dst.NodeTypeInclusionList, tmpitem)
		}

	}
	{
		var innerlst []*uint16
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ApplicationInclusionList.Items), int(obj.ApplicationInclusionList.Count))

		for _, item := range innerlst {
			var tmpitem string

			tmpitem = windows.UTF16PtrToString(item)

			dst.ApplicationInclusionList = append(dst.ApplicationInclusionList, tmpitem)
		}

	}
	return &dst
}

type FabricChaosParametersEx2 struct {
	ChaosTargetFilter *FabricChaosTargetFilter
}
type innerFabricChaosParametersEx2 struct {
	FabricChaosParametersEx2
	Reserved unsafe.Pointer
}

func (obj *innerFabricChaosParametersEx2) toGoStruct() *FabricChaosParametersEx2 {
	if obj == nil {
		return nil
	}
	return &obj.FabricChaosParametersEx2
}
func (obj *FabricChaosParametersEx2) toInnerStruct() *innerFabricChaosParametersEx2 {
	if obj == nil {
		return nil
	}
	return &innerFabricChaosParametersEx2{*obj, nil}
}

type FabricStartChaosDescription struct {
	ChaosParameters *FabricChaosParameters
}
type innerFabricStartChaosDescription struct {
	FabricStartChaosDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricStartChaosDescription) toGoStruct() *FabricStartChaosDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricStartChaosDescription
}
func (obj *FabricStartChaosDescription) toInnerStruct() *innerFabricStartChaosDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricStartChaosDescription{*obj, nil}
}

type FabricChaosEventsSegmentFilter struct {
	StartTimeUtc time.Time
	EndTimeUtc   time.Time
}

func (obj *FabricChaosEventsSegmentFilter) toInnerStruct() *innerFabricChaosEventsSegmentFilter {
	if obj == nil {
		return nil
	}
	dst := innerFabricChaosEventsSegmentFilter{}
	dst.StartTimeUtc = windows.NsecToFiletime(obj.StartTimeUtc.UnixNano())
	dst.EndTimeUtc = windows.NsecToFiletime(obj.EndTimeUtc.UnixNano())
	return &dst
}

type innerFabricChaosEventsSegmentFilter struct {
	StartTimeUtc windows.Filetime
	EndTimeUtc   windows.Filetime
	Reserved     unsafe.Pointer
}

func (obj *innerFabricChaosEventsSegmentFilter) toGoStruct() *FabricChaosEventsSegmentFilter {
	if obj == nil {
		return nil
	}
	dst := FabricChaosEventsSegmentFilter{}
	dst.StartTimeUtc = time.Unix(0, obj.StartTimeUtc.Nanoseconds())
	dst.EndTimeUtc = time.Unix(0, obj.EndTimeUtc.Nanoseconds())
	return &dst
}

type FabricChaosEventsSegmentDescription struct {
	Filter            *FabricChaosEventsSegmentFilter
	PagingDescription *FabricQueryPagingDescription
}
type innerFabricChaosEventsSegmentDescription struct {
	FabricChaosEventsSegmentDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricChaosEventsSegmentDescription) toGoStruct() *FabricChaosEventsSegmentDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricChaosEventsSegmentDescription
}
func (obj *FabricChaosEventsSegmentDescription) toInnerStruct() *innerFabricChaosEventsSegmentDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricChaosEventsSegmentDescription{*obj, nil}
}

type FabricChaosReportFilter struct {
	StartTimeUtc time.Time
	EndTimeUtc   time.Time
}

func (obj *FabricChaosReportFilter) toInnerStruct() *innerFabricChaosReportFilter {
	if obj == nil {
		return nil
	}
	dst := innerFabricChaosReportFilter{}
	dst.StartTimeUtc = windows.NsecToFiletime(obj.StartTimeUtc.UnixNano())
	dst.EndTimeUtc = windows.NsecToFiletime(obj.EndTimeUtc.UnixNano())
	return &dst
}

type innerFabricChaosReportFilter struct {
	StartTimeUtc windows.Filetime
	EndTimeUtc   windows.Filetime
	Reserved     unsafe.Pointer
}

func (obj *innerFabricChaosReportFilter) toGoStruct() *FabricChaosReportFilter {
	if obj == nil {
		return nil
	}
	dst := FabricChaosReportFilter{}
	dst.StartTimeUtc = time.Unix(0, obj.StartTimeUtc.Nanoseconds())
	dst.EndTimeUtc = time.Unix(0, obj.EndTimeUtc.Nanoseconds())
	return &dst
}

type FabricGetChaosReportDescription struct {
	Filter            *FabricChaosReportFilter
	ContinuationToken string
}

func (obj *FabricGetChaosReportDescription) toInnerStruct() *innerFabricGetChaosReportDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricGetChaosReportDescription{}
	dst.Filter = obj.Filter.toInnerStruct()
	s_570, _ := windows.UTF16PtrFromString(obj.ContinuationToken)
	dst.ContinuationToken = s_570

	return &dst
}

type innerFabricGetChaosReportDescription struct {
	Filter            *innerFabricChaosReportFilter
	ContinuationToken *uint16
	Reserved          unsafe.Pointer
}

func (obj *innerFabricGetChaosReportDescription) toGoStruct() *FabricGetChaosReportDescription {
	if obj == nil {
		return nil
	}
	dst := FabricGetChaosReportDescription{}
	dst.Filter = obj.Filter.toGoStruct()
	dst.ContinuationToken = windows.UTF16PtrToString(obj.ContinuationToken)
	return &dst
}

type FabricChaosEvent struct {
	Kind  FabricChaosEventKind
	Value interface{}
}
type innerFabricChaosEvent struct {
	FabricChaosEvent
}

func (obj *innerFabricChaosEvent) toGoStruct() *FabricChaosEvent {
	if obj == nil {
		return nil
	}
	return &obj.FabricChaosEvent
}
func (obj *FabricChaosEvent) toInnerStruct() *innerFabricChaosEvent {
	if obj == nil {
		return nil
	}
	return &innerFabricChaosEvent{*obj}
}

type FabricStartedEvent struct {
	TimeStampUtc    time.Time
	ChaosParameters *FabricChaosParameters
}

func (obj *FabricStartedEvent) toInnerStruct() *innerFabricStartedEvent {
	if obj == nil {
		return nil
	}
	dst := innerFabricStartedEvent{}
	dst.TimeStampUtc = windows.NsecToFiletime(obj.TimeStampUtc.UnixNano())
	dst.ChaosParameters = obj.ChaosParameters.toInnerStruct()
	return &dst
}

type innerFabricStartedEvent struct {
	TimeStampUtc    windows.Filetime
	ChaosParameters *innerFabricChaosParameters
	Reserved        unsafe.Pointer
}

func (obj *innerFabricStartedEvent) toGoStruct() *FabricStartedEvent {
	if obj == nil {
		return nil
	}
	dst := FabricStartedEvent{}
	dst.TimeStampUtc = time.Unix(0, obj.TimeStampUtc.Nanoseconds())
	dst.ChaosParameters = obj.ChaosParameters.toGoStruct()
	return &dst
}

type FabricExecutingFaultsEvent struct {
	TimeStampUtc time.Time
	Faults       []string
}

func (obj *FabricExecutingFaultsEvent) toInnerStruct() *innerFabricExecutingFaultsEvent {
	if obj == nil {
		return nil
	}
	dst := innerFabricExecutingFaultsEvent{}
	dst.TimeStampUtc = windows.NsecToFiletime(obj.TimeStampUtc.UnixNano())
	lst_571 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range obj.Faults {
			var tmpitem *uint16

			s_572, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_572

			tmp = append(tmp, tmpitem)
		}

		lst_571.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_571.Items = &tmp[0]
		}

	}
	dst.Faults = lst_571
	return &dst
}

type innerFabricExecutingFaultsEvent struct {
	TimeStampUtc windows.Filetime
	Faults       *innerFabricStringList
	Reserved     unsafe.Pointer
}

func (obj *innerFabricExecutingFaultsEvent) toGoStruct() *FabricExecutingFaultsEvent {
	if obj == nil {
		return nil
	}
	dst := FabricExecutingFaultsEvent{}
	dst.TimeStampUtc = time.Unix(0, obj.TimeStampUtc.Nanoseconds())
	{
		var innerlst []*uint16
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Faults.Items), int(obj.Faults.Count))

		for _, item := range innerlst {
			var tmpitem string

			tmpitem = windows.UTF16PtrToString(item)

			dst.Faults = append(dst.Faults, tmpitem)
		}

	}
	return &dst
}

type FabricWaitingEvent struct {
	TimeStampUtc time.Time
	Reason       string
}

func (obj *FabricWaitingEvent) toInnerStruct() *innerFabricWaitingEvent {
	if obj == nil {
		return nil
	}
	dst := innerFabricWaitingEvent{}
	dst.TimeStampUtc = windows.NsecToFiletime(obj.TimeStampUtc.UnixNano())
	s_573, _ := windows.UTF16PtrFromString(obj.Reason)
	dst.Reason = s_573

	return &dst
}

type innerFabricWaitingEvent struct {
	TimeStampUtc windows.Filetime
	Reason       *uint16
	Reserved     unsafe.Pointer
}

func (obj *innerFabricWaitingEvent) toGoStruct() *FabricWaitingEvent {
	if obj == nil {
		return nil
	}
	dst := FabricWaitingEvent{}
	dst.TimeStampUtc = time.Unix(0, obj.TimeStampUtc.Nanoseconds())
	dst.Reason = windows.UTF16PtrToString(obj.Reason)
	return &dst
}

type FabricValidationFailedEvent struct {
	TimeStampUtc time.Time
	Reason       string
}

func (obj *FabricValidationFailedEvent) toInnerStruct() *innerFabricValidationFailedEvent {
	if obj == nil {
		return nil
	}
	dst := innerFabricValidationFailedEvent{}
	dst.TimeStampUtc = windows.NsecToFiletime(obj.TimeStampUtc.UnixNano())
	s_574, _ := windows.UTF16PtrFromString(obj.Reason)
	dst.Reason = s_574

	return &dst
}

type innerFabricValidationFailedEvent struct {
	TimeStampUtc windows.Filetime
	Reason       *uint16
	Reserved     unsafe.Pointer
}

func (obj *innerFabricValidationFailedEvent) toGoStruct() *FabricValidationFailedEvent {
	if obj == nil {
		return nil
	}
	dst := FabricValidationFailedEvent{}
	dst.TimeStampUtc = time.Unix(0, obj.TimeStampUtc.Nanoseconds())
	dst.Reason = windows.UTF16PtrToString(obj.Reason)
	return &dst
}

type FabricTestErrorEvent struct {
	TimeStampUtc time.Time
	Reason       string
}

func (obj *FabricTestErrorEvent) toInnerStruct() *innerFabricTestErrorEvent {
	if obj == nil {
		return nil
	}
	dst := innerFabricTestErrorEvent{}
	dst.TimeStampUtc = windows.NsecToFiletime(obj.TimeStampUtc.UnixNano())
	s_575, _ := windows.UTF16PtrFromString(obj.Reason)
	dst.Reason = s_575

	return &dst
}

type innerFabricTestErrorEvent struct {
	TimeStampUtc windows.Filetime
	Reason       *uint16
	Reserved     unsafe.Pointer
}

func (obj *innerFabricTestErrorEvent) toGoStruct() *FabricTestErrorEvent {
	if obj == nil {
		return nil
	}
	dst := FabricTestErrorEvent{}
	dst.TimeStampUtc = time.Unix(0, obj.TimeStampUtc.Nanoseconds())
	dst.Reason = windows.UTF16PtrToString(obj.Reason)
	return &dst
}

type FabricStoppedEvent struct {
	TimeStampUtc time.Time
	Reason       string
}

func (obj *FabricStoppedEvent) toInnerStruct() *innerFabricStoppedEvent {
	if obj == nil {
		return nil
	}
	dst := innerFabricStoppedEvent{}
	dst.TimeStampUtc = windows.NsecToFiletime(obj.TimeStampUtc.UnixNano())
	s_576, _ := windows.UTF16PtrFromString(obj.Reason)
	dst.Reason = s_576

	return &dst
}

type innerFabricStoppedEvent struct {
	TimeStampUtc windows.Filetime
	Reason       *uint16
	Reserved     unsafe.Pointer
}

func (obj *innerFabricStoppedEvent) toGoStruct() *FabricStoppedEvent {
	if obj == nil {
		return nil
	}
	dst := FabricStoppedEvent{}
	dst.TimeStampUtc = time.Unix(0, obj.TimeStampUtc.Nanoseconds())
	dst.Reason = windows.UTF16PtrToString(obj.Reason)
	return &dst
}

type innerFabricChaosEventList struct {
	Count uint32
	Items *innerFabricChaosEvent
}

func (obj *innerFabricChaosEventList) toGoStruct() []FabricChaosEvent {
	var dst []FabricChaosEvent
	{
		var innerlst []innerFabricChaosEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricChaosEvent

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricChaosReport struct {
	ChaosParameters   *FabricChaosParameters
	Status            FabricChaosStatus
	ContinuationToken string
	History           []FabricChaosEvent
}

func (obj *FabricChaosReport) toInnerStruct() *innerFabricChaosReport {
	if obj == nil {
		return nil
	}
	dst := innerFabricChaosReport{}
	dst.ChaosParameters = obj.ChaosParameters.toInnerStruct()
	dst.Status = obj.Status
	s_577, _ := windows.UTF16PtrFromString(obj.ContinuationToken)
	dst.ContinuationToken = s_577

	lst_578 := &innerFabricChaosEventList{}
	{

		var tmp []innerFabricChaosEvent

		for _, item := range obj.History {
			var tmpitem innerFabricChaosEvent

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_578.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_578.Items = &tmp[0]
		}

	}
	dst.History = lst_578
	return &dst
}

type innerFabricChaosReport struct {
	ChaosParameters   *innerFabricChaosParameters
	Status            FabricChaosStatus
	ContinuationToken *uint16
	History           *innerFabricChaosEventList
	Reserved          unsafe.Pointer
}

func (obj *innerFabricChaosReport) toGoStruct() *FabricChaosReport {
	if obj == nil {
		return nil
	}
	dst := FabricChaosReport{}
	dst.ChaosParameters = obj.ChaosParameters.toGoStruct()
	dst.Status = obj.Status
	dst.ContinuationToken = windows.UTF16PtrToString(obj.ContinuationToken)
	{
		var innerlst []innerFabricChaosEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.History.Items), int(obj.History.Count))

		for _, item := range innerlst {
			var tmpitem FabricChaosEvent

			tmpitem = *item.toGoStruct()

			dst.History = append(dst.History, tmpitem)
		}

	}
	return &dst
}

type FabricChaosEventsSegment struct {
	ContinuationToken string
	History           []FabricChaosEvent
}

func (obj *FabricChaosEventsSegment) toInnerStruct() *innerFabricChaosEventsSegment {
	if obj == nil {
		return nil
	}
	dst := innerFabricChaosEventsSegment{}
	s_579, _ := windows.UTF16PtrFromString(obj.ContinuationToken)
	dst.ContinuationToken = s_579

	lst_580 := &innerFabricChaosEventList{}
	{

		var tmp []innerFabricChaosEvent

		for _, item := range obj.History {
			var tmpitem innerFabricChaosEvent

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_580.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_580.Items = &tmp[0]
		}

	}
	dst.History = lst_580
	return &dst
}

type innerFabricChaosEventsSegment struct {
	ContinuationToken *uint16
	History           *innerFabricChaosEventList
	Reserved          unsafe.Pointer
}

func (obj *innerFabricChaosEventsSegment) toGoStruct() *FabricChaosEventsSegment {
	if obj == nil {
		return nil
	}
	dst := FabricChaosEventsSegment{}
	dst.ContinuationToken = windows.UTF16PtrToString(obj.ContinuationToken)
	{
		var innerlst []innerFabricChaosEvent
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.History.Items), int(obj.History.Count))

		for _, item := range innerlst {
			var tmpitem FabricChaosEvent

			tmpitem = *item.toGoStruct()

			dst.History = append(dst.History, tmpitem)
		}

	}
	return &dst
}

type FabricChaosDescription struct {
	ChaosParameters *FabricChaosParameters
	Status          FabricChaosStatus
	ScheduleStatus  FabricChaosScheduleStatus
}
type innerFabricChaosDescription struct {
	FabricChaosDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricChaosDescription) toGoStruct() *FabricChaosDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricChaosDescription
}
func (obj *FabricChaosDescription) toInnerStruct() *innerFabricChaosDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricChaosDescription{*obj, nil}
}

type FabricChaosScheduleTimeUtc struct {
	Hour   uint32
	Minute uint32
}
type innerFabricChaosScheduleTimeUtc struct {
	FabricChaosScheduleTimeUtc
	Reserved unsafe.Pointer
}

func (obj *innerFabricChaosScheduleTimeUtc) toGoStruct() *FabricChaosScheduleTimeUtc {
	if obj == nil {
		return nil
	}
	return &obj.FabricChaosScheduleTimeUtc
}
func (obj *FabricChaosScheduleTimeUtc) toInnerStruct() *innerFabricChaosScheduleTimeUtc {
	if obj == nil {
		return nil
	}
	return &innerFabricChaosScheduleTimeUtc{*obj, nil}
}

type FabricChaosScheduleTimeRangeUtc struct {
	StartTime *FabricChaosScheduleTimeUtc
	EndTime   *FabricChaosScheduleTimeUtc
}
type innerFabricChaosScheduleTimeRangeUtc struct {
	FabricChaosScheduleTimeRangeUtc
	Reserved unsafe.Pointer
}

func (obj *innerFabricChaosScheduleTimeRangeUtc) toGoStruct() *FabricChaosScheduleTimeRangeUtc {
	if obj == nil {
		return nil
	}
	return &obj.FabricChaosScheduleTimeRangeUtc
}
func (obj *FabricChaosScheduleTimeRangeUtc) toInnerStruct() *innerFabricChaosScheduleTimeRangeUtc {
	if obj == nil {
		return nil
	}
	return &innerFabricChaosScheduleTimeRangeUtc{*obj, nil}
}

type innerFabricChaosScheduleTimeRangeUtcList struct {
	Count uint32
	Items *innerFabricChaosScheduleTimeRangeUtc
}

func (obj *innerFabricChaosScheduleTimeRangeUtcList) toGoStruct() []FabricChaosScheduleTimeRangeUtc {
	var dst []FabricChaosScheduleTimeRangeUtc
	{
		var innerlst []innerFabricChaosScheduleTimeRangeUtc
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricChaosScheduleTimeRangeUtc

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricChaosScheduleJobActiveDays struct {
	Sunday    bool
	Monday    bool
	Tuesday   bool
	Wednesday bool
	Thursday  bool
	Friday    bool
	Saturday  bool
}
type innerFabricChaosScheduleJobActiveDays struct {
	FabricChaosScheduleJobActiveDays
	Reserved unsafe.Pointer
}

func (obj *innerFabricChaosScheduleJobActiveDays) toGoStruct() *FabricChaosScheduleJobActiveDays {
	if obj == nil {
		return nil
	}
	return &obj.FabricChaosScheduleJobActiveDays
}
func (obj *FabricChaosScheduleJobActiveDays) toInnerStruct() *innerFabricChaosScheduleJobActiveDays {
	if obj == nil {
		return nil
	}
	return &innerFabricChaosScheduleJobActiveDays{*obj, nil}
}

type FabricChaosScheduleJob struct {
	ChaosParameters string
	Days            *FabricChaosScheduleJobActiveDays
	Times           []FabricChaosScheduleTimeRangeUtc
}

func (obj *FabricChaosScheduleJob) toInnerStruct() *innerFabricChaosScheduleJob {
	if obj == nil {
		return nil
	}
	dst := innerFabricChaosScheduleJob{}
	s_581, _ := windows.UTF16PtrFromString(obj.ChaosParameters)
	dst.ChaosParameters = s_581

	dst.Days = obj.Days.toInnerStruct()
	lst_582 := &innerFabricChaosScheduleTimeRangeUtcList{}
	{

		var tmp []innerFabricChaosScheduleTimeRangeUtc

		for _, item := range obj.Times {
			var tmpitem innerFabricChaosScheduleTimeRangeUtc

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_582.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_582.Items = &tmp[0]
		}

	}
	dst.Times = lst_582
	return &dst
}

type innerFabricChaosScheduleJob struct {
	ChaosParameters *uint16
	Days            *innerFabricChaosScheduleJobActiveDays
	Times           *innerFabricChaosScheduleTimeRangeUtcList
	Reserved        unsafe.Pointer
}

func (obj *innerFabricChaosScheduleJob) toGoStruct() *FabricChaosScheduleJob {
	if obj == nil {
		return nil
	}
	dst := FabricChaosScheduleJob{}
	dst.ChaosParameters = windows.UTF16PtrToString(obj.ChaosParameters)
	dst.Days = obj.Days.toGoStruct()
	{
		var innerlst []innerFabricChaosScheduleTimeRangeUtc
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Times.Items), int(obj.Times.Count))

		for _, item := range innerlst {
			var tmpitem FabricChaosScheduleTimeRangeUtc

			tmpitem = *item.toGoStruct()

			dst.Times = append(dst.Times, tmpitem)
		}

	}
	return &dst
}

type innerFabricChaosScheduleJobList struct {
	Count uint32
	Items *innerFabricChaosScheduleJob
}

func (obj *innerFabricChaosScheduleJobList) toGoStruct() []FabricChaosScheduleJob {
	var dst []FabricChaosScheduleJob
	{
		var innerlst []innerFabricChaosScheduleJob
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricChaosScheduleJob

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricChaosScheduleChaosParametersMapItem struct {
	Name       string
	Parameters *FabricChaosParameters
}

func (obj *FabricChaosScheduleChaosParametersMapItem) toInnerStruct() *innerFabricChaosScheduleChaosParametersMapItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricChaosScheduleChaosParametersMapItem{}
	s_583, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_583

	dst.Parameters = obj.Parameters.toInnerStruct()
	return &dst
}

type innerFabricChaosScheduleChaosParametersMapItem struct {
	Name       *uint16
	Parameters *innerFabricChaosParameters
}

func (obj *innerFabricChaosScheduleChaosParametersMapItem) toGoStruct() *FabricChaosScheduleChaosParametersMapItem {
	if obj == nil {
		return nil
	}
	dst := FabricChaosScheduleChaosParametersMapItem{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Parameters = obj.Parameters.toGoStruct()
	return &dst
}

type innerFabricChaosScheduleChaosParametersMap struct {
	Count uint32
	Items *innerFabricChaosScheduleChaosParametersMapItem
}

func (obj *innerFabricChaosScheduleChaosParametersMap) toGoStruct() map[string]FabricChaosParameters {
	var dst = make(map[string]FabricChaosParameters)
	{
		var mapvar = make(map[string]FabricChaosParameters)

		var innerlst []innerFabricChaosScheduleChaosParametersMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, kv := range innerlst {
			var k string
			var v *FabricChaosParameters

			k = windows.UTF16PtrToString(kv.Name)
			v = kv.Parameters.toGoStruct()
			mapvar[k] = *v

		}

		dst = mapvar
	}
	return dst
}

type FabricChaosSchedule struct {
	StartDate          time.Time
	ExpiryDate         time.Time
	ChaosParametersMap map[string]FabricChaosParameters
	Jobs               []FabricChaosScheduleJob
}

func (obj *FabricChaosSchedule) toInnerStruct() *innerFabricChaosSchedule {
	if obj == nil {
		return nil
	}
	dst := innerFabricChaosSchedule{}
	dst.StartDate = windows.NsecToFiletime(obj.StartDate.UnixNano())
	dst.ExpiryDate = windows.NsecToFiletime(obj.ExpiryDate.UnixNano())
	{
		mapobj := &innerFabricChaosScheduleChaosParametersMap{}

		var tmp []innerFabricChaosScheduleChaosParametersMapItem

		for k, v := range obj.ChaosParametersMap {
			kv := innerFabricChaosScheduleChaosParametersMapItem{}

			s_586, _ := windows.UTF16PtrFromString(k)
			kv.Name = s_586

			kv.Parameters = v.toInnerStruct()

			tmp = append(tmp, kv)
		}

		mapobj.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			mapobj.Items = &tmp[0]
		}

		dst.ChaosParametersMap = mapobj
	}
	lst_587 := &innerFabricChaosScheduleJobList{}
	{

		var tmp []innerFabricChaosScheduleJob

		for _, item := range obj.Jobs {
			var tmpitem innerFabricChaosScheduleJob

			tmpitem = *item.toInnerStruct()

			tmp = append(tmp, tmpitem)
		}

		lst_587.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_587.Items = &tmp[0]
		}

	}
	dst.Jobs = lst_587
	return &dst
}

type innerFabricChaosSchedule struct {
	StartDate          windows.Filetime
	ExpiryDate         windows.Filetime
	ChaosParametersMap *innerFabricChaosScheduleChaosParametersMap
	Jobs               *innerFabricChaosScheduleJobList
	Reserved           unsafe.Pointer
}

func (obj *innerFabricChaosSchedule) toGoStruct() *FabricChaosSchedule {
	if obj == nil {
		return nil
	}
	dst := FabricChaosSchedule{}
	dst.StartDate = time.Unix(0, obj.StartDate.Nanoseconds())
	dst.ExpiryDate = time.Unix(0, obj.ExpiryDate.Nanoseconds())
	{
		var mapvar = make(map[string]FabricChaosParameters)

		var innerlst []innerFabricChaosScheduleChaosParametersMapItem

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.ChaosParametersMap.Items), int(obj.ChaosParametersMap.Count))

		for _, kv := range innerlst {
			var k string
			var v *FabricChaosParameters

			k = windows.UTF16PtrToString(kv.Name)
			v = kv.Parameters.toGoStruct()
			mapvar[k] = *v

		}

		dst.ChaosParametersMap = mapvar
	}
	{
		var innerlst []innerFabricChaosScheduleJob
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Jobs.Items), int(obj.Jobs.Count))

		for _, item := range innerlst {
			var tmpitem FabricChaosScheduleJob

			tmpitem = *item.toGoStruct()

			dst.Jobs = append(dst.Jobs, tmpitem)
		}

	}
	return &dst
}

type FabricChaosScheduleDescription struct {
	Version  uint32
	Schedule *FabricChaosSchedule
}
type innerFabricChaosScheduleDescription struct {
	FabricChaosScheduleDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricChaosScheduleDescription) toGoStruct() *FabricChaosScheduleDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricChaosScheduleDescription
}
func (obj *FabricChaosScheduleDescription) toInnerStruct() *innerFabricChaosScheduleDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricChaosScheduleDescription{*obj, nil}
}

type FabricChaosServiceScheduleDescription struct {
	ChaosScheduleDescription *FabricChaosScheduleDescription
}
type innerFabricChaosServiceScheduleDescription struct {
	FabricChaosServiceScheduleDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricChaosServiceScheduleDescription) toGoStruct() *FabricChaosServiceScheduleDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricChaosServiceScheduleDescription
}
func (obj *FabricChaosServiceScheduleDescription) toInnerStruct() *innerFabricChaosServiceScheduleDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricChaosServiceScheduleDescription{*obj, nil}
}

type FabricSecret struct {
	Name        string
	Version     string
	Value       string
	Kind        string
	ContentType string
}

func (obj *FabricSecret) toInnerStruct() *innerFabricSecret {
	if obj == nil {
		return nil
	}
	dst := innerFabricSecret{}
	s_589, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_589

	s_590, _ := windows.UTF16PtrFromString(obj.Version)
	dst.Version = s_590

	s_591, _ := windows.UTF16PtrFromString(obj.Value)
	dst.Value = s_591

	s_592, _ := windows.UTF16PtrFromString(obj.Kind)
	dst.Kind = s_592

	s_593, _ := windows.UTF16PtrFromString(obj.ContentType)
	dst.ContentType = s_593

	return &dst
}

type innerFabricSecret struct {
	Name        *uint16
	Version     *uint16
	Value       *uint16
	Kind        *uint16
	ContentType *uint16
}

func (obj *innerFabricSecret) toGoStruct() *FabricSecret {
	if obj == nil {
		return nil
	}
	dst := FabricSecret{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Version = windows.UTF16PtrToString(obj.Version)
	dst.Value = windows.UTF16PtrToString(obj.Value)
	dst.Kind = windows.UTF16PtrToString(obj.Kind)
	dst.ContentType = windows.UTF16PtrToString(obj.ContentType)
	return &dst
}

type innerFabricSecretList struct {
	Count uint32
	Items *innerFabricSecret
}

func (obj *innerFabricSecretList) toGoStruct() []FabricSecret {
	var dst []FabricSecret
	{
		var innerlst []innerFabricSecret
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricSecret

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricSecretReference struct {
	Name    string
	Version string
}

func (obj *FabricSecretReference) toInnerStruct() *innerFabricSecretReference {
	if obj == nil {
		return nil
	}
	dst := innerFabricSecretReference{}
	s_594, _ := windows.UTF16PtrFromString(obj.Name)
	dst.Name = s_594

	s_595, _ := windows.UTF16PtrFromString(obj.Version)
	dst.Version = s_595

	return &dst
}

type innerFabricSecretReference struct {
	Name    *uint16
	Version *uint16
}

func (obj *innerFabricSecretReference) toGoStruct() *FabricSecretReference {
	if obj == nil {
		return nil
	}
	dst := FabricSecretReference{}
	dst.Name = windows.UTF16PtrToString(obj.Name)
	dst.Version = windows.UTF16PtrToString(obj.Version)
	return &dst
}

type innerFabricSecretReferenceList struct {
	Count uint32
	Items *innerFabricSecretReference
}

func (obj *innerFabricSecretReferenceList) toGoStruct() []FabricSecretReference {
	var dst []FabricSecretReference
	{
		var innerlst []innerFabricSecretReference
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricSecretReference

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricCodePackageEventType int32

const (
	FabricCodePackageEventTypeInvalid     FabricCodePackageEventType = 0x0000
	FabricCodePackageEventTypeStartFailed FabricCodePackageEventType = 0x0001
	FabricCodePackageEventTypeStarted     FabricCodePackageEventType = 0x0002
	FabricCodePackageEventTypeReady       FabricCodePackageEventType = 0x0003
	FabricCodePackageEventTypeHealth      FabricCodePackageEventType = 0x0004
	FabricCodePackageEventTypeStopped     FabricCodePackageEventType = 0x0005
	FabricCodePackageEventTypeTerminated  FabricCodePackageEventType = 0x0006
)

type FabricCodePackageEventDescription struct {
	CodePackageName   string
	IsSetupEntryPoint bool
	IsContainerHost   bool
	EventType         FabricCodePackageEventType
	TimeStampInTicks  int64
	SequenceNumber    int64
	Properties        map[string]string
}

func (obj *FabricCodePackageEventDescription) toInnerStruct() *innerFabricCodePackageEventDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricCodePackageEventDescription{}
	s_596, _ := windows.UTF16PtrFromString(obj.CodePackageName)
	dst.CodePackageName = s_596

	dst.IsSetupEntryPoint = obj.IsSetupEntryPoint
	dst.IsContainerHost = obj.IsContainerHost
	dst.EventType = obj.EventType
	dst.TimeStampInTicks = obj.TimeStampInTicks
	dst.SequenceNumber = obj.SequenceNumber
	{
		mapobj := &innerFabricStringMap{}

		var tmp []innerFabricApplicationParameter

		for k, v := range obj.Properties {
			kv := innerFabricApplicationParameter{}

			s_598, _ := windows.UTF16PtrFromString(k)
			kv.Name = s_598

			s_599, _ := windows.UTF16PtrFromString(v)
			kv.Value = s_599

			tmp = append(tmp, kv)
		}

		mapobj.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			mapobj.Items = &tmp[0]
		}

		dst.Properties = mapobj
	}
	return &dst
}

type innerFabricCodePackageEventDescription struct {
	CodePackageName   *uint16
	IsSetupEntryPoint bool
	IsContainerHost   bool
	EventType         FabricCodePackageEventType
	TimeStampInTicks  int64
	SequenceNumber    int64
	Properties        *innerFabricStringMap
	Reserved          unsafe.Pointer
}

func (obj *innerFabricCodePackageEventDescription) toGoStruct() *FabricCodePackageEventDescription {
	if obj == nil {
		return nil
	}
	dst := FabricCodePackageEventDescription{}
	dst.CodePackageName = windows.UTF16PtrToString(obj.CodePackageName)
	dst.IsSetupEntryPoint = obj.IsSetupEntryPoint
	dst.IsContainerHost = obj.IsContainerHost
	dst.EventType = obj.EventType
	dst.TimeStampInTicks = obj.TimeStampInTicks
	dst.SequenceNumber = obj.SequenceNumber
	{
		var mapvar = make(map[string]string)

		var innerlst []innerFabricApplicationParameter

		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Properties.Items), int(obj.Properties.Count))

		for _, kv := range innerlst {
			var k string
			var v string

			k = windows.UTF16PtrToString(kv.Name)
			v = windows.UTF16PtrToString(kv.Value)
			mapvar[k] = v

		}

		dst.Properties = mapvar
	}
	return &dst
}

type FabricNetworkDescription struct {
	NetworkType FabricNetworkType
	Value       interface{}
}
type innerFabricNetworkDescription struct {
	FabricNetworkDescription
}

func (obj *innerFabricNetworkDescription) toGoStruct() *FabricNetworkDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricNetworkDescription
}
func (obj *FabricNetworkDescription) toInnerStruct() *innerFabricNetworkDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricNetworkDescription{*obj}
}

type FabricLocalNetworkConfigurationDescription struct {
	NetworkAddressPrefix string
}

func (obj *FabricLocalNetworkConfigurationDescription) toInnerStruct() *innerFabricLocalNetworkConfigurationDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricLocalNetworkConfigurationDescription{}
	s_601, _ := windows.UTF16PtrFromString(obj.NetworkAddressPrefix)
	dst.NetworkAddressPrefix = s_601

	return &dst
}

type innerFabricLocalNetworkConfigurationDescription struct {
	NetworkAddressPrefix *uint16
	Reserved             unsafe.Pointer
}

func (obj *innerFabricLocalNetworkConfigurationDescription) toGoStruct() *FabricLocalNetworkConfigurationDescription {
	if obj == nil {
		return nil
	}
	dst := FabricLocalNetworkConfigurationDescription{}
	dst.NetworkAddressPrefix = windows.UTF16PtrToString(obj.NetworkAddressPrefix)
	return &dst
}

type FabricLocalNetworkDescription struct {
	NetworkConfiguration *FabricLocalNetworkConfigurationDescription
}
type innerFabricLocalNetworkDescription struct {
	FabricLocalNetworkDescription
	Reserved unsafe.Pointer
}

func (obj *innerFabricLocalNetworkDescription) toGoStruct() *FabricLocalNetworkDescription {
	if obj == nil {
		return nil
	}
	return &obj.FabricLocalNetworkDescription
}
func (obj *FabricLocalNetworkDescription) toInnerStruct() *innerFabricLocalNetworkDescription {
	if obj == nil {
		return nil
	}
	return &innerFabricLocalNetworkDescription{*obj, nil}
}

type FabricDeleteNetworkDescription struct {
	NetworkName string
}

func (obj *FabricDeleteNetworkDescription) toInnerStruct() *innerFabricDeleteNetworkDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeleteNetworkDescription{}
	s_602, _ := windows.UTF16PtrFromString(obj.NetworkName)
	dst.NetworkName = s_602

	return &dst
}

type innerFabricDeleteNetworkDescription struct {
	NetworkName *uint16
	Reserved    unsafe.Pointer
}

func (obj *innerFabricDeleteNetworkDescription) toGoStruct() *FabricDeleteNetworkDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeleteNetworkDescription{}
	dst.NetworkName = windows.UTF16PtrToString(obj.NetworkName)
	return &dst
}

type FabricNetworkInformation struct {
	NetworkType FabricNetworkType
	Value       interface{}
}
type innerFabricNetworkInformation struct {
	FabricNetworkInformation
}

func (obj *innerFabricNetworkInformation) toGoStruct() *FabricNetworkInformation {
	if obj == nil {
		return nil
	}
	return &obj.FabricNetworkInformation
}
func (obj *FabricNetworkInformation) toInnerStruct() *innerFabricNetworkInformation {
	if obj == nil {
		return nil
	}
	return &innerFabricNetworkInformation{*obj}
}

type FabricNetworkQueryDescription struct {
	NetworkNameFilter   string
	NetworkStatusFilter uint32
	PagingDescription   *FabricQueryPagingDescription
}

func (obj *FabricNetworkQueryDescription) toInnerStruct() *innerFabricNetworkQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricNetworkQueryDescription{}
	s_603, _ := windows.UTF16PtrFromString(obj.NetworkNameFilter)
	dst.NetworkNameFilter = s_603

	dst.NetworkStatusFilter = obj.NetworkStatusFilter
	dst.PagingDescription = obj.PagingDescription.toInnerStruct()
	return &dst
}

type innerFabricNetworkQueryDescription struct {
	NetworkNameFilter   *uint16
	NetworkStatusFilter uint32
	PagingDescription   *innerFabricQueryPagingDescription
	Reserved            unsafe.Pointer
}

func (obj *innerFabricNetworkQueryDescription) toGoStruct() *FabricNetworkQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricNetworkQueryDescription{}
	dst.NetworkNameFilter = windows.UTF16PtrToString(obj.NetworkNameFilter)
	dst.NetworkStatusFilter = obj.NetworkStatusFilter
	dst.PagingDescription = obj.PagingDescription.toGoStruct()
	return &dst
}

type FabricLocalNetworkInformation struct {
	NetworkName          string
	NetworkConfiguration *FabricLocalNetworkConfigurationDescription
	NetworkStatus        FabricNetworkStatus
}

func (obj *FabricLocalNetworkInformation) toInnerStruct() *innerFabricLocalNetworkInformation {
	if obj == nil {
		return nil
	}
	dst := innerFabricLocalNetworkInformation{}
	s_604, _ := windows.UTF16PtrFromString(obj.NetworkName)
	dst.NetworkName = s_604

	dst.NetworkConfiguration = obj.NetworkConfiguration.toInnerStruct()
	dst.NetworkStatus = obj.NetworkStatus
	return &dst
}

type innerFabricLocalNetworkInformation struct {
	NetworkName          *uint16
	NetworkConfiguration *innerFabricLocalNetworkConfigurationDescription
	NetworkStatus        FabricNetworkStatus
	Reserved             unsafe.Pointer
}

func (obj *innerFabricLocalNetworkInformation) toGoStruct() *FabricLocalNetworkInformation {
	if obj == nil {
		return nil
	}
	dst := FabricLocalNetworkInformation{}
	dst.NetworkName = windows.UTF16PtrToString(obj.NetworkName)
	dst.NetworkConfiguration = obj.NetworkConfiguration.toGoStruct()
	dst.NetworkStatus = obj.NetworkStatus
	return &dst
}

type innerFabricNetworkQueryResultList struct {
	Count uint32
	Items *innerFabricNetworkInformation
}

func (obj *innerFabricNetworkQueryResultList) toGoStruct() []FabricNetworkInformation {
	var dst []FabricNetworkInformation
	{
		var innerlst []innerFabricNetworkInformation
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricNetworkInformation

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricNetworkApplicationQueryDescription struct {
	NetworkName           string
	ApplicationNameFilter string
	PagingDescription     *FabricQueryPagingDescription
}

func (obj *FabricNetworkApplicationQueryDescription) toInnerStruct() *innerFabricNetworkApplicationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricNetworkApplicationQueryDescription{}
	s_605, _ := windows.UTF16PtrFromString(obj.NetworkName)
	dst.NetworkName = s_605

	s_606, _ := windows.UTF16PtrFromString(obj.ApplicationNameFilter)
	dst.ApplicationNameFilter = s_606

	dst.PagingDescription = obj.PagingDescription.toInnerStruct()
	return &dst
}

type innerFabricNetworkApplicationQueryDescription struct {
	NetworkName           *uint16
	ApplicationNameFilter *uint16
	PagingDescription     *innerFabricQueryPagingDescription
	Reserved              unsafe.Pointer
}

func (obj *innerFabricNetworkApplicationQueryDescription) toGoStruct() *FabricNetworkApplicationQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricNetworkApplicationQueryDescription{}
	dst.NetworkName = windows.UTF16PtrToString(obj.NetworkName)
	dst.ApplicationNameFilter = windows.UTF16PtrToString(obj.ApplicationNameFilter)
	dst.PagingDescription = obj.PagingDescription.toGoStruct()
	return &dst
}

type FabricNetworkApplicationQueryResultItem struct {
	ApplicationName string
}

func (obj *FabricNetworkApplicationQueryResultItem) toInnerStruct() *innerFabricNetworkApplicationQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricNetworkApplicationQueryResultItem{}
	s_607, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_607

	return &dst
}

type innerFabricNetworkApplicationQueryResultItem struct {
	ApplicationName *uint16
	Reserved        unsafe.Pointer
}

func (obj *innerFabricNetworkApplicationQueryResultItem) toGoStruct() *FabricNetworkApplicationQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricNetworkApplicationQueryResultItem{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	return &dst
}

type innerFabricNetworkApplicationQueryResultList struct {
	Count uint32
	Items *innerFabricNetworkApplicationQueryResultItem
}

func (obj *innerFabricNetworkApplicationQueryResultList) toGoStruct() []FabricNetworkApplicationQueryResultItem {
	var dst []FabricNetworkApplicationQueryResultItem
	{
		var innerlst []innerFabricNetworkApplicationQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricNetworkApplicationQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricNetworkNodeQueryDescription struct {
	NetworkName       string
	NodeNameFilter    string
	PagingDescription *FabricQueryPagingDescription
}

func (obj *FabricNetworkNodeQueryDescription) toInnerStruct() *innerFabricNetworkNodeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricNetworkNodeQueryDescription{}
	s_608, _ := windows.UTF16PtrFromString(obj.NetworkName)
	dst.NetworkName = s_608

	s_609, _ := windows.UTF16PtrFromString(obj.NodeNameFilter)
	dst.NodeNameFilter = s_609

	dst.PagingDescription = obj.PagingDescription.toInnerStruct()
	return &dst
}

type innerFabricNetworkNodeQueryDescription struct {
	NetworkName       *uint16
	NodeNameFilter    *uint16
	PagingDescription *innerFabricQueryPagingDescription
	Reserved          unsafe.Pointer
}

func (obj *innerFabricNetworkNodeQueryDescription) toGoStruct() *FabricNetworkNodeQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricNetworkNodeQueryDescription{}
	dst.NetworkName = windows.UTF16PtrToString(obj.NetworkName)
	dst.NodeNameFilter = windows.UTF16PtrToString(obj.NodeNameFilter)
	dst.PagingDescription = obj.PagingDescription.toGoStruct()
	return &dst
}

type FabricNetworkNodeQueryResultItem struct {
	NodeName string
}

func (obj *FabricNetworkNodeQueryResultItem) toInnerStruct() *innerFabricNetworkNodeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricNetworkNodeQueryResultItem{}
	s_610, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_610

	return &dst
}

type innerFabricNetworkNodeQueryResultItem struct {
	NodeName *uint16
	Reserved unsafe.Pointer
}

func (obj *innerFabricNetworkNodeQueryResultItem) toGoStruct() *FabricNetworkNodeQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricNetworkNodeQueryResultItem{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	return &dst
}

type innerFabricNetworkNodeQueryResultList struct {
	Count uint32
	Items *innerFabricNetworkNodeQueryResultItem
}

func (obj *innerFabricNetworkNodeQueryResultList) toGoStruct() []FabricNetworkNodeQueryResultItem {
	var dst []FabricNetworkNodeQueryResultItem
	{
		var innerlst []innerFabricNetworkNodeQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricNetworkNodeQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricApplicationNetworkQueryDescription struct {
	ApplicationName   string
	PagingDescription *FabricQueryPagingDescription
}

func (obj *FabricApplicationNetworkQueryDescription) toInnerStruct() *innerFabricApplicationNetworkQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationNetworkQueryDescription{}
	s_611, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_611

	dst.PagingDescription = obj.PagingDescription.toInnerStruct()
	return &dst
}

type innerFabricApplicationNetworkQueryDescription struct {
	ApplicationName   *uint16
	PagingDescription *innerFabricQueryPagingDescription
	Reserved          unsafe.Pointer
}

func (obj *innerFabricApplicationNetworkQueryDescription) toGoStruct() *FabricApplicationNetworkQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationNetworkQueryDescription{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.PagingDescription = obj.PagingDescription.toGoStruct()
	return &dst
}

type FabricApplicationNetworkQueryResultItem struct {
	NetworkName string
}

func (obj *FabricApplicationNetworkQueryResultItem) toInnerStruct() *innerFabricApplicationNetworkQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricApplicationNetworkQueryResultItem{}
	s_612, _ := windows.UTF16PtrFromString(obj.NetworkName)
	dst.NetworkName = s_612

	return &dst
}

type innerFabricApplicationNetworkQueryResultItem struct {
	NetworkName *uint16
	Reserved    unsafe.Pointer
}

func (obj *innerFabricApplicationNetworkQueryResultItem) toGoStruct() *FabricApplicationNetworkQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricApplicationNetworkQueryResultItem{}
	dst.NetworkName = windows.UTF16PtrToString(obj.NetworkName)
	return &dst
}

type innerFabricApplicationNetworkQueryResultList struct {
	Count uint32
	Items *innerFabricApplicationNetworkQueryResultItem
}

func (obj *innerFabricApplicationNetworkQueryResultList) toGoStruct() []FabricApplicationNetworkQueryResultItem {
	var dst []FabricApplicationNetworkQueryResultItem
	{
		var innerlst []innerFabricApplicationNetworkQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricApplicationNetworkQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedNetworkQueryDescription struct {
	NodeName          string
	PagingDescription *FabricQueryPagingDescription
}

func (obj *FabricDeployedNetworkQueryDescription) toInnerStruct() *innerFabricDeployedNetworkQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedNetworkQueryDescription{}
	s_613, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_613

	dst.PagingDescription = obj.PagingDescription.toInnerStruct()
	return &dst
}

type innerFabricDeployedNetworkQueryDescription struct {
	NodeName          *uint16
	PagingDescription *innerFabricQueryPagingDescription
	Reserved          unsafe.Pointer
}

func (obj *innerFabricDeployedNetworkQueryDescription) toGoStruct() *FabricDeployedNetworkQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedNetworkQueryDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.PagingDescription = obj.PagingDescription.toGoStruct()
	return &dst
}

type FabricDeployedNetworkQueryResultItem struct {
	NetworkName string
}

func (obj *FabricDeployedNetworkQueryResultItem) toInnerStruct() *innerFabricDeployedNetworkQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedNetworkQueryResultItem{}
	s_614, _ := windows.UTF16PtrFromString(obj.NetworkName)
	dst.NetworkName = s_614

	return &dst
}

type innerFabricDeployedNetworkQueryResultItem struct {
	NetworkName *uint16
	Reserved    unsafe.Pointer
}

func (obj *innerFabricDeployedNetworkQueryResultItem) toGoStruct() *FabricDeployedNetworkQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedNetworkQueryResultItem{}
	dst.NetworkName = windows.UTF16PtrToString(obj.NetworkName)
	return &dst
}

type innerFabricDeployedNetworkQueryResultList struct {
	Count uint32
	Items *innerFabricDeployedNetworkQueryResultItem
}

func (obj *innerFabricDeployedNetworkQueryResultList) toGoStruct() []FabricDeployedNetworkQueryResultItem {
	var dst []FabricDeployedNetworkQueryResultItem
	{
		var innerlst []innerFabricDeployedNetworkQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedNetworkQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}

type FabricDeployedNetworkCodePackageQueryDescription struct {
	NodeName                  string
	NetworkName               string
	ApplicationNameFilter     string
	ServiceManifestNameFilter string
	CodePackageNameFilter     string
	PagingDescription         *FabricQueryPagingDescription
}

func (obj *FabricDeployedNetworkCodePackageQueryDescription) toInnerStruct() *innerFabricDeployedNetworkCodePackageQueryDescription {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedNetworkCodePackageQueryDescription{}
	s_615, _ := windows.UTF16PtrFromString(obj.NodeName)
	dst.NodeName = s_615

	s_616, _ := windows.UTF16PtrFromString(obj.NetworkName)
	dst.NetworkName = s_616

	s_617, _ := windows.UTF16PtrFromString(obj.ApplicationNameFilter)
	dst.ApplicationNameFilter = s_617

	s_618, _ := windows.UTF16PtrFromString(obj.ServiceManifestNameFilter)
	dst.ServiceManifestNameFilter = s_618

	s_619, _ := windows.UTF16PtrFromString(obj.CodePackageNameFilter)
	dst.CodePackageNameFilter = s_619

	dst.PagingDescription = obj.PagingDescription.toInnerStruct()
	return &dst
}

type innerFabricDeployedNetworkCodePackageQueryDescription struct {
	NodeName                  *uint16
	NetworkName               *uint16
	ApplicationNameFilter     *uint16
	ServiceManifestNameFilter *uint16
	CodePackageNameFilter     *uint16
	PagingDescription         *innerFabricQueryPagingDescription
	Reserved                  unsafe.Pointer
}

func (obj *innerFabricDeployedNetworkCodePackageQueryDescription) toGoStruct() *FabricDeployedNetworkCodePackageQueryDescription {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedNetworkCodePackageQueryDescription{}
	dst.NodeName = windows.UTF16PtrToString(obj.NodeName)
	dst.NetworkName = windows.UTF16PtrToString(obj.NetworkName)
	dst.ApplicationNameFilter = windows.UTF16PtrToString(obj.ApplicationNameFilter)
	dst.ServiceManifestNameFilter = windows.UTF16PtrToString(obj.ServiceManifestNameFilter)
	dst.CodePackageNameFilter = windows.UTF16PtrToString(obj.CodePackageNameFilter)
	dst.PagingDescription = obj.PagingDescription.toGoStruct()
	return &dst
}

type FabricDeployedNetworkCodePackageQueryResultItem struct {
	ApplicationName            string
	NetworkName                string
	CodePackageName            string
	CodePackageVersion         string
	ServiceManifestName        string
	ServicePackageActivationId string
	ContainerAddress           string
	ContainerId                string
}

func (obj *FabricDeployedNetworkCodePackageQueryResultItem) toInnerStruct() *innerFabricDeployedNetworkCodePackageQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := innerFabricDeployedNetworkCodePackageQueryResultItem{}
	s_620, _ := windows.UTF16PtrFromString(obj.ApplicationName)
	dst.ApplicationName = s_620

	s_621, _ := windows.UTF16PtrFromString(obj.NetworkName)
	dst.NetworkName = s_621

	s_622, _ := windows.UTF16PtrFromString(obj.CodePackageName)
	dst.CodePackageName = s_622

	s_623, _ := windows.UTF16PtrFromString(obj.CodePackageVersion)
	dst.CodePackageVersion = s_623

	s_624, _ := windows.UTF16PtrFromString(obj.ServiceManifestName)
	dst.ServiceManifestName = s_624

	s_625, _ := windows.UTF16PtrFromString(obj.ServicePackageActivationId)
	dst.ServicePackageActivationId = s_625

	s_626, _ := windows.UTF16PtrFromString(obj.ContainerAddress)
	dst.ContainerAddress = s_626

	s_627, _ := windows.UTF16PtrFromString(obj.ContainerId)
	dst.ContainerId = s_627

	return &dst
}

type innerFabricDeployedNetworkCodePackageQueryResultItem struct {
	ApplicationName            *uint16
	NetworkName                *uint16
	CodePackageName            *uint16
	CodePackageVersion         *uint16
	ServiceManifestName        *uint16
	ServicePackageActivationId *uint16
	ContainerAddress           *uint16
	ContainerId                *uint16
	Reserved                   unsafe.Pointer
}

func (obj *innerFabricDeployedNetworkCodePackageQueryResultItem) toGoStruct() *FabricDeployedNetworkCodePackageQueryResultItem {
	if obj == nil {
		return nil
	}
	dst := FabricDeployedNetworkCodePackageQueryResultItem{}
	dst.ApplicationName = windows.UTF16PtrToString(obj.ApplicationName)
	dst.NetworkName = windows.UTF16PtrToString(obj.NetworkName)
	dst.CodePackageName = windows.UTF16PtrToString(obj.CodePackageName)
	dst.CodePackageVersion = windows.UTF16PtrToString(obj.CodePackageVersion)
	dst.ServiceManifestName = windows.UTF16PtrToString(obj.ServiceManifestName)
	dst.ServicePackageActivationId = windows.UTF16PtrToString(obj.ServicePackageActivationId)
	dst.ContainerAddress = windows.UTF16PtrToString(obj.ContainerAddress)
	dst.ContainerId = windows.UTF16PtrToString(obj.ContainerId)
	return &dst
}

type innerFabricDeployedNetworkCodePackageQueryResultList struct {
	Count uint32
	Items *innerFabricDeployedNetworkCodePackageQueryResultItem
}

func (obj *innerFabricDeployedNetworkCodePackageQueryResultList) toGoStruct() []FabricDeployedNetworkCodePackageQueryResultItem {
	var dst []FabricDeployedNetworkCodePackageQueryResultItem
	{
		var innerlst []innerFabricDeployedNetworkCodePackageQueryResultItem
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(obj.Items), int(obj.Count))

		for _, item := range innerlst {
			var tmpitem FabricDeployedNetworkCodePackageQueryResultItem

			tmpitem = *item.toGoStruct()

			dst = append(dst, tmpitem)
		}

	}
	return dst
}
