// Code generated by "go run github.com/tg123/fabric/mkidl"; DO NOT EDIT.
package fabric

import (
	"github.com/go-ole/go-ole"
	"golang.org/x/sys/windows"
	"syscall"
	"unsafe"
)

func (c *FabricClient) CreateFabricAsyncOperationCallback() (*ComFabricAsyncOperationCallback, error) {
	var com *ComFabricAsyncOperationCallback
	err := c.createComObject("{86f08d7e-14dd-4575-8489-b1d5d679029c}", unsafe.Pointer(&com))
	if err != nil {
		return nil, err
	}

	return com, nil
}

type ComFabricAsyncOperationCallback struct {
	ole.IUnknown
}

type comFabricAsyncOperationCallbackVtbl struct {
	ole.IUnknownVtbl
	Invoke uintptr
}

func (v *ComFabricAsyncOperationCallback) vtable() *comFabricAsyncOperationCallbackVtbl {
	return (*comFabricAsyncOperationCallbackVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *ComFabricAsyncOperationCallback) Invoke(
	context *comIFabricAsyncOperationContext,
) (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().Invoke,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}

func (c *FabricClient) CreateFabricAsyncOperationContext() (*ComFabricAsyncOperationContext, error) {
	var com *ComFabricAsyncOperationContext
	err := c.createComObject("{841720bf-c9e8-4e6f-9c3f-6b7f4ac73bcd}", unsafe.Pointer(&com))
	if err != nil {
		return nil, err
	}

	return com, nil
}

type ComFabricAsyncOperationContext struct {
	ole.IUnknown
}

type comFabricAsyncOperationContextVtbl struct {
	ole.IUnknownVtbl
	IsCompleted            uintptr
	CompletedSynchronously uintptr
	get_Callback           uintptr
	Cancel                 uintptr
}

func (v *ComFabricAsyncOperationContext) vtable() *comFabricAsyncOperationContextVtbl {
	return (*comFabricAsyncOperationContextVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *ComFabricAsyncOperationContext) IsCompleted() (rt bool, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().IsCompleted,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	_ = err1
	rt = hr != 0
	return
}
func (v *ComFabricAsyncOperationContext) CompletedSynchronously() (rt bool, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().CompletedSynchronously,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	_ = err1
	rt = hr != 0
	return
}
func (v *ComFabricAsyncOperationContext) GetCallback() (callback *comIFabricAsyncOperationCallback, err error) {
	var p_0 *comIFabricAsyncOperationCallback
	defer func() {
		callback = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Callback,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *ComFabricAsyncOperationContext) Cancel() (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().Cancel,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

func (c *FabricClient) CreateFabricStringResult() (*ComFabricStringResult, error) {
	var com *ComFabricStringResult
	err := c.createComObject("{4ae69614-7d0f-4cd4-b836-23017000d132}", unsafe.Pointer(&com))
	if err != nil {
		return nil, err
	}

	return com, nil
}

type ComFabricStringResult struct {
	ole.IUnknown
}

type comFabricStringResultVtbl struct {
	ole.IUnknownVtbl
	get_String uintptr
}

func (v *ComFabricStringResult) vtable() *comFabricStringResultVtbl {
	return (*comFabricStringResultVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *ComFabricStringResult) GetString() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_String,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}

func (c *FabricClient) CreateFabricStringListResult() (*ComFabricStringListResult, error) {
	var com *ComFabricStringListResult
	err := c.createComObject("{afab1c53-757b-4b0e-8b7e-237aeee6bfe9}", unsafe.Pointer(&com))
	if err != nil {
		return nil, err
	}

	return com, nil
}

type ComFabricStringListResult struct {
	ole.IUnknown
}

type comFabricStringListResultVtbl struct {
	ole.IUnknownVtbl
	GetStrings uintptr
}

func (v *ComFabricStringListResult) vtable() *comFabricStringListResultVtbl {
	return (*comFabricStringListResultVtbl)(unsafe.Pointer(v.RawVTable))
}

func (c *FabricClient) CreateFabricGetReplicatorStatusResult() (*ComFabricGetReplicatorStatusResult, error) {
	var com *ComFabricGetReplicatorStatusResult
	err := c.createComObject("{30E10C61-A710-4F99-A623-BB1403265186}", unsafe.Pointer(&com))
	if err != nil {
		return nil, err
	}

	return com, nil
}

type ComFabricGetReplicatorStatusResult struct {
	ole.IUnknown
}

type comFabricGetReplicatorStatusResultVtbl struct {
	ole.IUnknownVtbl
	get_ReplicatorStatus uintptr
}

func (v *ComFabricGetReplicatorStatusResult) vtable() *comFabricGetReplicatorStatusResultVtbl {
	return (*comFabricGetReplicatorStatusResultVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *ComFabricGetReplicatorStatusResult) GetReplicatorStatus() (rt *FabricReplicatorStatusQueryResult, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_ReplicatorStatus,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricReplicatorStatusQueryResult)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}
