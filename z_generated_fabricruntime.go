// Code generated by "go run github.com/tg123/fabric/mkidl"; DO NOT EDIT.
package fabric

import (
	"github.com/go-ole/go-ole"
	"golang.org/x/sys/windows"
	"syscall"
	"unsafe"
)

type fabricRuntimeComHub struct {
	FabricRuntime *comFabricRuntime
}

func (v *fabricRuntimeComHub) init(createComObject comCreator) {
	createComObject("{cc53af8e-74cd-11df-ac3e-0024811e3892}", unsafe.Pointer(&v.FabricRuntime))
}
func (v *fabricRuntimeComHub) Close() {
	if v.FabricRuntime != nil {
		releaseComObject(&v.FabricRuntime.IUnknown)
	}
}
func (v *FabricRuntime) RegisterStatelessServiceFactory(
	serviceTypeName string,
	factory *comFabricStatelessServiceFactory,
) (err error) {
	if v.hub.FabricRuntime == nil {
		err = errComNotImpl
		return
	}
	return v.hub.FabricRuntime.RegisterStatelessServiceFactory(serviceTypeName, factory)
}
func (v *FabricRuntime) RegisterStatefulServiceFactory(
	serviceTypeName string,
	factory *comFabricStatefulServiceFactory,
) (err error) {
	if v.hub.FabricRuntime == nil {
		err = errComNotImpl
		return
	}
	return v.hub.FabricRuntime.RegisterStatefulServiceFactory(serviceTypeName, factory)
}
func (v *FabricRuntime) CreateServiceGroupFactoryBuilder() (builder *ComFabricServiceGroupFactoryBuilder, err error) {
	if v.hub.FabricRuntime == nil {
		err = errComNotImpl
		return
	}
	return v.hub.FabricRuntime.CreateServiceGroupFactoryBuilder()
}
func (v *FabricRuntime) RegisterServiceGroupFactory(
	groupServiceType string,
	factory *ComFabricServiceGroupFactory,
) (err error) {
	if v.hub.FabricRuntime == nil {
		err = errComNotImpl
		return
	}
	return v.hub.FabricRuntime.RegisterServiceGroupFactory(groupServiceType, factory)
}

type comFabricRuntime struct {
	ole.IUnknown
}

type comFabricRuntimeVtbl struct {
	ole.IUnknownVtbl
	BeginRegisterStatelessServiceFactory uintptr
	EndRegisterStatelessServiceFactory   uintptr
	RegisterStatelessServiceFactory      uintptr
	BeginRegisterStatefulServiceFactory  uintptr
	EndRegisterStatefulServiceFactory    uintptr
	RegisterStatefulServiceFactory       uintptr
	CreateServiceGroupFactoryBuilder     uintptr
	BeginRegisterServiceGroupFactory     uintptr
	EndRegisterServiceGroupFactory       uintptr
	RegisterServiceGroupFactory          uintptr
}

func (v *comFabricRuntime) vtable() *comFabricRuntimeVtbl {
	return (*comFabricRuntimeVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricRuntime) beginRegisterStatelessServiceFactory(
	serviceTypeName string,
	factory *comFabricStatelessServiceFactory,
	timeoutMilliseconds uint32,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *uint16
	s_1, _ := windows.UTF16PtrFromString(serviceTypeName)
	p_0 = s_1

	var p_4 *comFabricAsyncOperationContext
	defer func() {
		context = p_4
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginRegisterStatelessServiceFactory,
		6,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(factory)),
		uintptr(timeoutMilliseconds),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_4)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricRuntime) RegisterStatelessServiceFactory(
	serviceTypeName string,
	factory *comFabricStatelessServiceFactory,
) (err error) {
	var p_0 *uint16
	s_2, _ := windows.UTF16PtrFromString(serviceTypeName)
	p_0 = s_2

	hr, _, err1 := syscall.Syscall(
		v.vtable().RegisterStatelessServiceFactory,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(factory)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricRuntime) beginRegisterStatefulServiceFactory(
	serviceTypeName string,
	factory *comFabricStatefulServiceFactory,
	timeoutMilliseconds uint32,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *uint16
	s_3, _ := windows.UTF16PtrFromString(serviceTypeName)
	p_0 = s_3

	var p_4 *comFabricAsyncOperationContext
	defer func() {
		context = p_4
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginRegisterStatefulServiceFactory,
		6,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(factory)),
		uintptr(timeoutMilliseconds),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_4)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricRuntime) RegisterStatefulServiceFactory(
	serviceTypeName string,
	factory *comFabricStatefulServiceFactory,
) (err error) {
	var p_0 *uint16
	s_4, _ := windows.UTF16PtrFromString(serviceTypeName)
	p_0 = s_4

	hr, _, err1 := syscall.Syscall(
		v.vtable().RegisterStatefulServiceFactory,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(factory)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricRuntime) CreateServiceGroupFactoryBuilder() (builder *ComFabricServiceGroupFactoryBuilder, err error) {
	var p_0 *ComFabricServiceGroupFactoryBuilder
	defer func() {
		builder = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().CreateServiceGroupFactoryBuilder,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricRuntime) beginRegisterServiceGroupFactory(
	groupServiceType string,
	factory *ComFabricServiceGroupFactory,
	timeoutMilliseconds uint32,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *uint16
	s_5, _ := windows.UTF16PtrFromString(groupServiceType)
	p_0 = s_5

	var p_4 *comFabricAsyncOperationContext
	defer func() {
		context = p_4
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginRegisterServiceGroupFactory,
		6,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(factory)),
		uintptr(timeoutMilliseconds),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_4)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricRuntime) RegisterServiceGroupFactory(
	groupServiceType string,
	factory *ComFabricServiceGroupFactory,
) (err error) {
	var p_0 *uint16
	s_6, _ := windows.UTF16PtrFromString(groupServiceType)
	p_0 = s_6

	hr, _, err1 := syscall.Syscall(
		v.vtable().RegisterServiceGroupFactory,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(factory)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStatelessServiceFactory struct {
	ole.IUnknown
}

type comFabricStatelessServiceFactoryVtbl struct {
	ole.IUnknownVtbl
	CreateInstance uintptr
}

func (v *comFabricStatelessServiceFactory) vtable() *comFabricStatelessServiceFactoryVtbl {
	return (*comFabricStatelessServiceFactoryVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatelessServiceFactory) CreateInstance(
	serviceTypeName string,
	serviceName string,
	initializationDataLength uint32,
	initializationData *byte,
	partitionId windows.GUID,
	instanceId int64,
) (serviceInstance *comFabricStatelessServiceInstance, err error) {
	var p_0 *uint16
	s_7, _ := windows.UTF16PtrFromString(serviceTypeName)
	p_0 = s_7

	var p_1 *uint16
	s_8, _ := windows.UTF16PtrFromString(serviceName)
	p_1 = s_8

	var p_6 *comFabricStatelessServiceInstance
	defer func() {
		serviceInstance = p_6
	}()
	hr, _, err1 := syscall.Syscall9(
		v.vtable().CreateInstance,
		8,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(initializationDataLength),
		uintptr(unsafe.Pointer(initializationData)),
		uintptr(unsafe.Pointer(&partitionId)),
		uintptr(instanceId),
		uintptr(unsafe.Pointer(&p_6)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStatelessServiceInstance struct {
	ole.IUnknown
}

type comFabricStatelessServiceInstanceVtbl struct {
	ole.IUnknownVtbl
	BeginOpen  uintptr
	EndOpen    uintptr
	BeginClose uintptr
	EndClose   uintptr
	Abort      uintptr
}

func (v *comFabricStatelessServiceInstance) vtable() *comFabricStatelessServiceInstanceVtbl {
	return (*comFabricStatelessServiceInstanceVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatelessServiceInstance) beginOpen(
	partition *comFabricStatelessServicePartition,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_2 *comFabricAsyncOperationContext
	defer func() {
		context = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginOpen,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(partition)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatelessServiceInstance) beginClose(
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_1 *comFabricAsyncOperationContext
	defer func() {
		context = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().BeginClose,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatelessServiceInstance) endClose(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndClose,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatelessServiceInstance) Abort() (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().Abort,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}

type comFabricStatelessServicePartition struct {
	ole.IUnknown
}

type comFabricStatelessServicePartitionVtbl struct {
	ole.IUnknownVtbl
	GetPartitionInfo uintptr
	ReportLoad       uintptr
	ReportFault      uintptr
}

func (v *comFabricStatelessServicePartition) vtable() *comFabricStatelessServicePartitionVtbl {
	return (*comFabricStatelessServicePartitionVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatelessServicePartition) GetPartitionInfo() (bufferedValue *FabricServicePartitionInformation, err error) {
	var p_0 *innerFabricServicePartitionInformation
	defer func() {
		bufferedValue = p_0.toGoStruct()
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetPartitionInfo,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatelessServicePartition) ReportLoad(
	metricCount uint32,
	metrics *FabricLoadMetric,
) (err error) {
	var p_1 *innerFabricLoadMetric
	p_1 = metrics.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportLoad,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(metricCount),
		uintptr(unsafe.Pointer(p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatelessServicePartition) ReportFault(
	faultType FabricFaultType,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportFault,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(faultType),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStatelessServicePartition1 struct {
	comFabricStatelessServicePartition
}

type comFabricStatelessServicePartition1Vtbl struct {
	comFabricStatelessServicePartitionVtbl
	ReportMoveCost uintptr
}

func (v *comFabricStatelessServicePartition1) vtable() *comFabricStatelessServicePartition1Vtbl {
	return (*comFabricStatelessServicePartition1Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatelessServicePartition1) ReportMoveCost(
	moveCost FabricMoveCost,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportMoveCost,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(moveCost),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStatelessServicePartition2 struct {
	comFabricStatelessServicePartition1
}

type comFabricStatelessServicePartition2Vtbl struct {
	comFabricStatelessServicePartition1Vtbl
	ReportInstanceHealth  uintptr
	ReportPartitionHealth uintptr
}

func (v *comFabricStatelessServicePartition2) vtable() *comFabricStatelessServicePartition2Vtbl {
	return (*comFabricStatelessServicePartition2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatelessServicePartition2) ReportInstanceHealth(
	healthInfo *FabricHealthInformation,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportInstanceHealth,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatelessServicePartition2) ReportPartitionHealth(
	healthInfo *FabricHealthInformation,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportPartitionHealth,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStatelessServicePartition3 struct {
	comFabricStatelessServicePartition2
}

type comFabricStatelessServicePartition3Vtbl struct {
	comFabricStatelessServicePartition2Vtbl
	ReportInstanceHealth2  uintptr
	ReportPartitionHealth2 uintptr
}

func (v *comFabricStatelessServicePartition3) vtable() *comFabricStatelessServicePartition3Vtbl {
	return (*comFabricStatelessServicePartition3Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatelessServicePartition3) ReportInstanceHealth2(
	healthInfo *FabricHealthInformation,
	sendOptions *FabricHealthReportSendOptions,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	var p_1 *innerFabricHealthReportSendOptions
	p_1 = sendOptions.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportInstanceHealth2,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatelessServicePartition3) ReportPartitionHealth2(
	healthInfo *FabricHealthInformation,
	sendOptions *FabricHealthReportSendOptions,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	var p_1 *innerFabricHealthReportSendOptions
	p_1 = sendOptions.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportPartitionHealth2,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStatefulServiceFactory struct {
	ole.IUnknown
}

type comFabricStatefulServiceFactoryVtbl struct {
	ole.IUnknownVtbl
	CreateReplica uintptr
}

func (v *comFabricStatefulServiceFactory) vtable() *comFabricStatefulServiceFactoryVtbl {
	return (*comFabricStatefulServiceFactoryVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatefulServiceFactory) CreateReplica(
	serviceTypeName string,
	serviceName string,
	initializationDataLength uint32,
	initializationData *byte,
	partitionId windows.GUID,
	replicaId int64,
) (serviceReplica *comFabricStatefulServiceReplica, err error) {
	var p_0 *uint16
	s_9, _ := windows.UTF16PtrFromString(serviceTypeName)
	p_0 = s_9

	var p_1 *uint16
	s_10, _ := windows.UTF16PtrFromString(serviceName)
	p_1 = s_10

	var p_6 *comFabricStatefulServiceReplica
	defer func() {
		serviceReplica = p_6
	}()
	hr, _, err1 := syscall.Syscall9(
		v.vtable().CreateReplica,
		8,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(initializationDataLength),
		uintptr(unsafe.Pointer(initializationData)),
		uintptr(unsafe.Pointer(&partitionId)),
		uintptr(replicaId),
		uintptr(unsafe.Pointer(&p_6)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStatefulServiceReplica struct {
	ole.IUnknown
}

type comFabricStatefulServiceReplicaVtbl struct {
	ole.IUnknownVtbl
	BeginOpen       uintptr
	EndOpen         uintptr
	BeginChangeRole uintptr
	EndChangeRole   uintptr
	BeginClose      uintptr
	EndClose        uintptr
	Abort           uintptr
}

func (v *comFabricStatefulServiceReplica) vtable() *comFabricStatefulServiceReplicaVtbl {
	return (*comFabricStatefulServiceReplicaVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatefulServiceReplica) beginOpen(
	openMode FabricReplicaOpenMode,
	partition *comFabricStatefulServicePartition,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_3 *comFabricAsyncOperationContext
	defer func() {
		context = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginOpen,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(openMode),
		uintptr(unsafe.Pointer(partition)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServiceReplica) beginChangeRole(
	newRole FabricReplicaRole,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_2 *comFabricAsyncOperationContext
	defer func() {
		context = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginChangeRole,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(newRole),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServiceReplica) endChangeRole(
	context *comFabricAsyncOperationContext,
) (serviceAddress *comFabricStringResult, err error) {
	var p_1 *comFabricStringResult
	defer func() {
		serviceAddress = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndChangeRole,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServiceReplica) beginClose(
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_1 *comFabricAsyncOperationContext
	defer func() {
		context = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().BeginClose,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServiceReplica) endClose(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndClose,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServiceReplica) Abort() (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().Abort,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}

type comFabricStatefulServicePartition struct {
	ole.IUnknown
}

type comFabricStatefulServicePartitionVtbl struct {
	ole.IUnknownVtbl
	GetPartitionInfo uintptr
	GetReadStatus    uintptr
	GetWriteStatus   uintptr
	CreateReplicator uintptr
	ReportLoad       uintptr
	ReportFault      uintptr
}

func (v *comFabricStatefulServicePartition) vtable() *comFabricStatefulServicePartitionVtbl {
	return (*comFabricStatefulServicePartitionVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatefulServicePartition) GetPartitionInfo() (bufferedValue *FabricServicePartitionInformation, err error) {
	var p_0 *innerFabricServicePartitionInformation
	defer func() {
		bufferedValue = p_0.toGoStruct()
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetPartitionInfo,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServicePartition) GetReadStatus() (readStatus FabricServicePartitionAccessStatus, err error) {
	var p_0 FabricServicePartitionAccessStatus
	defer func() {
		readStatus = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetReadStatus,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServicePartition) GetWriteStatus() (writeStatus FabricServicePartitionAccessStatus, err error) {
	var p_0 FabricServicePartitionAccessStatus
	defer func() {
		writeStatus = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetWriteStatus,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServicePartition) CreateReplicator(
	stateProvider *comFabricStateProvider,
	replicatorSettings *FabricReplicatorSettings,
) (replicator *comFabricReplicator, stateReplicator *comFabricStateReplicator, err error) {
	var p_1 *innerFabricReplicatorSettings
	p_1 = replicatorSettings.toInnerStruct()
	var p_2 *comFabricReplicator
	defer func() {
		replicator = p_2
	}()
	var p_3 *comFabricStateReplicator
	defer func() {
		stateReplicator = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().CreateReplicator,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(stateProvider)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(unsafe.Pointer(&p_2)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServicePartition) ReportLoad(
	metricCount uint32,
	metrics *FabricLoadMetric,
) (err error) {
	var p_1 *innerFabricLoadMetric
	p_1 = metrics.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportLoad,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(metricCount),
		uintptr(unsafe.Pointer(p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServicePartition) ReportFault(
	faultType FabricFaultType,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportFault,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(faultType),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStatefulServicePartition1 struct {
	comFabricStatefulServicePartition
}

type comFabricStatefulServicePartition1Vtbl struct {
	comFabricStatefulServicePartitionVtbl
	ReportMoveCost uintptr
}

func (v *comFabricStatefulServicePartition1) vtable() *comFabricStatefulServicePartition1Vtbl {
	return (*comFabricStatefulServicePartition1Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatefulServicePartition1) ReportMoveCost(
	moveCost FabricMoveCost,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportMoveCost,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(moveCost),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStatefulServicePartition2 struct {
	comFabricStatefulServicePartition1
}

type comFabricStatefulServicePartition2Vtbl struct {
	comFabricStatefulServicePartition1Vtbl
	ReportReplicaHealth   uintptr
	ReportPartitionHealth uintptr
}

func (v *comFabricStatefulServicePartition2) vtable() *comFabricStatefulServicePartition2Vtbl {
	return (*comFabricStatefulServicePartition2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatefulServicePartition2) ReportReplicaHealth(
	healthInfo *FabricHealthInformation,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportReplicaHealth,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServicePartition2) ReportPartitionHealth(
	healthInfo *FabricHealthInformation,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportPartitionHealth,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStatefulServicePartition3 struct {
	comFabricStatefulServicePartition2
}

type comFabricStatefulServicePartition3Vtbl struct {
	comFabricStatefulServicePartition2Vtbl
	ReportReplicaHealth2   uintptr
	ReportPartitionHealth2 uintptr
}

func (v *comFabricStatefulServicePartition3) vtable() *comFabricStatefulServicePartition3Vtbl {
	return (*comFabricStatefulServicePartition3Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStatefulServicePartition3) ReportReplicaHealth2(
	healthInfo *FabricHealthInformation,
	sendOptions *FabricHealthReportSendOptions,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	var p_1 *innerFabricHealthReportSendOptions
	p_1 = sendOptions.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportReplicaHealth2,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStatefulServicePartition3) ReportPartitionHealth2(
	healthInfo *FabricHealthInformation,
	sendOptions *FabricHealthReportSendOptions,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	var p_1 *innerFabricHealthReportSendOptions
	p_1 = sendOptions.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportPartitionHealth2,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStateReplicator struct {
	ole.IUnknown
}

type comFabricStateReplicatorVtbl struct {
	ole.IUnknownVtbl
	BeginReplicate           uintptr
	EndReplicate             uintptr
	GetReplicationStream     uintptr
	GetCopyStream            uintptr
	UpdateReplicatorSettings uintptr
}

func (v *comFabricStateReplicator) vtable() *comFabricStateReplicatorVtbl {
	return (*comFabricStateReplicatorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStateReplicator) beginReplicate(
	operationData *comFabricOperationData,
	callback *comIFabricAsyncOperationCallback,
) (sequenceNumber int64, context *comFabricAsyncOperationContext, err error) {
	var p_2 int64
	defer func() {
		sequenceNumber = p_2
	}()
	var p_3 *comFabricAsyncOperationContext
	defer func() {
		context = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginReplicate,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(operationData)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStateReplicator) endReplicate(
	context *comFabricAsyncOperationContext,
) (sequenceNumber int64, err error) {
	var p_1 int64
	defer func() {
		sequenceNumber = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndReplicate,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStateReplicator) GetReplicationStream() (stream *comFabricOperationStream, err error) {
	var p_0 *comFabricOperationStream
	defer func() {
		stream = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetReplicationStream,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStateReplicator) GetCopyStream() (stream *comFabricOperationStream, err error) {
	var p_0 *comFabricOperationStream
	defer func() {
		stream = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetCopyStream,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStateReplicator) UpdateReplicatorSettings(
	replicatorSettings *FabricReplicatorSettings,
) (err error) {
	var p_0 *innerFabricReplicatorSettings
	p_0 = replicatorSettings.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().UpdateReplicatorSettings,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStateReplicator2 struct {
	comFabricStateReplicator
}

type comFabricStateReplicator2Vtbl struct {
	comFabricStateReplicatorVtbl
	GetReplicatorSettings uintptr
}

func (v *comFabricStateReplicator2) vtable() *comFabricStateReplicator2Vtbl {
	return (*comFabricStateReplicator2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStateReplicator2) GetReplicatorSettings() (replicatorSettings *comFabricReplicatorSettingsResult, err error) {
	var p_0 *comFabricReplicatorSettingsResult
	defer func() {
		replicatorSettings = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetReplicatorSettings,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStateProvider struct {
	ole.IUnknown
}

type comFabricStateProviderVtbl struct {
	ole.IUnknownVtbl
	BeginUpdateEpoch               uintptr
	EndUpdateEpoch                 uintptr
	GetLastCommittedSequenceNumber uintptr
	BeginOnDataLoss                uintptr
	EndOnDataLoss                  uintptr
	GetCopyContext                 uintptr
	GetCopyState                   uintptr
}

func (v *comFabricStateProvider) vtable() *comFabricStateProviderVtbl {
	return (*comFabricStateProviderVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStateProvider) beginUpdateEpoch(
	epoch *FabricEpoch,
	previousEpochLastSequenceNumber int64,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *innerFabricEpoch
	p_0 = epoch.toInnerStruct()
	var p_3 *comFabricAsyncOperationContext
	defer func() {
		context = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginUpdateEpoch,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(previousEpochLastSequenceNumber),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStateProvider) endUpdateEpoch(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndUpdateEpoch,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStateProvider) GetLastCommittedSequenceNumber() (sequenceNumber int64, err error) {
	var p_0 int64
	defer func() {
		sequenceNumber = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetLastCommittedSequenceNumber,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStateProvider) beginOnDataLoss(
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_1 *comFabricAsyncOperationContext
	defer func() {
		context = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().BeginOnDataLoss,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStateProvider) endOnDataLoss(
	context *comFabricAsyncOperationContext,
) (isStateChanged bool, err error) {
	var p_1 bool
	defer func() {
		isStateChanged = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndOnDataLoss,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStateProvider) GetCopyContext() (copyContextStream *comFabricOperationDataStream, err error) {
	var p_0 *comFabricOperationDataStream
	defer func() {
		copyContextStream = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetCopyContext,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStateProvider) GetCopyState(
	uptoSequenceNumber int64,
	copyContextStream *comFabricOperationDataStream,
) (copyStateStream *comFabricOperationDataStream, err error) {
	var p_2 *comFabricOperationDataStream
	defer func() {
		copyStateStream = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().GetCopyState,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(uptoSequenceNumber),
		uintptr(unsafe.Pointer(copyContextStream)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricOperation struct {
	ole.IUnknown
}

type comFabricOperationVtbl struct {
	ole.IUnknownVtbl
	get_Metadata uintptr
	GetData      uintptr
	Acknowledge  uintptr
}

func (v *comFabricOperation) vtable() *comFabricOperationVtbl {
	return (*comFabricOperationVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricOperation) GetMetadata() (rt *FabricOperationMetadata, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Metadata,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricOperationMetadata)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}
func (v *comFabricOperation) GetData() (count uint32, buffers *FabricOperationDataBuffer, err error) {
	var p_0 uint32
	defer func() {
		count = p_0
	}()
	var p_1 *innerFabricOperationDataBuffer
	defer func() {
		buffers = p_1.toGoStruct()
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetData,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricOperation) Acknowledge() (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().Acknowledge,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricOperationData struct {
	ole.IUnknown
}

type comFabricOperationDataVtbl struct {
	ole.IUnknownVtbl
	GetData uintptr
}

func (v *comFabricOperationData) vtable() *comFabricOperationDataVtbl {
	return (*comFabricOperationDataVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricOperationData) GetData() (count uint32, buffers *FabricOperationDataBuffer, err error) {
	var p_0 uint32
	defer func() {
		count = p_0
	}()
	var p_1 *innerFabricOperationDataBuffer
	defer func() {
		buffers = p_1.toGoStruct()
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetData,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricOperationStream struct {
	ole.IUnknown
}

type comFabricOperationStreamVtbl struct {
	ole.IUnknownVtbl
	BeginGetOperation uintptr
	EndGetOperation   uintptr
}

func (v *comFabricOperationStream) vtable() *comFabricOperationStreamVtbl {
	return (*comFabricOperationStreamVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricOperationStream) beginGetOperation(
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_1 *comFabricAsyncOperationContext
	defer func() {
		context = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().BeginGetOperation,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricOperationStream2 struct {
	comFabricOperationStream
}

type comFabricOperationStream2Vtbl struct {
	comFabricOperationStreamVtbl
	ReportFault uintptr
}

func (v *comFabricOperationStream2) vtable() *comFabricOperationStream2Vtbl {
	return (*comFabricOperationStream2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricOperationStream2) ReportFault(
	faultType FabricFaultType,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportFault,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(faultType),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricOperationDataStream struct {
	ole.IUnknown
}

type comFabricOperationDataStreamVtbl struct {
	ole.IUnknownVtbl
	BeginGetNext uintptr
	EndGetNext   uintptr
}

func (v *comFabricOperationDataStream) vtable() *comFabricOperationDataStreamVtbl {
	return (*comFabricOperationDataStreamVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricOperationDataStream) beginGetNext(
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_1 *comFabricAsyncOperationContext
	defer func() {
		context = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().BeginGetNext,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricReplicator struct {
	ole.IUnknown
}

type comFabricReplicatorVtbl struct {
	ole.IUnknownVtbl
	BeginOpen            uintptr
	EndOpen              uintptr
	BeginChangeRole      uintptr
	EndChangeRole        uintptr
	BeginUpdateEpoch     uintptr
	EndUpdateEpoch       uintptr
	BeginClose           uintptr
	EndClose             uintptr
	Abort                uintptr
	GetCurrentProgress   uintptr
	GetCatchUpCapability uintptr
}

func (v *comFabricReplicator) vtable() *comFabricReplicatorVtbl {
	return (*comFabricReplicatorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricReplicator) beginOpen(
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_1 *comFabricAsyncOperationContext
	defer func() {
		context = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().BeginOpen,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricReplicator) beginChangeRole(
	epoch *FabricEpoch,
	role FabricReplicaRole,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *innerFabricEpoch
	p_0 = epoch.toInnerStruct()
	var p_3 *comFabricAsyncOperationContext
	defer func() {
		context = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginChangeRole,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(role),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricReplicator) endChangeRole(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndChangeRole,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricReplicator) beginUpdateEpoch(
	epoch *FabricEpoch,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *innerFabricEpoch
	p_0 = epoch.toInnerStruct()
	var p_2 *comFabricAsyncOperationContext
	defer func() {
		context = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginUpdateEpoch,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricReplicator) endUpdateEpoch(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndUpdateEpoch,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricReplicator) beginClose(
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_1 *comFabricAsyncOperationContext
	defer func() {
		context = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().BeginClose,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricReplicator) endClose(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndClose,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricReplicator) Abort() (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().Abort,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}
func (v *comFabricReplicator) GetCurrentProgress() (lastSequenceNumber int64, err error) {
	var p_0 int64
	defer func() {
		lastSequenceNumber = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetCurrentProgress,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricReplicator) GetCatchUpCapability() (fromSequenceNumber int64, err error) {
	var p_0 int64
	defer func() {
		fromSequenceNumber = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetCatchUpCapability,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricPrimaryReplicator struct {
	comFabricReplicator
}

type comFabricPrimaryReplicatorVtbl struct {
	comFabricReplicatorVtbl
	BeginOnDataLoss                      uintptr
	EndOnDataLoss                        uintptr
	UpdateCatchUpReplicaSetConfiguration uintptr
	BeginWaitForCatchUpQuorum            uintptr
	EndWaitForCatchUpQuorum              uintptr
	UpdateCurrentReplicaSetConfiguration uintptr
	BeginBuildReplica                    uintptr
	EndBuildReplica                      uintptr
	RemoveReplica                        uintptr
}

func (v *comFabricPrimaryReplicator) vtable() *comFabricPrimaryReplicatorVtbl {
	return (*comFabricPrimaryReplicatorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricPrimaryReplicator) beginOnDataLoss(
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_1 *comFabricAsyncOperationContext
	defer func() {
		context = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().BeginOnDataLoss,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricPrimaryReplicator) endOnDataLoss(
	context *comFabricAsyncOperationContext,
) (isStateChanged bool, err error) {
	var p_1 bool
	defer func() {
		isStateChanged = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndOnDataLoss,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricPrimaryReplicator) UpdateCatchUpReplicaSetConfiguration(
	currentConfiguration *FabricReplicaSetConfiguration,
	previousConfiguration *FabricReplicaSetConfiguration,
) (err error) {
	var p_0 *innerFabricReplicaSetConfiguration
	p_0 = currentConfiguration.toInnerStruct()
	var p_1 *innerFabricReplicaSetConfiguration
	p_1 = previousConfiguration.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().UpdateCatchUpReplicaSetConfiguration,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricPrimaryReplicator) beginWaitForCatchUpQuorum(
	catchUpMode FabricReplicaSetQuorumMode,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_2 *comFabricAsyncOperationContext
	defer func() {
		context = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginWaitForCatchUpQuorum,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(catchUpMode),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricPrimaryReplicator) endWaitForCatchUpQuorum(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndWaitForCatchUpQuorum,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricPrimaryReplicator) UpdateCurrentReplicaSetConfiguration(
	currentConfiguration *FabricReplicaSetConfiguration,
) (err error) {
	var p_0 *innerFabricReplicaSetConfiguration
	p_0 = currentConfiguration.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().UpdateCurrentReplicaSetConfiguration,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricPrimaryReplicator) beginBuildReplica(
	replica *FabricReplicaInformation,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *innerFabricReplicaInformation
	p_0 = replica.toInnerStruct()
	var p_2 *comFabricAsyncOperationContext
	defer func() {
		context = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginBuildReplica,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricPrimaryReplicator) endBuildReplica(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndBuildReplica,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricPrimaryReplicator) RemoveReplica(
	replicaId int64,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().RemoveReplica,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(replicaId),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricReplicatorCatchupSpecificQuorum struct {
	ole.IUnknown
}

type comFabricReplicatorCatchupSpecificQuorumVtbl struct {
	ole.IUnknownVtbl
}

func (v *comFabricReplicatorCatchupSpecificQuorum) vtable() *comFabricReplicatorCatchupSpecificQuorumVtbl {
	return (*comFabricReplicatorCatchupSpecificQuorumVtbl)(unsafe.Pointer(v.RawVTable))
}

type comFabricAtomicGroupStateReplicator struct {
	ole.IUnknown
}

type comFabricAtomicGroupStateReplicatorVtbl struct {
	ole.IUnknownVtbl
	CreateAtomicGroup                  uintptr
	BeginReplicateAtomicGroupOperation uintptr
	EndReplicateAtomicGroupOperation   uintptr
	BeginReplicateAtomicGroupCommit    uintptr
	EndReplicateAtomicGroupCommit      uintptr
	BeginReplicateAtomicGroupRollback  uintptr
	EndReplicateAtomicGroupRollback    uintptr
}

func (v *comFabricAtomicGroupStateReplicator) vtable() *comFabricAtomicGroupStateReplicatorVtbl {
	return (*comFabricAtomicGroupStateReplicatorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricAtomicGroupStateReplicator) CreateAtomicGroup() (AtomicGroupId int64, err error) {
	var p_0 int64
	defer func() {
		AtomicGroupId = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().CreateAtomicGroup,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricAtomicGroupStateReplicator) beginReplicateAtomicGroupOperation(
	atomicGroupId int64,
	operationData *comFabricOperationData,
	callback *comIFabricAsyncOperationCallback,
) (operationSequenceNumber int64, context *comFabricAsyncOperationContext, err error) {
	var p_3 int64
	defer func() {
		operationSequenceNumber = p_3
	}()
	var p_4 *comFabricAsyncOperationContext
	defer func() {
		context = p_4
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginReplicateAtomicGroupOperation,
		6,
		uintptr(unsafe.Pointer(v)),
		uintptr(atomicGroupId),
		uintptr(unsafe.Pointer(operationData)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_3)),
		uintptr(unsafe.Pointer(&p_4)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricAtomicGroupStateReplicator) endReplicateAtomicGroupOperation(
	context *comFabricAsyncOperationContext,
) (operationSequenceNumber int64, err error) {
	var p_1 int64
	defer func() {
		operationSequenceNumber = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndReplicateAtomicGroupOperation,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricAtomicGroupStateReplicator) beginReplicateAtomicGroupCommit(
	atomicGroupId int64,
	callback *comIFabricAsyncOperationCallback,
) (commitSequenceNumber int64, context *comFabricAsyncOperationContext, err error) {
	var p_2 int64
	defer func() {
		commitSequenceNumber = p_2
	}()
	var p_3 *comFabricAsyncOperationContext
	defer func() {
		context = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginReplicateAtomicGroupCommit,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(atomicGroupId),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricAtomicGroupStateReplicator) endReplicateAtomicGroupCommit(
	context *comFabricAsyncOperationContext,
) (commitSequenceNumber int64, err error) {
	var p_1 int64
	defer func() {
		commitSequenceNumber = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndReplicateAtomicGroupCommit,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricAtomicGroupStateReplicator) beginReplicateAtomicGroupRollback(
	atomicGroupId int64,
	callback *comIFabricAsyncOperationCallback,
) (rollbackSequenceNumber int64, context *comFabricAsyncOperationContext, err error) {
	var p_2 int64
	defer func() {
		rollbackSequenceNumber = p_2
	}()
	var p_3 *comFabricAsyncOperationContext
	defer func() {
		context = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginReplicateAtomicGroupRollback,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(atomicGroupId),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricAtomicGroupStateReplicator) endReplicateAtomicGroupRollback(
	context *comFabricAsyncOperationContext,
) (rollbackSequenceNumber int64, err error) {
	var p_1 int64
	defer func() {
		rollbackSequenceNumber = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndReplicateAtomicGroupRollback,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricAtomicGroupStateProvider struct {
	ole.IUnknown
}

type comFabricAtomicGroupStateProviderVtbl struct {
	ole.IUnknownVtbl
	BeginAtomicGroupCommit   uintptr
	EndAtomicGroupCommit     uintptr
	BeginAtomicGroupRollback uintptr
	EndAtomicGroupRollback   uintptr
	BeginUndoProgress        uintptr
	EndUndoProgress          uintptr
}

func (v *comFabricAtomicGroupStateProvider) vtable() *comFabricAtomicGroupStateProviderVtbl {
	return (*comFabricAtomicGroupStateProviderVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricAtomicGroupStateProvider) beginAtomicGroupCommit(
	atomicGroupId int64,
	commitSequenceNumber int64,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_3 *comFabricAsyncOperationContext
	defer func() {
		context = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginAtomicGroupCommit,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(atomicGroupId),
		uintptr(commitSequenceNumber),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricAtomicGroupStateProvider) endAtomicGroupCommit(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndAtomicGroupCommit,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricAtomicGroupStateProvider) beginAtomicGroupRollback(
	atomicGroupId int64,
	rollbackequenceNumber int64,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_3 *comFabricAsyncOperationContext
	defer func() {
		context = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginAtomicGroupRollback,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(atomicGroupId),
		uintptr(rollbackequenceNumber),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricAtomicGroupStateProvider) endAtomicGroupRollback(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndAtomicGroupRollback,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricAtomicGroupStateProvider) beginUndoProgress(
	fromCommitSequenceNumber int64,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_2 *comFabricAsyncOperationContext
	defer func() {
		context = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginUndoProgress,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(fromCommitSequenceNumber),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricAtomicGroupStateProvider) endUndoProgress(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndUndoProgress,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type ComFabricServiceGroupFactory struct {
	ole.IUnknown
}

type comFabricServiceGroupFactoryVtbl struct {
	ole.IUnknownVtbl
}

func (v *ComFabricServiceGroupFactory) vtable() *comFabricServiceGroupFactoryVtbl {
	return (*comFabricServiceGroupFactoryVtbl)(unsafe.Pointer(v.RawVTable))
}

type ComFabricServiceGroupFactoryBuilder struct {
	ole.IUnknown
}

type comFabricServiceGroupFactoryBuilderVtbl struct {
	ole.IUnknownVtbl
	AddStatelessServiceFactory uintptr
	AddStatefulServiceFactory  uintptr
	RemoveServiceFactory       uintptr
	ToServiceGroupFactory      uintptr
}

func (v *ComFabricServiceGroupFactoryBuilder) vtable() *comFabricServiceGroupFactoryBuilderVtbl {
	return (*comFabricServiceGroupFactoryBuilderVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *ComFabricServiceGroupFactoryBuilder) AddStatelessServiceFactory(
	memberServiceType string,
	factory *comFabricStatelessServiceFactory,
) (err error) {
	var p_0 *uint16
	s_11, _ := windows.UTF16PtrFromString(memberServiceType)
	p_0 = s_11

	hr, _, err1 := syscall.Syscall(
		v.vtable().AddStatelessServiceFactory,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(factory)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *ComFabricServiceGroupFactoryBuilder) AddStatefulServiceFactory(
	memberServiceType string,
	factory *comFabricStatefulServiceFactory,
) (err error) {
	var p_0 *uint16
	s_12, _ := windows.UTF16PtrFromString(memberServiceType)
	p_0 = s_12

	hr, _, err1 := syscall.Syscall(
		v.vtable().AddStatefulServiceFactory,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(factory)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *ComFabricServiceGroupFactoryBuilder) RemoveServiceFactory(
	memberServiceType string,
) (err error) {
	var p_0 *uint16
	s_13, _ := windows.UTF16PtrFromString(memberServiceType)
	p_0 = s_13

	hr, _, err1 := syscall.Syscall(
		v.vtable().RemoveServiceFactory,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *ComFabricServiceGroupFactoryBuilder) ToServiceGroupFactory() (factory *ComFabricServiceGroupFactory, err error) {
	var p_0 *ComFabricServiceGroupFactory
	defer func() {
		factory = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ToServiceGroupFactory,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricServiceGroupPartition struct {
	ole.IUnknown
}

type comFabricServiceGroupPartitionVtbl struct {
	ole.IUnknownVtbl
	ResolveMember uintptr
}

func (v *comFabricServiceGroupPartition) vtable() *comFabricServiceGroupPartitionVtbl {
	return (*comFabricServiceGroupPartitionVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricServiceGroupPartition) ResolveMember(
	name string,
	riid windows.GUID,
) (member interface{}, err error) {
	var p_0 *uint16
	s_14, _ := windows.UTF16PtrFromString(name)
	p_0 = s_14

	var p_2 unsafe.Pointer
	defer func() {
		member = fromUnsafePointer(p_2)
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().ResolveMember,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&riid)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricCodePackageActivationContext struct {
	ole.IUnknown
}

type comFabricCodePackageActivationContextVtbl struct {
	ole.IUnknownVtbl
	get_ContextId                               uintptr
	get_CodePackageName                         uintptr
	get_CodePackageVersion                      uintptr
	get_WorkDirectory                           uintptr
	get_LogDirectory                            uintptr
	get_TempDirectory                           uintptr
	get_ServiceTypes                            uintptr
	get_ServiceGroupTypes                       uintptr
	get_ApplicationPrincipals                   uintptr
	get_ServiceEndpointResources                uintptr
	GetServiceEndpointResource                  uintptr
	GetCodePackageNames                         uintptr
	GetConfigurationPackageNames                uintptr
	GetDataPackageNames                         uintptr
	GetCodePackage                              uintptr
	GetConfigurationPackage                     uintptr
	GetDataPackage                              uintptr
	RegisterCodePackageChangeHandler            uintptr
	UnregisterCodePackageChangeHandler          uintptr
	RegisterConfigurationPackageChangeHandler   uintptr
	UnregisterConfigurationPackageChangeHandler uintptr
	RegisterDataPackageChangeHandler            uintptr
	UnregisterDataPackageChangeHandler          uintptr
}

func (v *comFabricCodePackageActivationContext) vtable() *comFabricCodePackageActivationContextVtbl {
	return (*comFabricCodePackageActivationContextVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricCodePackageActivationContext) GetContextId() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_ContextId,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}
func (v *comFabricCodePackageActivationContext) GetCodePackageName() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_CodePackageName,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}
func (v *comFabricCodePackageActivationContext) GetCodePackageVersion() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_CodePackageVersion,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}
func (v *comFabricCodePackageActivationContext) GetWorkDirectory() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_WorkDirectory,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}
func (v *comFabricCodePackageActivationContext) GetLogDirectory() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_LogDirectory,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}
func (v *comFabricCodePackageActivationContext) GetTempDirectory() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_TempDirectory,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}
func (v *comFabricCodePackageActivationContext) GetServiceTypes() (rt []FabricServiceTypeDescription, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_ServiceTypes,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricServiceTypeDescriptionList)(unsafe.Pointer(hr))

	{
		var innerlst []innerFabricServiceTypeDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(tmp.Items), int(tmp.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceTypeDescription

			tmpitem = *item.toGoStruct()

			rt = append(rt, tmpitem)
		}

	}
	return
}
func (v *comFabricCodePackageActivationContext) GetServiceGroupTypes() (rt []FabricServiceGroupTypeDescription, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_ServiceGroupTypes,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricServiceGroupTypeDescriptionList)(unsafe.Pointer(hr))

	{
		var innerlst []innerFabricServiceGroupTypeDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(tmp.Items), int(tmp.Count))

		for _, item := range innerlst {
			var tmpitem FabricServiceGroupTypeDescription

			tmpitem = *item.toGoStruct()

			rt = append(rt, tmpitem)
		}

	}
	return
}
func (v *comFabricCodePackageActivationContext) GetApplicationPrincipals() (rt *FabricApplicationPrincipalsDescription, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_ApplicationPrincipals,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricApplicationPrincipalsDescription)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}
func (v *comFabricCodePackageActivationContext) GetServiceEndpointResources() (rt []FabricEndpointResourceDescription, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_ServiceEndpointResources,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricEndpointResourceDescriptionList)(unsafe.Pointer(hr))

	{
		var innerlst []innerFabricEndpointResourceDescription
		sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(tmp.Items), int(tmp.Count))

		for _, item := range innerlst {
			var tmpitem FabricEndpointResourceDescription

			tmpitem = *item.toGoStruct()

			rt = append(rt, tmpitem)
		}

	}
	return
}
func (v *comFabricCodePackageActivationContext) GetServiceEndpointResource(
	serviceEndpointResourceName string,
) (bufferedValue *FabricEndpointResourceDescription, err error) {
	var p_0 *uint16
	s_15, _ := windows.UTF16PtrFromString(serviceEndpointResourceName)
	p_0 = s_15

	var p_1 *innerFabricEndpointResourceDescription
	defer func() {
		bufferedValue = p_1.toGoStruct()
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetServiceEndpointResource,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) GetCodePackageNames() (names *comFabricStringListResult, err error) {
	var p_0 *comFabricStringListResult
	defer func() {
		names = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetCodePackageNames,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) GetConfigurationPackageNames() (names *comFabricStringListResult, err error) {
	var p_0 *comFabricStringListResult
	defer func() {
		names = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetConfigurationPackageNames,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) GetDataPackageNames() (names *comFabricStringListResult, err error) {
	var p_0 *comFabricStringListResult
	defer func() {
		names = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetDataPackageNames,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) GetCodePackage(
	codePackageName string,
) (codePackage *comFabricCodePackage, err error) {
	var p_0 *uint16
	s_16, _ := windows.UTF16PtrFromString(codePackageName)
	p_0 = s_16

	var p_1 *comFabricCodePackage
	defer func() {
		codePackage = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetCodePackage,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) GetConfigurationPackage(
	configPackageName string,
) (configPackage *comFabricConfigurationPackage, err error) {
	var p_0 *uint16
	s_17, _ := windows.UTF16PtrFromString(configPackageName)
	p_0 = s_17

	var p_1 *comFabricConfigurationPackage
	defer func() {
		configPackage = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetConfigurationPackage,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) GetDataPackage(
	dataPackageName string,
) (dataPackage *comFabricDataPackage, err error) {
	var p_0 *uint16
	s_18, _ := windows.UTF16PtrFromString(dataPackageName)
	p_0 = s_18

	var p_1 *comFabricDataPackage
	defer func() {
		dataPackage = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetDataPackage,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) RegisterCodePackageChangeHandler(
	callback *comFabricCodePackageChangeHandler,
) (callbackHandle int64, err error) {
	var p_1 int64
	defer func() {
		callbackHandle = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().RegisterCodePackageChangeHandler,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) UnregisterCodePackageChangeHandler(
	callbackHandle int64,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().UnregisterCodePackageChangeHandler,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(callbackHandle),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) RegisterConfigurationPackageChangeHandler(
	callback *comFabricConfigurationPackageChangeHandler,
) (callbackHandle int64, err error) {
	var p_1 int64
	defer func() {
		callbackHandle = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().RegisterConfigurationPackageChangeHandler,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) UnregisterConfigurationPackageChangeHandler(
	callbackHandle int64,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().UnregisterConfigurationPackageChangeHandler,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(callbackHandle),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) RegisterDataPackageChangeHandler(
	callback *comFabricDataPackageChangeHandler,
) (callbackHandle int64, err error) {
	var p_1 int64
	defer func() {
		callbackHandle = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().RegisterDataPackageChangeHandler,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext) UnregisterDataPackageChangeHandler(
	callbackHandle int64,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().UnregisterDataPackageChangeHandler,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(callbackHandle),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricCodePackageActivationContext2 struct {
	comFabricCodePackageActivationContext
}

type comFabricCodePackageActivationContext2Vtbl struct {
	comFabricCodePackageActivationContextVtbl
	get_ApplicationName       uintptr
	get_ApplicationTypeName   uintptr
	GetServiceManifestName    uintptr
	GetServiceManifestVersion uintptr
}

func (v *comFabricCodePackageActivationContext2) vtable() *comFabricCodePackageActivationContext2Vtbl {
	return (*comFabricCodePackageActivationContext2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricCodePackageActivationContext2) GetApplicationName() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_ApplicationName,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}
func (v *comFabricCodePackageActivationContext2) GetApplicationTypeName() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_ApplicationTypeName,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}
func (v *comFabricCodePackageActivationContext2) GetServiceManifestName() (serviceManifestName *comFabricStringResult, err error) {
	var p_0 *comFabricStringResult
	defer func() {
		serviceManifestName = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetServiceManifestName,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext2) GetServiceManifestVersion() (serviceManifestVersion *comFabricStringResult, err error) {
	var p_0 *comFabricStringResult
	defer func() {
		serviceManifestVersion = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetServiceManifestVersion,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricCodePackageActivationContext3 struct {
	comFabricCodePackageActivationContext2
}

type comFabricCodePackageActivationContext3Vtbl struct {
	comFabricCodePackageActivationContext2Vtbl
	ReportApplicationHealth            uintptr
	ReportDeployedApplicationHealth    uintptr
	ReportDeployedServicePackageHealth uintptr
}

func (v *comFabricCodePackageActivationContext3) vtable() *comFabricCodePackageActivationContext3Vtbl {
	return (*comFabricCodePackageActivationContext3Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricCodePackageActivationContext3) ReportApplicationHealth(
	healthInfo *FabricHealthInformation,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportApplicationHealth,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext3) ReportDeployedApplicationHealth(
	healthInfo *FabricHealthInformation,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportDeployedApplicationHealth,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext3) ReportDeployedServicePackageHealth(
	healthInfo *FabricHealthInformation,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportDeployedServicePackageHealth,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricCodePackageActivationContext4 struct {
	comFabricCodePackageActivationContext3
}

type comFabricCodePackageActivationContext4Vtbl struct {
	comFabricCodePackageActivationContext3Vtbl
	ReportApplicationHealth2            uintptr
	ReportDeployedApplicationHealth2    uintptr
	ReportDeployedServicePackageHealth2 uintptr
}

func (v *comFabricCodePackageActivationContext4) vtable() *comFabricCodePackageActivationContext4Vtbl {
	return (*comFabricCodePackageActivationContext4Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricCodePackageActivationContext4) ReportApplicationHealth2(
	healthInfo *FabricHealthInformation,
	sendOptions *FabricHealthReportSendOptions,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	var p_1 *innerFabricHealthReportSendOptions
	p_1 = sendOptions.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportApplicationHealth2,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext4) ReportDeployedApplicationHealth2(
	healthInfo *FabricHealthInformation,
	sendOptions *FabricHealthReportSendOptions,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	var p_1 *innerFabricHealthReportSendOptions
	p_1 = sendOptions.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportDeployedApplicationHealth2,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivationContext4) ReportDeployedServicePackageHealth2(
	healthInfo *FabricHealthInformation,
	sendOptions *FabricHealthReportSendOptions,
) (err error) {
	var p_0 *innerFabricHealthInformation
	p_0 = healthInfo.toInnerStruct()
	var p_1 *innerFabricHealthReportSendOptions
	p_1 = sendOptions.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().ReportDeployedServicePackageHealth2,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricCodePackageActivationContext5 struct {
	comFabricCodePackageActivationContext4
}

type comFabricCodePackageActivationContext5Vtbl struct {
	comFabricCodePackageActivationContext4Vtbl
	get_ServiceListenAddress  uintptr
	get_ServicePublishAddress uintptr
}

func (v *comFabricCodePackageActivationContext5) vtable() *comFabricCodePackageActivationContext5Vtbl {
	return (*comFabricCodePackageActivationContext5Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricCodePackageActivationContext5) GetServiceListenAddress() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_ServiceListenAddress,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}
func (v *comFabricCodePackageActivationContext5) GetServicePublishAddress() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_ServicePublishAddress,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}

type comFabricCodePackageActivationContext6 struct {
	comFabricCodePackageActivationContext5
}

type comFabricCodePackageActivationContext6Vtbl struct {
	comFabricCodePackageActivationContext5Vtbl
	GetDirectory uintptr
}

func (v *comFabricCodePackageActivationContext6) vtable() *comFabricCodePackageActivationContext6Vtbl {
	return (*comFabricCodePackageActivationContext6Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricCodePackageActivationContext6) GetDirectory(
	logicalDirectoryName string,
) (directoryPath *comFabricStringResult, err error) {
	var p_0 *uint16
	s_19, _ := windows.UTF16PtrFromString(logicalDirectoryName)
	p_0 = s_19

	var p_1 *comFabricStringResult
	defer func() {
		directoryPath = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetDirectory,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricCodePackage struct {
	ole.IUnknown
}

type comFabricCodePackageVtbl struct {
	ole.IUnknownVtbl
	get_Description uintptr
	get_Path        uintptr
}

func (v *comFabricCodePackage) vtable() *comFabricCodePackageVtbl {
	return (*comFabricCodePackageVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricCodePackage) GetDescription() (rt *FabricCodePackageDescription, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Description,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricCodePackageDescription)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}
func (v *comFabricCodePackage) GetPath() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Path,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}

type comFabricCodePackage2 struct {
	comFabricCodePackage
}

type comFabricCodePackage2Vtbl struct {
	comFabricCodePackageVtbl
	get_SetupEntryPointRunAsPolicy uintptr
	get_EntryPointRunAsPolicy      uintptr
}

func (v *comFabricCodePackage2) vtable() *comFabricCodePackage2Vtbl {
	return (*comFabricCodePackage2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricCodePackage2) GetSetupEntryPointRunAsPolicy() (rt *FabricRunasPolicyDescription, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_SetupEntryPointRunAsPolicy,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricRunasPolicyDescription)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}
func (v *comFabricCodePackage2) GetEntryPointRunAsPolicy() (rt *FabricRunasPolicyDescription, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_EntryPointRunAsPolicy,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricRunasPolicyDescription)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}

type comFabricConfigurationPackage struct {
	ole.IUnknown
}

type comFabricConfigurationPackageVtbl struct {
	ole.IUnknownVtbl
	get_Description uintptr
	get_Path        uintptr
	get_Settings    uintptr
	GetSection      uintptr
	GetValue        uintptr
	DecryptValue    uintptr
}

func (v *comFabricConfigurationPackage) vtable() *comFabricConfigurationPackageVtbl {
	return (*comFabricConfigurationPackageVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricConfigurationPackage) GetDescription() (rt *FabricConfigurationPackageDescription, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Description,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricConfigurationPackageDescription)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}
func (v *comFabricConfigurationPackage) GetPath() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Path,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}
func (v *comFabricConfigurationPackage) GetSettings() (rt *FabricConfigurationSettings, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Settings,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricConfigurationSettings)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}
func (v *comFabricConfigurationPackage) GetSection(
	sectionName string,
) (bufferedValue *FabricConfigurationSection, err error) {
	var p_0 *uint16
	s_20, _ := windows.UTF16PtrFromString(sectionName)
	p_0 = s_20

	var p_1 *innerFabricConfigurationSection
	defer func() {
		bufferedValue = p_1.toGoStruct()
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetSection,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricConfigurationPackage) GetValue(
	sectionName string,
	parameterName string,
) (isEncrypted bool, bufferedValue string, err error) {
	var p_0 *uint16
	s_21, _ := windows.UTF16PtrFromString(sectionName)
	p_0 = s_21

	var p_1 *uint16
	s_22, _ := windows.UTF16PtrFromString(parameterName)
	p_1 = s_22

	var p_2 bool
	defer func() {
		isEncrypted = p_2
	}()
	var p_3 *uint16
	defer func() {
		bufferedValue = windows.UTF16PtrToString(p_3)
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().GetValue,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(unsafe.Pointer(&p_2)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricConfigurationPackage) DecryptValue(
	encryptedValue string,
) (decryptedValue *comFabricStringResult, err error) {
	var p_0 *uint16
	s_23, _ := windows.UTF16PtrFromString(encryptedValue)
	p_0 = s_23

	var p_1 *comFabricStringResult
	defer func() {
		decryptedValue = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().DecryptValue,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricConfigurationPackage2 struct {
	comFabricConfigurationPackage
}

type comFabricConfigurationPackage2Vtbl struct {
	comFabricConfigurationPackageVtbl
	GetValues uintptr
}

func (v *comFabricConfigurationPackage2) vtable() *comFabricConfigurationPackage2Vtbl {
	return (*comFabricConfigurationPackage2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricConfigurationPackage2) GetValues(
	sectionName string,
	parameterPrefix string,
) (bufferedValue []FabricConfigurationParameter, err error) {
	var p_0 *uint16
	s_24, _ := windows.UTF16PtrFromString(sectionName)
	p_0 = s_24

	var p_1 *uint16
	s_25, _ := windows.UTF16PtrFromString(parameterPrefix)
	p_1 = s_25

	var p_2 *innerFabricConfigurationParameterList
	defer func() {
		{
			var innerlst []innerFabricConfigurationParameter
			sliceCast(unsafe.Pointer(&innerlst), unsafe.Pointer(p_2.Items), int(p_2.Count))

			for _, item := range innerlst {
				var tmpitem FabricConfigurationParameter

				tmpitem = *item.toGoStruct()

				bufferedValue = append(bufferedValue, tmpitem)
			}

		}
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().GetValues,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricDataPackage struct {
	ole.IUnknown
}

type comFabricDataPackageVtbl struct {
	ole.IUnknownVtbl
	get_Description uintptr
	get_Path        uintptr
}

func (v *comFabricDataPackage) vtable() *comFabricDataPackageVtbl {
	return (*comFabricDataPackageVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricDataPackage) GetDescription() (rt *FabricDataPackageDescription, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Description,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricDataPackageDescription)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}
func (v *comFabricDataPackage) GetPath() (rt string, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Path,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*uint16)(unsafe.Pointer(hr))

	rt = windows.UTF16PtrToString(tmp)
	return
}

type comFabricCodePackageChangeHandler struct {
	ole.IUnknown
}

type comFabricCodePackageChangeHandlerVtbl struct {
	ole.IUnknownVtbl
	OnPackageAdded    uintptr
	OnPackageRemoved  uintptr
	OnPackageModified uintptr
}

func (v *comFabricCodePackageChangeHandler) vtable() *comFabricCodePackageChangeHandlerVtbl {
	return (*comFabricCodePackageChangeHandlerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricCodePackageChangeHandler) OnPackageAdded(
	source *comFabricCodePackageActivationContext,
	codePackage *comFabricCodePackage,
) (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().OnPackageAdded,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(source)),
		uintptr(unsafe.Pointer(codePackage)),
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}
func (v *comFabricCodePackageChangeHandler) OnPackageRemoved(
	source *comFabricCodePackageActivationContext,
	codePackage *comFabricCodePackage,
) (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().OnPackageRemoved,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(source)),
		uintptr(unsafe.Pointer(codePackage)),
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}
func (v *comFabricCodePackageChangeHandler) OnPackageModified(
	source *comFabricCodePackageActivationContext,
	previousCodePackage *comFabricCodePackage,
	codePackage *comFabricCodePackage,
) (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall6(
		v.vtable().OnPackageModified,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(source)),
		uintptr(unsafe.Pointer(previousCodePackage)),
		uintptr(unsafe.Pointer(codePackage)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}

type comFabricConfigurationPackageChangeHandler struct {
	ole.IUnknown
}

type comFabricConfigurationPackageChangeHandlerVtbl struct {
	ole.IUnknownVtbl
	OnPackageAdded    uintptr
	OnPackageRemoved  uintptr
	OnPackageModified uintptr
}

func (v *comFabricConfigurationPackageChangeHandler) vtable() *comFabricConfigurationPackageChangeHandlerVtbl {
	return (*comFabricConfigurationPackageChangeHandlerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricConfigurationPackageChangeHandler) OnPackageAdded(
	source *comFabricCodePackageActivationContext,
	configPackage *comFabricConfigurationPackage,
) (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().OnPackageAdded,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(source)),
		uintptr(unsafe.Pointer(configPackage)),
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}
func (v *comFabricConfigurationPackageChangeHandler) OnPackageRemoved(
	source *comFabricCodePackageActivationContext,
	configPackage *comFabricConfigurationPackage,
) (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().OnPackageRemoved,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(source)),
		uintptr(unsafe.Pointer(configPackage)),
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}
func (v *comFabricConfigurationPackageChangeHandler) OnPackageModified(
	source *comFabricCodePackageActivationContext,
	previousConfigPackage *comFabricConfigurationPackage,
	configPackage *comFabricConfigurationPackage,
) (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall6(
		v.vtable().OnPackageModified,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(source)),
		uintptr(unsafe.Pointer(previousConfigPackage)),
		uintptr(unsafe.Pointer(configPackage)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}

type comFabricDataPackageChangeHandler struct {
	ole.IUnknown
}

type comFabricDataPackageChangeHandlerVtbl struct {
	ole.IUnknownVtbl
	OnPackageAdded    uintptr
	OnPackageRemoved  uintptr
	OnPackageModified uintptr
}

func (v *comFabricDataPackageChangeHandler) vtable() *comFabricDataPackageChangeHandlerVtbl {
	return (*comFabricDataPackageChangeHandlerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricDataPackageChangeHandler) OnPackageAdded(
	source *comFabricCodePackageActivationContext,
	dataPackage *comFabricDataPackage,
) (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().OnPackageAdded,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(source)),
		uintptr(unsafe.Pointer(dataPackage)),
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}
func (v *comFabricDataPackageChangeHandler) OnPackageRemoved(
	source *comFabricCodePackageActivationContext,
	dataPackage *comFabricDataPackage,
) (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().OnPackageRemoved,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(source)),
		uintptr(unsafe.Pointer(dataPackage)),
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}
func (v *comFabricDataPackageChangeHandler) OnPackageModified(
	source *comFabricCodePackageActivationContext,
	previousDataPackage *comFabricDataPackage,
	dataPackage *comFabricDataPackage,
) (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall6(
		v.vtable().OnPackageModified,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(source)),
		uintptr(unsafe.Pointer(previousDataPackage)),
		uintptr(unsafe.Pointer(dataPackage)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}

type comFabricProcessExitHandler struct {
	ole.IUnknown
}

type comFabricProcessExitHandlerVtbl struct {
	ole.IUnknownVtbl
	FabricProcessExited uintptr
}

func (v *comFabricProcessExitHandler) vtable() *comFabricProcessExitHandlerVtbl {
	return (*comFabricProcessExitHandlerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricProcessExitHandler) FabricProcessExited() (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().FabricProcessExited,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}

type comFabricTransactionBase struct {
	ole.IUnknown
}

type comFabricTransactionBaseVtbl struct {
	ole.IUnknownVtbl
	get_Id             uintptr
	get_IsolationLevel uintptr
}

func (v *comFabricTransactionBase) vtable() *comFabricTransactionBaseVtbl {
	return (*comFabricTransactionBaseVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricTransactionBase) GetId() (rt *windows.GUID, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Id,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*windows.GUID)(unsafe.Pointer(hr))

	rt = tmp
	return
}
func (v *comFabricTransactionBase) GetIsolationLevel() (rt FabricTransactionIsolationLevel, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_IsolationLevel,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	_ = err1
	rt = FabricTransactionIsolationLevel(hr)
	return
}

type comFabricTransaction struct {
	comFabricTransactionBase
}

type comFabricTransactionVtbl struct {
	comFabricTransactionBaseVtbl
	BeginCommit uintptr
	EndCommit   uintptr
	Rollback    uintptr
}

func (v *comFabricTransaction) vtable() *comFabricTransactionVtbl {
	return (*comFabricTransactionVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricTransaction) beginCommit(
	timeoutMilliseconds uint32,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_2 *comFabricAsyncOperationContext
	defer func() {
		context = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginCommit,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(timeoutMilliseconds),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricTransaction) endCommit(
	context *comFabricAsyncOperationContext,
) (commitSequenceNumber int64, err error) {
	var p_1 int64
	defer func() {
		commitSequenceNumber = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndCommit,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricTransaction) Rollback() (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().Rollback,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}

type comFabricKeyValueStoreReplica struct {
	comFabricStatefulServiceReplica
}

type comFabricKeyValueStoreReplicaVtbl struct {
	comFabricStatefulServiceReplicaVtbl
	GetCurrentEpoch          uintptr
	UpdateReplicatorSettings uintptr
	CreateTransaction        uintptr
	Add                      uintptr
	Remove                   uintptr
	Update                   uintptr
	Get                      uintptr
	GetMetadata              uintptr
	Contains                 uintptr
	Enumerate                uintptr
	EnumerateByKey           uintptr
	EnumerateMetadata        uintptr
	EnumerateMetadataByKey   uintptr
}

func (v *comFabricKeyValueStoreReplica) vtable() *comFabricKeyValueStoreReplicaVtbl {
	return (*comFabricKeyValueStoreReplicaVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreReplica) GetCurrentEpoch() (currentEpoch FabricEpoch, err error) {
	var p_0 innerFabricEpoch
	defer func() {
		currentEpoch = *p_0.toGoStruct()
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetCurrentEpoch,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) UpdateReplicatorSettings(
	replicatorSettings *FabricReplicatorSettings,
) (err error) {
	var p_0 *innerFabricReplicatorSettings
	p_0 = replicatorSettings.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().UpdateReplicatorSettings,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) CreateTransaction() (transaction *comFabricTransaction, err error) {
	var p_0 *comFabricTransaction
	defer func() {
		transaction = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().CreateTransaction,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) Add(
	transaction *comFabricTransactionBase,
	key string,
	valueSizeInBytes int32,
	value *byte,
) (err error) {
	var p_1 *uint16
	s_26, _ := windows.UTF16PtrFromString(key)
	p_1 = s_26

	hr, _, err1 := syscall.Syscall6(
		v.vtable().Add,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(valueSizeInBytes),
		uintptr(unsafe.Pointer(value)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) Remove(
	transaction *comFabricTransactionBase,
	key string,
	checkSequenceNumber int64,
) (err error) {
	var p_1 *uint16
	s_27, _ := windows.UTF16PtrFromString(key)
	p_1 = s_27

	hr, _, err1 := syscall.Syscall6(
		v.vtable().Remove,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(checkSequenceNumber),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) Update(
	transaction *comFabricTransactionBase,
	key string,
	valueSizeInBytes int32,
	value *byte,
	checkSequenceNumber int64,
) (err error) {
	var p_1 *uint16
	s_28, _ := windows.UTF16PtrFromString(key)
	p_1 = s_28

	hr, _, err1 := syscall.Syscall6(
		v.vtable().Update,
		6,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(valueSizeInBytes),
		uintptr(unsafe.Pointer(value)),
		uintptr(checkSequenceNumber),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) Get(
	transaction *comFabricTransactionBase,
	key string,
) (result *comFabricKeyValueStoreItemResult, err error) {
	var p_1 *uint16
	s_29, _ := windows.UTF16PtrFromString(key)
	p_1 = s_29

	var p_2 *comFabricKeyValueStoreItemResult
	defer func() {
		result = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().Get,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) GetMetadata(
	transaction *comFabricTransactionBase,
	key string,
) (result *comFabricKeyValueStoreItemMetadataResult, err error) {
	var p_1 *uint16
	s_30, _ := windows.UTF16PtrFromString(key)
	p_1 = s_30

	var p_2 *comFabricKeyValueStoreItemMetadataResult
	defer func() {
		result = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().GetMetadata,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) Contains(
	transaction *comFabricTransactionBase,
	key string,
) (result bool, err error) {
	var p_1 *uint16
	s_31, _ := windows.UTF16PtrFromString(key)
	p_1 = s_31

	var p_2 bool
	defer func() {
		result = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().Contains,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) Enumerate(
	transaction *comFabricTransactionBase,
) (result *comFabricKeyValueStoreItemEnumerator, err error) {
	var p_1 *comFabricKeyValueStoreItemEnumerator
	defer func() {
		result = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().Enumerate,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) EnumerateByKey(
	transaction *comFabricTransactionBase,
	keyPrefix string,
) (result *comFabricKeyValueStoreItemEnumerator, err error) {
	var p_1 *uint16
	s_32, _ := windows.UTF16PtrFromString(keyPrefix)
	p_1 = s_32

	var p_2 *comFabricKeyValueStoreItemEnumerator
	defer func() {
		result = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().EnumerateByKey,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) EnumerateMetadata(
	transaction *comFabricTransactionBase,
) (result *comFabricKeyValueStoreItemMetadataEnumerator, err error) {
	var p_1 *comFabricKeyValueStoreItemMetadataEnumerator
	defer func() {
		result = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EnumerateMetadata,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica) EnumerateMetadataByKey(
	transaction *comFabricTransactionBase,
	keyPrefix string,
) (result *comFabricKeyValueStoreItemMetadataEnumerator, err error) {
	var p_1 *uint16
	s_33, _ := windows.UTF16PtrFromString(keyPrefix)
	p_1 = s_33

	var p_2 *comFabricKeyValueStoreItemMetadataEnumerator
	defer func() {
		result = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().EnumerateMetadataByKey,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricKeyValueStoreReplica2 struct {
	comFabricKeyValueStoreReplica
}

type comFabricKeyValueStoreReplica2Vtbl struct {
	comFabricKeyValueStoreReplicaVtbl
	Backup             uintptr
	Restore            uintptr
	CreateTransaction2 uintptr
}

func (v *comFabricKeyValueStoreReplica2) vtable() *comFabricKeyValueStoreReplica2Vtbl {
	return (*comFabricKeyValueStoreReplica2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreReplica2) Backup(
	backupDirectory string,
) (err error) {
	var p_0 *uint16
	s_34, _ := windows.UTF16PtrFromString(backupDirectory)
	p_0 = s_34

	hr, _, err1 := syscall.Syscall(
		v.vtable().Backup,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica2) Restore(
	backupDirectory string,
) (err error) {
	var p_0 *uint16
	s_35, _ := windows.UTF16PtrFromString(backupDirectory)
	p_0 = s_35

	hr, _, err1 := syscall.Syscall(
		v.vtable().Restore,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica2) CreateTransaction2(
	settings *FabricKeyValueStoreTransactionSettings,
) (transaction *comFabricTransaction, err error) {
	var p_0 *innerFabricKeyValueStoreTransactionSettings
	p_0 = settings.toInnerStruct()
	var p_1 *comFabricTransaction
	defer func() {
		transaction = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().CreateTransaction2,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricKeyValueStoreReplica3 struct {
	comFabricKeyValueStoreReplica2
}

type comFabricKeyValueStoreReplica3Vtbl struct {
	comFabricKeyValueStoreReplica2Vtbl
	BeginBackup uintptr
	EndBackup   uintptr
}

func (v *comFabricKeyValueStoreReplica3) vtable() *comFabricKeyValueStoreReplica3Vtbl {
	return (*comFabricKeyValueStoreReplica3Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreReplica3) beginBackup(
	backupDirectory string,
	backupOption FabricStoreBackupOption,
	postBackupHandler *comFabricStorePostBackupHandler,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *uint16
	s_36, _ := windows.UTF16PtrFromString(backupDirectory)
	p_0 = s_36

	var p_4 *comFabricAsyncOperationContext
	defer func() {
		context = p_4
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginBackup,
		6,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(backupOption),
		uintptr(unsafe.Pointer(postBackupHandler)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_4)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica3) endBackup(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndBackup,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricKeyValueStoreReplica4 struct {
	comFabricKeyValueStoreReplica3
}

type comFabricKeyValueStoreReplica4Vtbl struct {
	comFabricKeyValueStoreReplica3Vtbl
	BeginRestore uintptr
	EndRestore   uintptr
}

func (v *comFabricKeyValueStoreReplica4) vtable() *comFabricKeyValueStoreReplica4Vtbl {
	return (*comFabricKeyValueStoreReplica4Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreReplica4) beginRestore(
	backupDirectory string,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *uint16
	s_37, _ := windows.UTF16PtrFromString(backupDirectory)
	p_0 = s_37

	var p_2 *comFabricAsyncOperationContext
	defer func() {
		context = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginRestore,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica4) endRestore(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndRestore,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricKeyValueStoreReplica5 struct {
	comFabricKeyValueStoreReplica4
}

type comFabricKeyValueStoreReplica5Vtbl struct {
	comFabricKeyValueStoreReplica4Vtbl
	TryAdd                  uintptr
	TryRemove               uintptr
	TryUpdate               uintptr
	TryGet                  uintptr
	TryGetMetadata          uintptr
	EnumerateByKey2         uintptr
	EnumerateMetadataByKey2 uintptr
}

func (v *comFabricKeyValueStoreReplica5) vtable() *comFabricKeyValueStoreReplica5Vtbl {
	return (*comFabricKeyValueStoreReplica5Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreReplica5) TryAdd(
	transaction *comFabricTransactionBase,
	key string,
	valueSizeInBytes int32,
	value *byte,
) (added bool, err error) {
	var p_1 *uint16
	s_38, _ := windows.UTF16PtrFromString(key)
	p_1 = s_38

	var p_4 bool
	defer func() {
		added = p_4
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().TryAdd,
		6,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(valueSizeInBytes),
		uintptr(unsafe.Pointer(value)),
		uintptr(unsafe.Pointer(&p_4)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica5) TryRemove(
	transaction *comFabricTransactionBase,
	key string,
	checkSequenceNumber int64,
) (exists bool, err error) {
	var p_1 *uint16
	s_39, _ := windows.UTF16PtrFromString(key)
	p_1 = s_39

	var p_3 bool
	defer func() {
		exists = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().TryRemove,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(checkSequenceNumber),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica5) TryUpdate(
	transaction *comFabricTransactionBase,
	key string,
	valueSizeInBytes int32,
	value *byte,
	checkSequenceNumber int64,
) (exists bool, err error) {
	var p_1 *uint16
	s_40, _ := windows.UTF16PtrFromString(key)
	p_1 = s_40

	var p_5 bool
	defer func() {
		exists = p_5
	}()
	hr, _, err1 := syscall.Syscall9(
		v.vtable().TryUpdate,
		7,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(valueSizeInBytes),
		uintptr(unsafe.Pointer(value)),
		uintptr(checkSequenceNumber),
		uintptr(unsafe.Pointer(&p_5)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica5) TryGet(
	transaction *comFabricTransactionBase,
	key string,
) (result *comFabricKeyValueStoreItemResult, err error) {
	var p_1 *uint16
	s_41, _ := windows.UTF16PtrFromString(key)
	p_1 = s_41

	var p_2 *comFabricKeyValueStoreItemResult
	defer func() {
		result = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().TryGet,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica5) TryGetMetadata(
	transaction *comFabricTransactionBase,
	key string,
) (result *comFabricKeyValueStoreItemMetadataResult, err error) {
	var p_1 *uint16
	s_42, _ := windows.UTF16PtrFromString(key)
	p_1 = s_42

	var p_2 *comFabricKeyValueStoreItemMetadataResult
	defer func() {
		result = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().TryGetMetadata,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica5) EnumerateByKey2(
	transaction *comFabricTransactionBase,
	keyPrefix string,
	strictPrefix bool,
) (result *comFabricKeyValueStoreItemEnumerator, err error) {
	var p_1 *uint16
	s_43, _ := windows.UTF16PtrFromString(keyPrefix)
	p_1 = s_43

	p_2 := 0
	if strictPrefix {
		p_2 = 1
	}
	var p_3 *comFabricKeyValueStoreItemEnumerator
	defer func() {
		result = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().EnumerateByKey2,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(p_2),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreReplica5) EnumerateMetadataByKey2(
	transaction *comFabricTransactionBase,
	keyPrefix string,
	strictPrefix bool,
) (result *comFabricKeyValueStoreItemMetadataEnumerator, err error) {
	var p_1 *uint16
	s_44, _ := windows.UTF16PtrFromString(keyPrefix)
	p_1 = s_44

	p_2 := 0
	if strictPrefix {
		p_2 = 1
	}
	var p_3 *comFabricKeyValueStoreItemMetadataEnumerator
	defer func() {
		result = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().EnumerateMetadataByKey2,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(transaction)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(p_2),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricKeyValueStoreReplica6 struct {
	comFabricKeyValueStoreReplica5
}

type comFabricKeyValueStoreReplica6Vtbl struct {
	comFabricKeyValueStoreReplica5Vtbl
	BeginRestore2 uintptr
}

func (v *comFabricKeyValueStoreReplica6) vtable() *comFabricKeyValueStoreReplica6Vtbl {
	return (*comFabricKeyValueStoreReplica6Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreReplica6) beginRestore2(
	backupDirectory string,
	settings *FabricKeyValueStoreRestoreSettings,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *uint16
	s_45, _ := windows.UTF16PtrFromString(backupDirectory)
	p_0 = s_45

	var p_1 *innerFabricKeyValueStoreRestoreSettings
	p_1 = settings.toInnerStruct()
	var p_3 *comFabricAsyncOperationContext
	defer func() {
		context = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginRestore2,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricKeyValueStoreEnumerator struct {
	ole.IUnknown
}

type comFabricKeyValueStoreEnumeratorVtbl struct {
	ole.IUnknownVtbl
	EnumerateByKey         uintptr
	EnumerateMetadataByKey uintptr
}

func (v *comFabricKeyValueStoreEnumerator) vtable() *comFabricKeyValueStoreEnumeratorVtbl {
	return (*comFabricKeyValueStoreEnumeratorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreEnumerator) EnumerateByKey(
	keyPrefix string,
) (result *comFabricKeyValueStoreItemEnumerator, err error) {
	var p_0 *uint16
	s_46, _ := windows.UTF16PtrFromString(keyPrefix)
	p_0 = s_46

	var p_1 *comFabricKeyValueStoreItemEnumerator
	defer func() {
		result = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EnumerateByKey,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreEnumerator) EnumerateMetadataByKey(
	keyPrefix string,
) (result *comFabricKeyValueStoreItemMetadataEnumerator, err error) {
	var p_0 *uint16
	s_47, _ := windows.UTF16PtrFromString(keyPrefix)
	p_0 = s_47

	var p_1 *comFabricKeyValueStoreItemMetadataEnumerator
	defer func() {
		result = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EnumerateMetadataByKey,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricKeyValueStoreEnumerator2 struct {
	comFabricKeyValueStoreEnumerator
}

type comFabricKeyValueStoreEnumerator2Vtbl struct {
	comFabricKeyValueStoreEnumeratorVtbl
	EnumerateByKey2         uintptr
	EnumerateMetadataByKey2 uintptr
}

func (v *comFabricKeyValueStoreEnumerator2) vtable() *comFabricKeyValueStoreEnumerator2Vtbl {
	return (*comFabricKeyValueStoreEnumerator2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreEnumerator2) EnumerateByKey2(
	keyPrefix string,
	strictPrefix bool,
) (result *comFabricKeyValueStoreItemEnumerator, err error) {
	var p_0 *uint16
	s_48, _ := windows.UTF16PtrFromString(keyPrefix)
	p_0 = s_48

	p_1 := 0
	if strictPrefix {
		p_1 = 1
	}
	var p_2 *comFabricKeyValueStoreItemEnumerator
	defer func() {
		result = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().EnumerateByKey2,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(p_1),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreEnumerator2) EnumerateMetadataByKey2(
	keyPrefix string,
	strictPrefix bool,
) (result *comFabricKeyValueStoreItemMetadataEnumerator, err error) {
	var p_0 *uint16
	s_49, _ := windows.UTF16PtrFromString(keyPrefix)
	p_0 = s_49

	p_1 := 0
	if strictPrefix {
		p_1 = 1
	}
	var p_2 *comFabricKeyValueStoreItemMetadataEnumerator
	defer func() {
		result = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().EnumerateMetadataByKey2,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(p_1),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricKeyValueStoreItemEnumerator struct {
	ole.IUnknown
}

type comFabricKeyValueStoreItemEnumeratorVtbl struct {
	ole.IUnknownVtbl
	MoveNext    uintptr
	get_Current uintptr
}

func (v *comFabricKeyValueStoreItemEnumerator) vtable() *comFabricKeyValueStoreItemEnumeratorVtbl {
	return (*comFabricKeyValueStoreItemEnumeratorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreItemEnumerator) MoveNext() (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().MoveNext,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreItemEnumerator) GetCurrent() (rt *comFabricKeyValueStoreItemResult, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Current,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*comFabricKeyValueStoreItemResult)(unsafe.Pointer(hr))

	rt = tmp
	return
}

type comFabricKeyValueStoreItemMetadataEnumerator struct {
	ole.IUnknown
}

type comFabricKeyValueStoreItemMetadataEnumeratorVtbl struct {
	ole.IUnknownVtbl
	MoveNext    uintptr
	get_Current uintptr
}

func (v *comFabricKeyValueStoreItemMetadataEnumerator) vtable() *comFabricKeyValueStoreItemMetadataEnumeratorVtbl {
	return (*comFabricKeyValueStoreItemMetadataEnumeratorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreItemMetadataEnumerator) MoveNext() (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().MoveNext,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreItemMetadataEnumerator) GetCurrent() (rt *comFabricKeyValueStoreItemMetadataResult, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Current,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*comFabricKeyValueStoreItemMetadataResult)(unsafe.Pointer(hr))

	rt = tmp
	return
}

type comFabricKeyValueStoreNotificationEnumerator struct {
	ole.IUnknown
}

type comFabricKeyValueStoreNotificationEnumeratorVtbl struct {
	ole.IUnknownVtbl
	MoveNext    uintptr
	get_Current uintptr
	Reset       uintptr
}

func (v *comFabricKeyValueStoreNotificationEnumerator) vtable() *comFabricKeyValueStoreNotificationEnumeratorVtbl {
	return (*comFabricKeyValueStoreNotificationEnumeratorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreNotificationEnumerator) MoveNext() (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().MoveNext,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricKeyValueStoreNotificationEnumerator) GetCurrent() (rt *comFabricKeyValueStoreNotification, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Current,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*comFabricKeyValueStoreNotification)(unsafe.Pointer(hr))

	rt = tmp
	return
}
func (v *comFabricKeyValueStoreNotificationEnumerator) Reset() (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().Reset,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}

type comFabricKeyValueStoreItemEnumerator2 struct {
	comFabricKeyValueStoreItemEnumerator
}

type comFabricKeyValueStoreItemEnumerator2Vtbl struct {
	comFabricKeyValueStoreItemEnumeratorVtbl
	TryMoveNext uintptr
}

func (v *comFabricKeyValueStoreItemEnumerator2) vtable() *comFabricKeyValueStoreItemEnumerator2Vtbl {
	return (*comFabricKeyValueStoreItemEnumerator2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreItemEnumerator2) TryMoveNext() (success bool, err error) {
	var p_0 bool
	defer func() {
		success = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().TryMoveNext,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricKeyValueStoreItemMetadataEnumerator2 struct {
	comFabricKeyValueStoreItemMetadataEnumerator
}

type comFabricKeyValueStoreItemMetadataEnumerator2Vtbl struct {
	comFabricKeyValueStoreItemMetadataEnumeratorVtbl
	TryMoveNext uintptr
}

func (v *comFabricKeyValueStoreItemMetadataEnumerator2) vtable() *comFabricKeyValueStoreItemMetadataEnumerator2Vtbl {
	return (*comFabricKeyValueStoreItemMetadataEnumerator2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreItemMetadataEnumerator2) TryMoveNext() (success bool, err error) {
	var p_0 bool
	defer func() {
		success = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().TryMoveNext,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricKeyValueStoreNotificationEnumerator2 struct {
	comFabricKeyValueStoreNotificationEnumerator
}

type comFabricKeyValueStoreNotificationEnumerator2Vtbl struct {
	comFabricKeyValueStoreNotificationEnumeratorVtbl
	TryMoveNext uintptr
}

func (v *comFabricKeyValueStoreNotificationEnumerator2) vtable() *comFabricKeyValueStoreNotificationEnumerator2Vtbl {
	return (*comFabricKeyValueStoreNotificationEnumerator2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreNotificationEnumerator2) TryMoveNext() (success bool, err error) {
	var p_0 bool
	defer func() {
		success = p_0
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().TryMoveNext,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(&p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricKeyValueStoreItemResult struct {
	ole.IUnknown
}

type comFabricKeyValueStoreItemResultVtbl struct {
	ole.IUnknownVtbl
	get_Item uintptr
}

func (v *comFabricKeyValueStoreItemResult) vtable() *comFabricKeyValueStoreItemResultVtbl {
	return (*comFabricKeyValueStoreItemResultVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreItemResult) GetItem() (rt *FabricKeyValueStoreItem, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Item,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricKeyValueStoreItem)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}

type comFabricKeyValueStoreItemMetadataResult struct {
	ole.IUnknown
}

type comFabricKeyValueStoreItemMetadataResultVtbl struct {
	ole.IUnknownVtbl
	get_Metadata uintptr
}

func (v *comFabricKeyValueStoreItemMetadataResult) vtable() *comFabricKeyValueStoreItemMetadataResultVtbl {
	return (*comFabricKeyValueStoreItemMetadataResultVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreItemMetadataResult) GetMetadata() (rt *FabricKeyValueStoreItemMetadata, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Metadata,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricKeyValueStoreItemMetadata)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}

type comFabricKeyValueStoreNotification struct {
	comFabricKeyValueStoreItemResult
}

type comFabricKeyValueStoreNotificationVtbl struct {
	comFabricKeyValueStoreItemResultVtbl
	IsDelete uintptr
}

func (v *comFabricKeyValueStoreNotification) vtable() *comFabricKeyValueStoreNotificationVtbl {
	return (*comFabricKeyValueStoreNotificationVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricKeyValueStoreNotification) IsDelete() (rt bool, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().IsDelete,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	_ = err1
	rt = hr != 0
	return
}

type comFabricStoreEventHandler struct {
	ole.IUnknown
}

type comFabricStoreEventHandlerVtbl struct {
	ole.IUnknownVtbl
	OnDataLoss uintptr
}

func (v *comFabricStoreEventHandler) vtable() *comFabricStoreEventHandlerVtbl {
	return (*comFabricStoreEventHandlerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStoreEventHandler) OnDataLoss() (rt interface{}, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().OnDataLoss,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}

type comFabricStoreEventHandler2 struct {
	comFabricStoreEventHandler
}

type comFabricStoreEventHandler2Vtbl struct {
	comFabricStoreEventHandlerVtbl
	BeginOnDataLoss uintptr
	EndOnDataLoss   uintptr
}

func (v *comFabricStoreEventHandler2) vtable() *comFabricStoreEventHandler2Vtbl {
	return (*comFabricStoreEventHandler2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStoreEventHandler2) beginOnDataLoss(
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_1 *comFabricAsyncOperationContext
	defer func() {
		context = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().BeginOnDataLoss,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStoreEventHandler2) endOnDataLoss(
	context *comFabricAsyncOperationContext,
) (isStateChanged bool, err error) {
	var p_1 bool
	defer func() {
		isStateChanged = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndOnDataLoss,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricStorePostBackupHandler struct {
	ole.IUnknown
}

type comFabricStorePostBackupHandlerVtbl struct {
	ole.IUnknownVtbl
	BeginPostBackup uintptr
	EndPostBackup   uintptr
}

func (v *comFabricStorePostBackupHandler) vtable() *comFabricStorePostBackupHandlerVtbl {
	return (*comFabricStorePostBackupHandlerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricStorePostBackupHandler) beginPostBackup(
	info *FabricStoreBackupInfo,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *innerFabricStoreBackupInfo
	p_0 = info.toInnerStruct()
	var p_2 *comFabricAsyncOperationContext
	defer func() {
		context = p_2
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginPostBackup,
		4,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_2)),
		0,
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricStorePostBackupHandler) endPostBackup(
	context *comFabricAsyncOperationContext,
) (status bool, err error) {
	var p_1 bool
	defer func() {
		status = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndPostBackup,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricSecondaryEventHandler struct {
	ole.IUnknown
}

type comFabricSecondaryEventHandlerVtbl struct {
	ole.IUnknownVtbl
	OnCopyComplete         uintptr
	OnReplicationOperation uintptr
}

func (v *comFabricSecondaryEventHandler) vtable() *comFabricSecondaryEventHandlerVtbl {
	return (*comFabricSecondaryEventHandlerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricSecondaryEventHandler) OnCopyComplete(
	enumerator *comFabricKeyValueStoreEnumerator,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().OnCopyComplete,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(enumerator)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricSecondaryEventHandler) OnReplicationOperation(
	enumerator *comFabricKeyValueStoreNotificationEnumerator,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().OnReplicationOperation,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(enumerator)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricNodeContextResult struct {
	ole.IUnknown
}

type comFabricNodeContextResultVtbl struct {
	ole.IUnknownVtbl
	get_NodeContext uintptr
}

func (v *comFabricNodeContextResult) vtable() *comFabricNodeContextResultVtbl {
	return (*comFabricNodeContextResultVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricNodeContextResult) GetNodeContext() (rt *FabricNodeContext, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_NodeContext,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricNodeContext)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}

type comFabricNodeContextResult2 struct {
	comFabricNodeContextResult
}

type comFabricNodeContextResult2Vtbl struct {
	comFabricNodeContextResultVtbl
	GetDirectory uintptr
}

func (v *comFabricNodeContextResult2) vtable() *comFabricNodeContextResult2Vtbl {
	return (*comFabricNodeContextResult2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricNodeContextResult2) GetDirectory(
	logicalDirectoryName string,
) (directoryPath *comFabricStringResult, err error) {
	var p_0 *uint16
	s_50, _ := windows.UTF16PtrFromString(logicalDirectoryName)
	p_0 = s_50

	var p_1 *comFabricStringResult
	defer func() {
		directoryPath = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().GetDirectory,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricReplicatorSettingsResult struct {
	ole.IUnknown
}

type comFabricReplicatorSettingsResultVtbl struct {
	ole.IUnknownVtbl
	get_ReplicatorSettings uintptr
}

func (v *comFabricReplicatorSettingsResult) vtable() *comFabricReplicatorSettingsResultVtbl {
	return (*comFabricReplicatorSettingsResultVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricReplicatorSettingsResult) GetReplicatorSettings() (rt *FabricReplicatorSettings, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_ReplicatorSettings,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricReplicatorSettings)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}

type comFabricEseLocalStoreSettingsResult struct {
	ole.IUnknown
}

type comFabricEseLocalStoreSettingsResultVtbl struct {
	ole.IUnknownVtbl
	get_Settings uintptr
}

func (v *comFabricEseLocalStoreSettingsResult) vtable() *comFabricEseLocalStoreSettingsResultVtbl {
	return (*comFabricEseLocalStoreSettingsResultVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricEseLocalStoreSettingsResult) GetSettings() (rt *FabricEseLocalStoreSettings, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_Settings,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricEseLocalStoreSettings)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}

type comFabricSecurityCredentialsResult struct {
	ole.IUnknown
}

type comFabricSecurityCredentialsResultVtbl struct {
	ole.IUnknownVtbl
	get_SecurityCredentials uintptr
}

func (v *comFabricSecurityCredentialsResult) vtable() *comFabricSecurityCredentialsResultVtbl {
	return (*comFabricSecurityCredentialsResultVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricSecurityCredentialsResult) GetSecurityCredentials() (rt *FabricSecurityCredentials, err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().get_SecurityCredentials,
		1,
		uintptr(unsafe.Pointer(v)),
		0,
		0,
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (*innerFabricSecurityCredentials)(unsafe.Pointer(hr))

	rt = tmp.toGoStruct()
	return
}

type comFabricCodePackageActivator struct {
	ole.IUnknown
}

type comFabricCodePackageActivatorVtbl struct {
	ole.IUnknownVtbl
	BeginActivateCodePackage          uintptr
	EndActivateCodePackage            uintptr
	BeginDeactivateCodePackage        uintptr
	EndDeactivateCodePackage          uintptr
	AbortCodePackage                  uintptr
	RegisterCodePackageEventHandler   uintptr
	UnregisterCodePackageEventHandler uintptr
}

func (v *comFabricCodePackageActivator) vtable() *comFabricCodePackageActivatorVtbl {
	return (*comFabricCodePackageActivatorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricCodePackageActivator) beginActivateCodePackage(
	codePackageNames []string,
	environment map[string]string,
	timeoutMilliseconds uint32,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *innerFabricStringList
	lst_51 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range codePackageNames {
			var tmpitem *uint16

			s_52, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_52

			tmp = append(tmp, tmpitem)
		}

		lst_51.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_51.Items = &tmp[0]
		}

	}
	p_0 = lst_51
	var p_1 *innerFabricStringMap
	{
		mapobj := &innerFabricStringMap{}

		var tmp []innerFabricApplicationParameter

		for k, v := range environment {
			kv := innerFabricApplicationParameter{}

			s_54, _ := windows.UTF16PtrFromString(k)
			kv.Name = s_54

			s_55, _ := windows.UTF16PtrFromString(v)
			kv.Value = s_55

			tmp = append(tmp, kv)
		}

		mapobj.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			mapobj.Items = &tmp[0]
		}

		p_1 = mapobj
	}
	var p_4 *comFabricAsyncOperationContext
	defer func() {
		context = p_4
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginActivateCodePackage,
		6,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(unsafe.Pointer(p_1)),
		uintptr(timeoutMilliseconds),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_4)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivator) endActivateCodePackage(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndActivateCodePackage,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivator) beginDeactivateCodePackage(
	codePackageNames []string,
	timeoutMilliseconds uint32,
	callback *comIFabricAsyncOperationCallback,
) (context *comFabricAsyncOperationContext, err error) {
	var p_0 *innerFabricStringList
	lst_56 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range codePackageNames {
			var tmpitem *uint16

			s_57, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_57

			tmp = append(tmp, tmpitem)
		}

		lst_56.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_56.Items = &tmp[0]
		}

	}
	p_0 = lst_56
	var p_3 *comFabricAsyncOperationContext
	defer func() {
		context = p_3
	}()
	hr, _, err1 := syscall.Syscall6(
		v.vtable().BeginDeactivateCodePackage,
		5,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		uintptr(timeoutMilliseconds),
		uintptr(unsafe.Pointer(callback)),
		uintptr(unsafe.Pointer(&p_3)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivator) endDeactivateCodePackage(
	context *comFabricAsyncOperationContext,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().EndDeactivateCodePackage,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(context)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivator) AbortCodePackage(
	codePackageNames []string,
) (err error) {
	var p_0 *innerFabricStringList
	lst_58 := &innerFabricStringList{}
	{

		var tmp []*uint16

		for _, item := range codePackageNames {
			var tmpitem *uint16

			s_59, _ := windows.UTF16PtrFromString(item)
			tmpitem = s_59

			tmp = append(tmp, tmpitem)
		}

		lst_58.Count = uint32(len(tmp))
		if len(tmp) > 0 {
			lst_58.Items = &tmp[0]
		}

	}
	p_0 = lst_58
	hr, _, err1 := syscall.Syscall(
		v.vtable().AbortCodePackage,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(p_0)),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivator) RegisterCodePackageEventHandler(
	eventHandler *comFabricCodePackageEventHandler,
) (callbackHandle uint64, err error) {
	var p_1 uint64
	defer func() {
		callbackHandle = p_1
	}()
	hr, _, err1 := syscall.Syscall(
		v.vtable().RegisterCodePackageEventHandler,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(eventHandler)),
		uintptr(unsafe.Pointer(&p_1)),
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}
func (v *comFabricCodePackageActivator) UnregisterCodePackageEventHandler(
	callbackHandle uint64,
) (err error) {
	hr, _, err1 := syscall.Syscall(
		v.vtable().UnregisterCodePackageEventHandler,
		2,
		uintptr(unsafe.Pointer(v)),
		uintptr(callbackHandle),
		0,
	)
	if hr != 0 {
		err = errno(hr, err1)
		return
	}
	return
}

type comFabricCodePackageEventHandler struct {
	ole.IUnknown
}

type comFabricCodePackageEventHandlerVtbl struct {
	ole.IUnknownVtbl
	OnCodePackageEvent uintptr
}

func (v *comFabricCodePackageEventHandler) vtable() *comFabricCodePackageEventHandlerVtbl {
	return (*comFabricCodePackageEventHandlerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *comFabricCodePackageEventHandler) OnCodePackageEvent(
	source *comFabricCodePackageActivator,
	eventDesc *FabricCodePackageEventDescription,
) (rt interface{}, err error) {
	var p_1 *innerFabricCodePackageEventDescription
	p_1 = eventDesc.toInnerStruct()
	hr, _, err1 := syscall.Syscall(
		v.vtable().OnCodePackageEvent,
		3,
		uintptr(unsafe.Pointer(v)),
		uintptr(unsafe.Pointer(source)),
		uintptr(unsafe.Pointer(p_1)),
	)
	if hr == 0 {
		err = err1
		return
	}

	tmp := (unsafe.Pointer)(unsafe.Pointer(hr))

	rt = fromUnsafePointer(tmp)
	return
}
